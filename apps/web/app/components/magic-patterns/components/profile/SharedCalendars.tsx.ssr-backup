import React, { useState } from 'react';
import { CalendarIcon, EyeIcon, UsersIcon, ChevronRightIcon, ExternalLinkIcon, ShareIcon } from 'lucide-react';
import { useNavigate } from 'react-router';
// Mock data for shared calendars
const mockSharedCalendars = [{
  id: 'cal-1',
  title: 'Jazz Events This Month',
  description: 'The best jazz performances happening around Clearwater',
  creator: {
    id: 'user-123',
    name: 'Alex Johnson',
    avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80'
  },
  createdAt: '2024-07-15T10:30:00Z',
  updatedAt: '2024-08-02T14:45:00Z',
  visibility: 'public',
  followers: 42,
  eventCount: 12,
  color: 'bg-blue-100 text-blue-800 border-blue-200',
  events: [{
    id: 'event-1',
    title: 'Clearwater Jazz Holiday',
    date: 'Oct 15-18',
    venue: 'Coachman Park'
  }, {
    id: 'event-2',
    title: 'Jazz at the Capitol',
    date: 'Aug 25',
    venue: 'Capitol Theatre'
  }, {
    id: 'event-3',
    title: 'Smooth Jazz Night',
    date: 'Sep 10',
    venue: 'The District Lounge'
  }]
}, {
  id: 'cal-2',
  title: 'Weekly Yoga Classes',
  description: 'My favorite yoga sessions in the area',
  creator: {
    id: 'user-123',
    name: 'Alex Johnson',
    avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80'
  },
  createdAt: '2024-06-22T09:15:00Z',
  updatedAt: '2024-08-01T11:30:00Z',
  visibility: 'followers',
  followers: 28,
  eventCount: 8,
  color: 'bg-green-100 text-green-800 border-green-200',
  events: [{
    id: 'event-4',
    title: 'Beach Yoga',
    date: 'Every Saturday',
    venue: 'Clearwater Beach'
  }, {
    id: 'event-5',
    title: 'Sunset Yoga',
    date: 'Tuesdays & Thursdays',
    venue: 'Pier 60'
  }, {
    id: 'event-6',
    title: 'Mindful Flow',
    date: 'Mondays',
    venue: 'Clearwater Community Center'
  }]
}, {
  id: 'cal-3',
  title: 'Food Truck Fridays',
  description: 'Tracking all the food truck events on Fridays',
  creator: {
    id: 'user-123',
    name: 'Alex Johnson',
    avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80'
  },
  createdAt: '2024-07-05T16:45:00Z',
  updatedAt: '2024-07-28T18:20:00Z',
  visibility: 'public',
  followers: 76,
  eventCount: 4,
  color: 'bg-orange-100 text-orange-800 border-orange-200',
  events: [{
    id: 'event-7',
    title: 'Downtown Food Trucks',
    date: 'Every Friday',
    venue: 'Cleveland Street'
  }, {
    id: 'event-8',
    title: 'Beach Food Truck Rally',
    date: 'Last Friday',
    venue: 'Clearwater Beach'
  }]
}, {
  id: 'cal-4',
  title: 'Local Art Exhibitions',
  description: 'Art shows and gallery openings in Clearwater',
  creator: {
    id: 'user-123',
    name: 'Alex Johnson',
    avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80'
  },
  createdAt: '2024-06-10T13:30:00Z',
  updatedAt: '2024-07-30T09:15:00Z',
  visibility: 'public',
  followers: 35,
  eventCount: 6,
  color: 'bg-pink-100 text-pink-800 border-pink-200',
  events: [{
    id: 'event-9',
    title: 'First Friday Art Walk',
    date: 'First Friday Monthly',
    venue: 'Downtown Arts District'
  }, {
    id: 'event-10',
    title: 'Local Artists Showcase',
    date: 'Aug 15-20',
    venue: 'Clearwater Main Library'
  }]
}];
type SharedCalendarsProps = {
  userId: string;
};
export const SharedCalendars = ({
  userId
}: SharedCalendarsProps) => {
  const navigate = useNavigate();
  const [expandedCalendar, setExpandedCalendar] = useState<string | null>(null);
  const [shareModalOpen, setShareModalOpen] = useState<string | null>(null);
  const toggleCalendarExpansion = (calendarId: string) => {
    setExpandedCalendar(expandedCalendar === calendarId ? null : calendarId);
  };
  const handleShareCalendar = (e: React.MouseEvent, calendarId: string) => {
    e.stopPropagation();
    setShareModalOpen(calendarId);
  };
  const closeShareModal = () => {
    setShareModalOpen(null);
  };
  // Format date for display
  const formatDate = (dateString: string) => {
    const date = new Date(dateString);
    return date.toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'short',
      day: 'numeric'
    });
  };
  // Get visibility icon and text
  const getVisibilityInfo = (visibility: string) => {
    switch (visibility) {
      case 'public':
        return {
          icon: <EyeIcon className="h-4 w-4" />,
          text: 'Public',
          description: 'Anyone can view this calendar'
        };
      case 'followers':
        return {
          icon: <UsersIcon className="h-4 w-4" />,
          text: 'Followers',
          description: 'Only followers can view this calendar'
        };
      case 'private':
        return {
          icon: <EyeIcon className="h-4 w-4" />,
          text: 'Private',
          description: 'Only you can view this calendar'
        };
      default:
        return {
          icon: <EyeIcon className="h-4 w-4" />,
          text: 'Unknown',
          description: 'Visibility status unknown'
        };
    }
  };
  return <div>
      <div className="mb-4 flex items-center justify-between">
        <h2 className="text-lg font-semibold text-gray-900">
          Shared Calendars
        </h2>
        <span className="text-sm text-gray-500">
          {mockSharedCalendars.length} calendars
        </span>
      </div>
      <div className="space-y-4">
        {mockSharedCalendars.map(calendar => {
        const visibilityInfo = getVisibilityInfo(calendar.visibility);
        const isExpanded = expandedCalendar === calendar.id;
        return <div key={calendar.id} className={`bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden transition-all duration-200 ${isExpanded ? 'shadow-md' : ''}`}>
              <div className={`p-4 cursor-pointer ${calendar.color.replace('text-', 'hover:text-')}`} onClick={() => toggleCalendarExpansion(calendar.id)}>
                <div className="flex justify-between items-start">
                  <div className="flex items-center">
                    <div className={`w-2 h-10 rounded-full ${calendar.color.replace('text-', 'bg-').replace('border-', '')}`}></div>
                    <div className="ml-3">
                      <h3 className="font-medium text-gray-900">
                        {calendar.title}
                      </h3>
                      <p className="text-sm text-gray-500">
                        {calendar.description}
                      </p>
                    </div>
                  </div>
                  <div className="flex flex-col items-end">
                    <div className={`px-2 py-1 rounded-full text-xs ${calendar.color}`}>
                      {calendar.eventCount} events
                    </div>
                    <div className="flex items-center mt-1 text-xs text-gray-500">
                      {visibilityInfo.icon}
                      <span className="ml-1">{visibilityInfo.text}</span>
                    </div>
                  </div>
                </div>
                <div className="mt-2 flex items-center justify-between text-sm">
                  <div className="text-gray-500">
                    <span>Updated {formatDate(calendar.updatedAt)}</span>
                  </div>
                  <div className="flex items-center text-gray-500">
                    <UsersIcon className="h-4 w-4 mr-1" />
                    <span>{calendar.followers} followers</span>
                  </div>
                </div>
              </div>
              {/* Expanded calendar details */}
              {isExpanded && <div className="border-t border-gray-100 bg-gray-50 p-4">
                  <h4 className="text-sm font-medium text-gray-700 mb-2">
                    Upcoming Events
                  </h4>
                  <div className="space-y-2">
                    {calendar.events.map(event => <div key={event.id} className="flex justify-between items-center p-2 bg-white rounded border border-gray-200 hover:bg-gray-50">
                        <div>
                          <div className="font-medium text-sm">
                            {event.title}
                          </div>
                          <div className="text-xs text-gray-500">
                            <span>{event.date}</span>
                            <span className="mx-1">â€¢</span>
                            <span>{event.venue}</span>
                          </div>
                        </div>
                        <button className="text-xs text-indigo-600 hover:text-indigo-800" onClick={e => {
                  e.stopPropagation();
                  navigate(`/event/${event.id}`);
                }}>
                          View
                        </button>
                      </div>)}
                  </div>
                  <div className="mt-4 flex justify-between">
                    <button className="inline-flex items-center px-3 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50" onClick={e => {
                e.stopPropagation();
                navigate(`/calendar/${calendar.id}`);
              }}>
                      <CalendarIcon className="h-3 w-3 mr-1" />
                      View Full Calendar
                    </button>
                    <button className="inline-flex items-center px-3 py-1.5 border border-transparent text-xs font-medium rounded-md text-indigo-700 bg-indigo-100 hover:bg-indigo-200" onClick={e => handleShareCalendar(e, calendar.id)}>
                      <ShareIcon className="h-3 w-3 mr-1" />
                      Share
                    </button>
                  </div>
                </div>}
            </div>;
      })}
      </div>
      {/* Share Modal */}
      {shareModalOpen && <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white rounded-lg max-w-md w-full p-6 shadow-xl">
            <div className="flex justify-between items-start mb-4">
              <h2 className="text-xl font-semibold text-gray-900">
                Share Calendar
              </h2>
              <button onClick={closeShareModal} className="text-gray-500 hover:text-gray-700">
                <svg className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                </svg>
              </button>
            </div>
            <div className="mb-4">
              <p className="text-sm text-gray-500 mb-2">
                Share this calendar with others:
              </p>
              <div className="flex items-center">
                <input type="text" readOnly value={`https://whensthefun.com/calendar/${shareModalOpen}`} className="flex-1 py-2 px-3 border border-gray-300 rounded-l-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" />
                <button className="inline-flex items-center px-3 py-2 border border-transparent shadow-sm text-sm font-medium rounded-r-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" onClick={() => {
              navigator.clipboard.writeText(`https://whensthefun.com/calendar/${shareModalOpen}`);
            }}>
                  Copy
                </button>
              </div>
            </div>
            <div className="mb-4">
              <h3 className="text-sm font-medium text-gray-700 mb-2">
                Share on social media
              </h3>
              <div className="flex space-x-2">
                <button className="p-2 bg-blue-500 text-white rounded-full hover:bg-blue-600">
                  <svg className="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z"></path>
                  </svg>
                </button>
                <button className="p-2 bg-blue-600 text-white rounded-full hover:bg-blue-700">
                  <svg className="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M9 8h-3v4h3v12h5v-12h3.642l.358-4h-4v-1.667c0-.955.192-1.333 1.115-1.333h2.885v-5h-3.808c-3.596 0-5.192 1.583-5.192 4.615v3.385z"></path>
                  </svg>
                </button>
                <button className="p-2 bg-pink-600 text-white rounded-full hover:bg-pink-700">
                  <svg className="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z"></path>
                  </svg>
                </button>
                <button className="p-2 bg-blue-400 text-white rounded-full hover:bg-blue-500">
                  <svg className="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M19.615 3.184c-3.604-.246-11.631-.245-15.23 0-3.897.266-4.356 2.62-4.385 8.816.029 6.185.484 8.549 4.385 8.816 3.6.245 11.626.246 15.23 0 3.897-.266 4.356-2.62 4.385-8.816-.029-6.185-.484-8.549-4.385-8.816zm-10.615 12.816v-8l8 3.993-8 4.007z"></path>
                  </svg>
                </button>
              </div>
            </div>
            <div>
              <h3 className="text-sm font-medium text-gray-700 mb-2">
                Embed on your website
              </h3>
              <textarea rows={3} readOnly className="w-full px-3 py-2 text-sm border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" value={`<iframe src="https://whensthefun.com/embed/calendar/${shareModalOpen}" width="100%" height="600" frameborder="0"></iframe>`}></textarea>
            </div>
            <div className="mt-6 flex justify-end">
              <button className="px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50" onClick={closeShareModal}>
                Close
              </button>
            </div>
          </div>
        </div>}
    </div>;
};