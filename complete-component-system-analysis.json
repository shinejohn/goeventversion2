{
  "timestamp": "2025-09-03T15:24:55.874Z",
  "totalComponents": 238,
  "serviceCategories": {
    "ads": {
      "name": "ads",
      "serviceType": "Advertisement & Promotion System",
      "componentCount": 1,
      "components": [
        {
          "name": "MarginEventAds",
          "functionality": [
            "Display advertisements",
            "Track ad performance",
            "Manage ad placement",
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "Map integration"
          ],
          "complexity": "Complex",
          "contextDescription": "Part of the advertising and promotional system. Handles ad display, tracking, and user engagement with advertisements."
        }
      ]
    },
    "booking": {
      "name": "booking",
      "serviceType": "Booking Workflow System",
      "componentCount": 6,
      "components": [
        {
          "name": "ConfirmationStep",
          "functionality": [
            "Handle booking workflow",
            "Process booking steps",
            "Manage booking state",
            "Form handling",
            "Payment processing",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Part of the step-by-step booking process. Manages booking workflow states and user progress."
        },
        {
          "name": "EventDetailsStep",
          "functionality": [
            "Handle booking workflow",
            "Process booking steps",
            "Manage booking state",
            "Form handling",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Part of the step-by-step booking process. Manages booking workflow states and user progress."
        },
        {
          "name": "ProgressIndicator",
          "functionality": [
            "Handle booking workflow",
            "Process booking steps",
            "Manage booking state",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Part of the step-by-step booking process. Manages booking workflow states and user progress."
        },
        {
          "name": "RequirementsStep",
          "functionality": [
            "Handle booking workflow",
            "Process booking steps",
            "Manage booking state",
            "Form handling",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Part of the step-by-step booking process. Manages booking workflow states and user progress."
        },
        {
          "name": "ReviewStep",
          "functionality": [
            "Handle booking workflow",
            "Process booking steps",
            "Manage booking state",
            "Form handling",
            "Payment processing",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Part of the step-by-step booking process. Manages booking workflow states and user progress."
        },
        {
          "name": "SubmitStep",
          "functionality": [
            "Handle booking workflow",
            "Process booking steps",
            "Manage booking state",
            "Manages component state",
            "Form handling",
            "Payment processing",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": "Part of the step-by-step booking process. Manages booking workflow states and user progress."
        }
      ]
    },
    "booking-form": {
      "name": "booking-form",
      "serviceType": "Booking Form System",
      "componentCount": 7,
      "components": [
        {
          "name": "BookingConfirmation",
          "functionality": [
            "Collect booking information",
            "Validate form data",
            "Submit booking requests",
            "Handle booking workflow",
            "Process booking steps",
            "Manage booking state",
            "Form handling",
            "Payment processing",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Component of the booking form workflow. Collects and validates user information for venue/performer bookings."
        },
        {
          "name": "BookingFormProgress",
          "functionality": [
            "Collect booking information",
            "Validate form data",
            "Submit booking requests",
            "Handle booking workflow",
            "Process booking steps",
            "Manage booking state",
            "Form handling",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Component of the booking form workflow. Collects and validates user information for venue/performer bookings. Handles user input and form submission."
        },
        {
          "name": "ContactPaymentForm",
          "functionality": [
            "Collect booking information",
            "Validate form data",
            "Submit booking requests",
            "Handle booking workflow",
            "Process booking steps",
            "Manage booking state",
            "Form handling",
            "Payment processing"
          ],
          "complexity": "Simple",
          "contextDescription": "Component of the booking form workflow. Collects and validates user information for venue/performer bookings. Handles user input and form submission."
        },
        {
          "name": "EventDetailsForm",
          "functionality": [
            "Collect booking information",
            "Validate form data",
            "Submit booking requests",
            "Handle booking workflow",
            "Process booking steps",
            "Manage booking state",
            "Form handling",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Component of the booking form workflow. Collects and validates user information for venue/performer bookings. Handles user input and form submission."
        },
        {
          "name": "ReviewSubmitForm",
          "functionality": [
            "Collect booking information",
            "Validate form data",
            "Submit booking requests",
            "Handle booking workflow",
            "Process booking steps",
            "Manage booking state",
            "Form handling",
            "Payment processing",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Moderate",
          "contextDescription": "Component of the booking form workflow. Collects and validates user information for venue/performer bookings. Handles user input and form submission."
        },
        {
          "name": "ServicesAddonsForm",
          "functionality": [
            "Collect booking information",
            "Validate form data",
            "Submit booking requests",
            "Handle booking workflow",
            "Process booking steps",
            "Manage booking state",
            "Manages component state",
            "Form handling",
            "Payment processing",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": "Component of the booking form workflow. Collects and validates user information for venue/performer bookings. Handles user input and form submission."
        },
        {
          "name": "SpaceSetupForm",
          "functionality": [
            "Collect booking information",
            "Validate form data",
            "Submit booking requests",
            "Handle booking workflow",
            "Process booking steps",
            "Manage booking state",
            "Form handling",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Component of the booking form workflow. Collects and validates user information for venue/performer bookings. Handles user input and form submission."
        }
      ]
    },
    "bookings": {
      "name": "bookings",
      "serviceType": "Booking Management System",
      "componentCount": 8,
      "components": [
        {
          "name": "ActionButtons",
          "functionality": [
            "Handle booking workflow",
            "Process booking steps",
            "Manage booking state",
            "Manage existing bookings",
            "Display booking history",
            "Handle booking modifications",
            "Manages component state",
            "Calendar functionality"
          ],
          "complexity": "Moderate",
          "contextDescription": "Part of the step-by-step booking process. Manages booking workflow states and user progress."
        },
        {
          "name": "BookingSummaryCard",
          "functionality": [
            "Handle booking workflow",
            "Process booking steps",
            "Manage booking state",
            "Manage existing bookings",
            "Display booking history",
            "Handle booking modifications",
            "Form handling",
            "Calendar functionality"
          ],
          "complexity": "Simple",
          "contextDescription": "Part of the step-by-step booking process. Manages booking workflow states and user progress. Displays information in a card format."
        },
        {
          "name": "ConfettiCelebration",
          "functionality": [
            "Handle booking workflow",
            "Process booking steps",
            "Manage booking state",
            "Manage existing bookings",
            "Display booking history",
            "Handle booking modifications",
            "Manages component state",
            "Handles side effects"
          ],
          "complexity": "Moderate",
          "contextDescription": "Part of the step-by-step booking process. Manages booking workflow states and user progress."
        },
        {
          "name": "FinancialBreakdown",
          "functionality": [
            "Handle booking workflow",
            "Process booking steps",
            "Manage booking state",
            "Manage existing bookings",
            "Display booking history",
            "Handle booking modifications",
            "Form handling",
            "Payment processing"
          ],
          "complexity": "Simple",
          "contextDescription": "Part of the step-by-step booking process. Manages booking workflow states and user progress."
        },
        {
          "name": "OrganizerDashboard",
          "functionality": [
            "Handle booking workflow",
            "Process booking steps",
            "Manage booking state",
            "Manage existing bookings",
            "Display booking history",
            "Handle booking modifications",
            "Manages component state",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Moderate",
          "contextDescription": "Part of the step-by-step booking process. Manages booking workflow states and user progress. Shows analytics and management interface."
        },
        {
          "name": "VenueInformation",
          "functionality": [
            "Handle booking workflow",
            "Process booking steps",
            "Manage booking state",
            "Manage existing bookings",
            "Display booking history",
            "Handle booking modifications",
            "Form handling",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Part of the step-by-step booking process. Manages booking workflow states and user progress."
        },
        {
          "name": "VenueOwnerDashboard",
          "functionality": [
            "Handle booking workflow",
            "Process booking steps",
            "Manage booking state",
            "Manage existing bookings",
            "Display booking history",
            "Handle booking modifications",
            "Manages component state",
            "Form handling",
            "Payment processing",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Moderate",
          "contextDescription": "Part of the step-by-step booking process. Manages booking workflow states and user progress. Shows analytics and management interface."
        },
        {
          "name": "BookingConfirmationPage",
          "functionality": [
            "Handle booking workflow",
            "Process booking steps",
            "Manage booking state",
            "Manage existing bookings",
            "Display booking history",
            "Handle booking modifications",
            "Manages component state",
            "Payment processing",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": "Part of the step-by-step booking process. Manages booking workflow states and user progress. Full page component with complete functionality."
        }
      ]
    },
    "calendar": {
      "name": "calendar",
      "serviceType": "Calendar & Scheduling System",
      "componentCount": 13,
      "components": [
        {
          "name": "AdvancedFilters",
          "functionality": [
            "Display calendar views",
            "Handle date selection",
            "Show event scheduling",
            "Manages component state",
            "Data filtering"
          ],
          "complexity": "Simple",
          "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling."
        },
        {
          "name": "CalendarEngagementBar",
          "functionality": [
            "Display calendar views",
            "Handle date selection",
            "Show event scheduling",
            "Manages component state",
            "Calendar functionality"
          ],
          "complexity": "Moderate",
          "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling."
        },
        {
          "name": "CalendarGrid",
          "functionality": [
            "Display calendar views",
            "Handle date selection",
            "Show event scheduling",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Moderate",
          "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling. Displays items in a grid layout."
        },
        {
          "name": "CalendarHeader",
          "functionality": [
            "Display calendar views",
            "Handle date selection",
            "Show event scheduling",
            "Form handling",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling."
        },
        {
          "name": "CalendarPreview",
          "functionality": [
            "Display calendar views",
            "Handle date selection",
            "Show event scheduling",
            "Form handling",
            "API data fetching",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling."
        },
        {
          "name": "CalendarSidebar",
          "functionality": [
            "Display calendar views",
            "Handle date selection",
            "Show event scheduling",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling."
        },
        {
          "name": "CalendarTabs",
          "functionality": [
            "Display calendar views",
            "Handle date selection",
            "Show event scheduling",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling."
        },
        {
          "name": "CalendarWizard",
          "functionality": [
            "Display calendar views",
            "Handle date selection",
            "Show event scheduling",
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "API data fetching",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Complex",
          "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling."
        },
        {
          "name": "EventCard",
          "functionality": [
            "Display calendar views",
            "Handle date selection",
            "Show event scheduling",
            "Manages component state",
            "Form handling",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Complex",
          "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling. Displays information in a card format."
        },
        {
          "name": "EventList",
          "functionality": [
            "Display calendar views",
            "Handle date selection",
            "Show event scheduling",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling. Renders list of items."
        },
        {
          "name": "QuickFilters",
          "functionality": [
            "Display calendar views",
            "Handle date selection",
            "Show event scheduling",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Simple",
          "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling."
        },
        {
          "name": "ViewToggle",
          "functionality": [
            "Display calendar views",
            "Handle date selection",
            "Show event scheduling",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Simple",
          "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling."
        },
        {
          "name": "[slug]",
          "functionality": [
            "Display calendar views",
            "Handle date selection",
            "Show event scheduling",
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "API data fetching",
            "Calendar functionality",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling."
        }
      ]
    },
    "calendar/wizard": {
      "name": "calendar/wizard",
      "serviceType": "Calendar/Wizard System",
      "componentCount": 4,
      "components": [
        {
          "name": "AutomationRulesStep",
          "functionality": [
            "Display calendar views",
            "Handle date selection",
            "Show event scheduling",
            "Manages component state",
            "Form handling",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling."
        },
        {
          "name": "BasicInfoStep",
          "functionality": [
            "Display calendar views",
            "Handle date selection",
            "Show event scheduling",
            "Manages component state",
            "Form handling",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling."
        },
        {
          "name": "CustomizationStep",
          "functionality": [
            "Display calendar views",
            "Handle date selection",
            "Show event scheduling",
            "Manages component state",
            "Form handling",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Moderate",
          "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling."
        },
        {
          "name": "MonetizationStep",
          "functionality": [
            "Display calendar views",
            "Handle date selection",
            "Show event scheduling",
            "Manages component state",
            "Form handling",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Moderate",
          "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling."
        }
      ]
    },
    "calendars": {
      "name": "calendars",
      "serviceType": "Calendar Management System",
      "componentCount": 5,
      "components": [
        {
          "name": "CalendarCard",
          "functionality": [
            "Display calendar views",
            "Handle date selection",
            "Show event scheduling",
            "Manages component state",
            "Form handling",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling. Displays information in a card format."
        },
        {
          "name": "CalendarFilters",
          "functionality": [
            "Display calendar views",
            "Handle date selection",
            "Show event scheduling",
            "Manages component state",
            "Form handling",
            "API data fetching",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Moderate",
          "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling."
        },
        {
          "name": "FeaturedCalendars",
          "functionality": [
            "Display calendar views",
            "Handle date selection",
            "Show event scheduling",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling."
        },
        {
          "name": "CalendarMarketplacePage",
          "functionality": [
            "Display calendar views",
            "Handle date selection",
            "Show event scheduling",
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "API data fetching",
            "Calendar functionality",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling. Full page component with complete functionality."
        },
        {
          "name": "create",
          "functionality": [
            "Display calendar views",
            "Handle date selection",
            "Show event scheduling",
            "Manages component state",
            "Handles side effects",
            "Calendar functionality"
          ],
          "complexity": "Moderate",
          "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling."
        }
      ]
    },
    "check-in": {
      "name": "check-in",
      "serviceType": "Event Check-in System",
      "componentCount": 4,
      "components": [
        {
          "name": "CheckInButton",
          "functionality": [
            "Handle event check-ins",
            "Verify attendee status",
            "Track attendance",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Part of the event check-in system. Handles attendee verification and attendance tracking."
        },
        {
          "name": "CheckInFeed",
          "functionality": [
            "Handle event check-ins",
            "Verify attendee status",
            "Track attendance",
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Complex",
          "contextDescription": "Part of the event check-in system. Handles attendee verification and attendance tracking."
        },
        {
          "name": "CheckInModal",
          "functionality": [
            "Handle event check-ins",
            "Verify attendee status",
            "Track attendance",
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "Modal dialog display",
            "Map integration"
          ],
          "complexity": "Complex",
          "contextDescription": "Part of the event check-in system. Handles attendee verification and attendance tracking. Displays as a modal dialog overlay."
        },
        {
          "name": "PlannedEventsWidget",
          "functionality": [
            "Handle event check-ins",
            "Verify attendee status",
            "Track attendance",
            "Manages component state",
            "Form handling",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": "Part of the event check-in system. Handles attendee verification and attendance tracking. Embeddable widget component."
        }
      ]
    },
    "checkout": {
      "name": "checkout",
      "serviceType": "Payment Checkout System",
      "componentCount": 4,
      "components": [
        {
          "name": "Invoice",
          "functionality": [
            "Process payments",
            "Handle purchase flow",
            "Generate receipts",
            "Payment processing",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Component of the payment and purchase system. Processes payments and handles transaction flow."
        },
        {
          "name": "CheckoutConfirmationPage",
          "functionality": [
            "Process payments",
            "Handle purchase flow",
            "Generate receipts",
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "Modal dialog display",
            "Payment processing",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Component of the payment and purchase system. Processes payments and handles transaction flow. Full page component with complete functionality."
        },
        {
          "name": "CheckoutDetailsPage",
          "functionality": [
            "Process payments",
            "Handle purchase flow",
            "Generate receipts",
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "Payment processing",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Component of the payment and purchase system. Processes payments and handles transaction flow. Full page component with complete functionality."
        },
        {
          "name": "CheckoutPaymentPage",
          "functionality": [
            "Process payments",
            "Handle purchase flow",
            "Generate receipts",
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "Modal dialog display",
            "Payment processing",
            "Map integration"
          ],
          "complexity": "Complex",
          "contextDescription": "Component of the payment and purchase system. Processes payments and handles transaction flow. Full page component with complete functionality."
        }
      ]
    },
    "dashboard/calendars": {
      "name": "dashboard/calendars",
      "serviceType": "Dashboard/Calendars System",
      "componentCount": 4,
      "components": [
        {
          "name": "AnalyticsOverview",
          "functionality": [
            "Display calendar views",
            "Handle date selection",
            "Show event scheduling",
            "Manages component state",
            "Form handling",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling."
        },
        {
          "name": "CalendarGrid",
          "functionality": [
            "Display calendar views",
            "Handle date selection",
            "Show event scheduling",
            "Manages component state",
            "Form handling",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling. Displays items in a grid layout."
        },
        {
          "name": "PendingActions",
          "functionality": [
            "Display calendar views",
            "Handle date selection",
            "Show event scheduling",
            "Manages component state",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling."
        },
        {
          "name": "QuickActionsBar",
          "functionality": [
            "Display calendar views",
            "Handle date selection",
            "Show event scheduling"
          ],
          "complexity": "Simple",
          "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling."
        }
      ]
    },
    "directory": {
      "name": "directory",
      "serviceType": "Member Directory System",
      "componentCount": 1,
      "components": [
        {
          "name": "MemberDirectory",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "API data fetching",
            "Calendar functionality",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": ""
        }
      ]
    },
    "events": {
      "name": "events",
      "serviceType": "Event Management System",
      "componentCount": 6,
      "components": [
        {
          "name": "ContentTabs",
          "functionality": [
            "Display event information",
            "Handle event interactions",
            "Manage event data",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": "Part of the event management and display system. Shows event information and handles event interactions."
        },
        {
          "name": "EventHero",
          "functionality": [
            "Display event information",
            "Handle event interactions",
            "Manage event data",
            "Form handling"
          ],
          "complexity": "Simple",
          "contextDescription": "Part of the event management and display system. Shows event information and handles event interactions."
        },
        {
          "name": "EventSuggestionModal",
          "functionality": [
            "Display event information",
            "Handle event interactions",
            "Manage event data",
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "Modal dialog display",
            "API data fetching",
            "Calendar functionality",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Part of the event management and display system. Shows event information and handles event interactions. Displays as a modal dialog overlay."
        },
        {
          "name": "RelatedEvents",
          "functionality": [
            "Display event information",
            "Handle event interactions",
            "Manage event data",
            "Form handling",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Part of the event management and display system. Shows event information and handles event interactions."
        },
        {
          "name": "VenueMap",
          "functionality": [
            "Display event information",
            "Handle event interactions",
            "Manage event data",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Part of the event management and display system. Shows event information and handles event interactions."
        },
        {
          "name": "TicketCreatorPage",
          "functionality": [
            "Display event information",
            "Handle event interactions",
            "Manage event data",
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "Modal dialog display",
            "API data fetching",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Part of the event management and display system. Shows event information and handles event interactions. Full page component with complete functionality."
        }
      ]
    },
    "home": {
      "name": "home",
      "serviceType": "Home Page System",
      "componentCount": 1,
      "components": [
        {
          "name": "DateSelector",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "Calendar functionality"
          ],
          "complexity": "Moderate",
          "contextDescription": ""
        }
      ]
    },
    "hub/analytics": {
      "name": "hub/analytics",
      "serviceType": "Hub/Analytics System",
      "componentCount": 5,
      "components": [
        {
          "name": "ContentPerformance",
          "functionality": [
            "Manages component state",
            "Form handling",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": ""
        },
        {
          "name": "ExportTools",
          "functionality": [
            "Manages component state",
            "Form handling",
            "Modal dialog display",
            "Calendar functionality",
            "Data filtering"
          ],
          "complexity": "Moderate",
          "contextDescription": ""
        },
        {
          "name": "MemberInsights",
          "functionality": [
            "Manages component state",
            "Form handling",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Complex",
          "contextDescription": ""
        },
        {
          "name": "OverviewMetrics",
          "functionality": [
            "Form handling",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": ""
        },
        {
          "name": "RevenueReports",
          "functionality": [
            "Form handling",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": ""
        }
      ]
    },
    "hub/articles": {
      "name": "hub/articles",
      "serviceType": "Hub/Articles System",
      "componentCount": 3,
      "components": [
        {
          "name": "ArticleCard",
          "functionality": [
            "Form handling",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Displays information in a card format."
        },
        {
          "name": "ArticleHero",
          "functionality": [
            "Form handling",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": ""
        },
        {
          "name": "PopularArticles",
          "functionality": [
            "Form handling",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": ""
        }
      ]
    },
    "hub/directory": {
      "name": "hub/directory",
      "serviceType": "Hub/Directory System",
      "componentCount": 2,
      "components": [
        {
          "name": "DirectoryCard",
          "functionality": [
            "Manages component state",
            "Form handling",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": "Displays information in a card format."
        },
        {
          "name": "DirectoryFilters",
          "functionality": [
            "Form handling",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Moderate",
          "contextDescription": ""
        }
      ]
    },
    "hub/events": {
      "name": "hub/events",
      "serviceType": "Hub/Events System",
      "componentCount": 6,
      "components": [
        {
          "name": "CalendarView",
          "functionality": [
            "Display event information",
            "Handle event interactions",
            "Manage event data",
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Part of the event management and display system. Shows event information and handles event interactions."
        },
        {
          "name": "EnhancedEventCard",
          "functionality": [
            "Display event information",
            "Handle event interactions",
            "Manage event data",
            "Manages component state",
            "Form handling",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": "Part of the event management and display system. Shows event information and handles event interactions. Displays information in a card format."
        },
        {
          "name": "EventFilters",
          "functionality": [
            "Display event information",
            "Handle event interactions",
            "Manage event data",
            "Form handling",
            "Calendar functionality",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Simple",
          "contextDescription": "Part of the event management and display system. Shows event information and handles event interactions."
        },
        {
          "name": "EventViewToggle",
          "functionality": [
            "Display event information",
            "Handle event interactions",
            "Manage event data",
            "API data fetching",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Part of the event management and display system. Shows event information and handles event interactions."
        },
        {
          "name": "ListView",
          "functionality": [
            "Display event information",
            "Handle event interactions",
            "Manage event data",
            "Form handling",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": "Part of the event management and display system. Shows event information and handles event interactions. Renders list of items."
        },
        {
          "name": "MapView",
          "functionality": [
            "Display event information",
            "Handle event interactions",
            "Manage event data",
            "Manages component state",
            "Handles side effects",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Moderate",
          "contextDescription": "Part of the event management and display system. Shows event information and handles event interactions."
        }
      ]
    },
    "hub/gallery": {
      "name": "hub/gallery",
      "serviceType": "Hub/Gallery System",
      "componentCount": 6,
      "components": [
        {
          "name": "AlbumsList",
          "functionality": [
            "Manages component state",
            "Form handling",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": "Renders list of items."
        },
        {
          "name": "MediaCard",
          "functionality": [
            "Manages component state",
            "Form handling"
          ],
          "complexity": "Moderate",
          "contextDescription": "Displays information in a card format."
        },
        {
          "name": "MediaGrid",
          "functionality": [
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": "Displays items in a grid layout."
        },
        {
          "name": "MediaItem",
          "functionality": [
            "Manages component state",
            "Form handling",
            "API data fetching"
          ],
          "complexity": "Simple",
          "contextDescription": ""
        },
        {
          "name": "MediaLightbox",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "API data fetching",
            "Map integration"
          ],
          "complexity": "Complex",
          "contextDescription": ""
        },
        {
          "name": "MediaUploader",
          "functionality": [
            "Manages component state",
            "Form handling",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": ""
        }
      ]
    },
    "hub-builder": {
      "name": "hub-builder",
      "serviceType": "Hub Creation System",
      "componentCount": 7,
      "components": [
        {
          "name": "DesignCustomizer",
          "functionality": [
            "Manages component state",
            "Form handling",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements."
        },
        {
          "name": "HubBuilderNav",
          "functionality": [
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements."
        },
        {
          "name": "HubPreview",
          "functionality": [
            "Form handling",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Moderate",
          "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements."
        },
        {
          "name": "MonetizationSetup",
          "functionality": [
            "Manages component state",
            "Payment processing",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements."
        },
        {
          "name": "PermissionsRoles",
          "functionality": [
            "Manages component state",
            "Form handling",
            "API data fetching",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements."
        },
        {
          "name": "SectionManager",
          "functionality": [
            "Manages component state",
            "Form handling",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements."
        },
        {
          "name": "SetupWizard",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements."
        }
      ]
    },
    "hubs": {
      "name": "hubs",
      "serviceType": "Hub Discovery System",
      "componentCount": 6,
      "components": [
        {
          "name": "CategoriesGrid",
          "functionality": [
            "Community hub functionality",
            "Hub discovery",
            "Hub management",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Component of the community hub system. Handles hub discovery, creation, and management. Displays items in a grid layout."
        },
        {
          "name": "HeroSection",
          "functionality": [
            "Community hub functionality",
            "Hub discovery",
            "Hub management",
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "Map integration"
          ],
          "complexity": "Complex",
          "contextDescription": "Component of the community hub system. Handles hub discovery, creation, and management."
        },
        {
          "name": "HubCard",
          "functionality": [
            "Community hub functionality",
            "Hub discovery",
            "Hub management",
            "Manages component state",
            "Form handling",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": "Component of the community hub system. Handles hub discovery, creation, and management. Displays information in a card format."
        },
        {
          "name": "SearchFilterBar",
          "functionality": [
            "Community hub functionality",
            "Hub discovery",
            "Hub management",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Simple",
          "contextDescription": "Component of the community hub system. Handles hub discovery, creation, and management."
        },
        {
          "name": "TrendingTopics",
          "functionality": [
            "Community hub functionality",
            "Hub discovery",
            "Hub management",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Component of the community hub system. Handles hub discovery, creation, and management."
        },
        {
          "name": "index",
          "functionality": [
            "Community hub functionality",
            "Hub discovery",
            "Hub management",
            "Form handling",
            "Map integration",
            "Search functionality"
          ],
          "complexity": "Simple",
          "contextDescription": "Component of the community hub system. Handles hub discovery, creation, and management."
        }
      ]
    },
    "layout": {
      "name": "layout",
      "serviceType": "Layout & Navigation System",
      "componentCount": 6,
      "components": [
        {
          "name": "Footer",
          "functionality": [
            "Form handling"
          ],
          "complexity": "Simple",
          "contextDescription": "Core layout component. Provides consistent page structure and navigation."
        },
        {
          "name": "Header",
          "functionality": [
            "Manages component state",
            "Search functionality"
          ],
          "complexity": "Simple",
          "contextDescription": "Core layout component. Provides consistent page structure and navigation."
        },
        {
          "name": "MainHeader",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "Calendar functionality",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Core layout component. Provides consistent page structure and navigation."
        },
        {
          "name": "MainHeaderFixed",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "Calendar functionality",
            "Map integration",
            "Search functionality"
          ],
          "complexity": "Complex",
          "contextDescription": "Core layout component. Provides consistent page structure and navigation."
        },
        {
          "name": "SimpleFooter",
          "functionality": [
            "Form handling"
          ],
          "complexity": "Simple",
          "contextDescription": "Core layout component. Provides consistent page structure and navigation."
        },
        {
          "name": "SimpleHeader",
          "functionality": [
            "Manages component state",
            "Form handling",
            "Map integration",
            "Search functionality"
          ],
          "complexity": "Moderate",
          "contextDescription": "Core layout component. Provides consistent page structure and navigation."
        }
      ]
    },
    "navigation": {
      "name": "navigation",
      "serviceType": "Navigation System",
      "componentCount": 2,
      "components": [
        {
          "name": "FloatingNav",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": ""
        },
        {
          "name": "QuickPageAccess",
          "functionality": [
            "Manages component state",
            "Form handling",
            "Payment processing",
            "Calendar functionality",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Moderate",
          "contextDescription": "Full page component with complete functionality."
        }
      ]
    },
    "performers": {
      "name": "performers",
      "serviceType": "Performer Management System",
      "componentCount": 11,
      "components": [
        {
          "name": "DiscoverySections",
          "functionality": [
            "Show performer profiles",
            "Handle performer booking",
            "Manage performer data",
            "Form handling",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Simple",
          "contextDescription": "Part of the performer management system. Displays performer profiles and handles performer-related interactions."
        },
        {
          "name": "FilterSidebar",
          "functionality": [
            "Show performer profiles",
            "Handle performer booking",
            "Manage performer data",
            "Manages component state",
            "Form handling",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Part of the performer management system. Displays performer profiles and handles performer-related interactions."
        },
        {
          "name": "PerformerCalendar",
          "functionality": [
            "Show performer profiles",
            "Handle performer booking",
            "Manage performer data",
            "Manages component state",
            "Form handling",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Moderate",
          "contextDescription": "Part of the performer management system. Displays performer profiles and handles performer-related interactions."
        },
        {
          "name": "PerformerGrid",
          "functionality": [
            "Show performer profiles",
            "Handle performer booking",
            "Manage performer data",
            "Form handling",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": "Part of the performer management system. Displays performer profiles and handles performer-related interactions. Displays items in a grid layout."
        },
        {
          "name": "PerformerList",
          "functionality": [
            "Show performer profiles",
            "Handle performer booking",
            "Manage performer data",
            "Form handling",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": "Part of the performer management system. Displays performer profiles and handles performer-related interactions. Renders list of items."
        },
        {
          "name": "BookPerformerPage",
          "functionality": [
            "Show performer profiles",
            "Handle performer booking",
            "Manage performer data",
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "API data fetching",
            "Calendar functionality",
            "Map integration",
            "Search functionality"
          ],
          "complexity": "Complex",
          "contextDescription": "Part of the performer management system. Displays performer profiles and handles performer-related interactions. Full page component with complete functionality."
        },
        {
          "name": "MarketReportPage",
          "functionality": [
            "Show performer profiles",
            "Handle performer booking",
            "Manage performer data",
            "Manages component state",
            "Form handling",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Moderate",
          "contextDescription": "Part of the performer management system. Displays performer profiles and handles performer-related interactions. Full page component with complete functionality."
        },
        {
          "name": "PerformerDiscoveryPage",
          "functionality": [
            "Show performer profiles",
            "Handle performer booking",
            "Manage performer data",
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "Calendar functionality",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Part of the performer management system. Displays performer profiles and handles performer-related interactions. Full page component with complete functionality."
        },
        {
          "name": "PerformerManagementPage",
          "functionality": [
            "Show performer profiles",
            "Handle performer booking",
            "Manage performer data",
            "Manages component state",
            "Form handling",
            "Payment processing",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Part of the performer management system. Displays performer profiles and handles performer-related interactions. Full page component with complete functionality."
        },
        {
          "name": "PerformerOnboardingPage",
          "functionality": [
            "Show performer profiles",
            "Handle performer booking",
            "Manage performer data",
            "Manages component state",
            "Form handling",
            "Payment processing",
            "Calendar functionality",
            "Map integration",
            "Search functionality"
          ],
          "complexity": "Simple",
          "contextDescription": "Part of the performer management system. Displays performer profiles and handles performer-related interactions. Full page component with complete functionality."
        },
        {
          "name": "PerformerProfilePage",
          "functionality": [
            "Show performer profiles",
            "Handle performer booking",
            "Manage performer data",
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "API data fetching",
            "Payment processing",
            "Calendar functionality",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Part of the performer management system. Displays performer profiles and handles performer-related interactions. Full page component with complete functionality."
        }
      ]
    },
    "profile": {
      "name": "profile",
      "serviceType": "User Profile System",
      "componentCount": 9,
      "components": [
        {
          "name": "CreateSharedCalendar",
          "functionality": [
            "Manages component state",
            "Form handling",
            "API data fetching",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": ""
        },
        {
          "name": "LikedPerformers",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "API data fetching",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": ""
        },
        {
          "name": "LikedVenues",
          "functionality": [
            "Form handling",
            "API data fetching",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": ""
        },
        {
          "name": "PublicCalendar",
          "functionality": [
            "Manages component state",
            "Form handling",
            "Modal dialog display",
            "API data fetching",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Moderate",
          "contextDescription": ""
        },
        {
          "name": "SharedCalendars",
          "functionality": [
            "Manages component state",
            "Form handling",
            "Modal dialog display",
            "API data fetching",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": ""
        },
        {
          "name": "UserComments",
          "functionality": [
            "Manages component state",
            "Form handling",
            "API data fetching",
            "Map integration"
          ],
          "complexity": "Complex",
          "contextDescription": ""
        },
        {
          "name": "TicketsPage",
          "functionality": [
            "Manages component state",
            "Form handling",
            "Modal dialog display",
            "API data fetching",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "UserProfilePage",
          "functionality": [
            "Manages component state",
            "Form handling",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "UserProfileSettingsPage",
          "functionality": [
            "Manages component state",
            "Form handling",
            "API data fetching",
            "Calendar functionality",
            "Map integration",
            "Search functionality"
          ],
          "complexity": "Complex",
          "contextDescription": "Full page component with complete functionality."
        }
      ]
    },
    "settings": {
      "name": "settings",
      "serviceType": "Settings & Configuration System",
      "componentCount": 7,
      "components": [
        {
          "name": "AvatarUploader",
          "functionality": [
            "Manages component state",
            "Modal dialog display",
            "API data fetching"
          ],
          "complexity": "Moderate",
          "contextDescription": ""
        },
        {
          "name": "NotificationPreferences",
          "functionality": [
            "Manages component state",
            "API data fetching",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": ""
        },
        {
          "name": "PasswordSecurity",
          "functionality": [
            "Manages component state",
            "Form handling",
            "API data fetching",
            "Map integration"
          ],
          "complexity": "Complex",
          "contextDescription": ""
        },
        {
          "name": "PrivacySettings",
          "functionality": [
            "Manages component state",
            "Form handling",
            "API data fetching",
            "Calendar functionality",
            "Search functionality"
          ],
          "complexity": "Moderate",
          "contextDescription": ""
        },
        {
          "name": "ProfileInformation",
          "functionality": [
            "Manages component state",
            "Form handling",
            "API data fetching"
          ],
          "complexity": "Moderate",
          "contextDescription": ""
        },
        {
          "name": "SettingsSidebar",
          "functionality": [
            "Form handling",
            "Payment processing",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": ""
        },
        {
          "name": "AccountSettingsPage",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "API data fetching",
            "Payment processing"
          ],
          "complexity": "Complex",
          "contextDescription": "Full page component with complete functionality."
        }
      ]
    },
    "sharing": {
      "name": "sharing",
      "serviceType": "Social Sharing System",
      "componentCount": 1,
      "components": [
        {
          "name": "ShareEmbedWidget",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "API data fetching",
            "Calendar functionality"
          ],
          "complexity": "Complex",
          "contextDescription": "Embeddable widget component."
        }
      ]
    },
    "subscription": {
      "name": "subscription",
      "serviceType": "Subscription Management System",
      "componentCount": 1,
      "components": [
        {
          "name": "SubscriptionModal",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "Modal dialog display",
            "API data fetching",
            "Payment processing",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Complex",
          "contextDescription": "Displays as a modal dialog overlay."
        }
      ]
    },
    "tickets": {
      "name": "tickets",
      "serviceType": "Ticketing System",
      "componentCount": 5,
      "components": [
        {
          "name": "TicketPurchaseConfirmation",
          "functionality": [
            "Handle ticket sales",
            "Display ticket information",
            "Manage ticket inventory",
            "Manages component state",
            "Form handling",
            "Payment processing",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": "Component of the ticketing system. Handles ticket sales, display, and inventory management."
        },
        {
          "name": "TicketDetailPage",
          "functionality": [
            "Handle ticket sales",
            "Display ticket information",
            "Manage ticket inventory",
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "Modal dialog display",
            "API data fetching",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Component of the ticketing system. Handles ticket sales, display, and inventory management. Full page component with complete functionality."
        },
        {
          "name": "TicketMarketplacePage",
          "functionality": [
            "Handle ticket sales",
            "Display ticket information",
            "Manage ticket inventory",
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "API data fetching",
            "Calendar functionality",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Component of the ticketing system. Handles ticket sales, display, and inventory management. Full page component with complete functionality."
        },
        {
          "name": "TicketPurchasePage",
          "functionality": [
            "Handle ticket sales",
            "Display ticket information",
            "Manage ticket inventory",
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "Modal dialog display",
            "Payment processing",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Complex",
          "contextDescription": "Component of the ticketing system. Handles ticket sales, display, and inventory management. Full page component with complete functionality."
        },
        {
          "name": "TicketSelectionPage",
          "functionality": [
            "Handle ticket sales",
            "Display ticket information",
            "Manage ticket inventory",
            "Manages component state",
            "Handles side effects",
            "API data fetching",
            "Payment processing",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Component of the ticketing system. Handles ticket sales, display, and inventory management. Full page component with complete functionality."
        }
      ]
    },
    "ui": {
      "name": "ui",
      "serviceType": "Core UI Components System",
      "componentCount": 11,
      "components": [
        {
          "name": "CommunityShowcase",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements."
        },
        {
          "name": "DialogContext",
          "functionality": [
            "Manages component state"
          ],
          "complexity": "Moderate",
          "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements."
        },
        {
          "name": "GlobalSearch",
          "functionality": [
            "Manages component state",
            "Form handling",
            "API data fetching",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Moderate",
          "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements."
        },
        {
          "name": "LocationSelector",
          "functionality": [
            "Manages component state",
            "API data fetching",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Moderate",
          "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements."
        },
        {
          "name": "MessageCenter",
          "functionality": [
            "Manages component state",
            "Form handling",
            "Map integration"
          ],
          "complexity": "Complex",
          "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements."
        },
        {
          "name": "NotificationBell",
          "functionality": [
            "Manages component state",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Moderate",
          "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements."
        },
        {
          "name": "PasswordInput",
          "functionality": [
            "Manages component state"
          ],
          "complexity": "Simple",
          "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements."
        },
        {
          "name": "ProfileDropdown",
          "functionality": [
            "Manages component state",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements."
        },
        {
          "name": "RememberMeCheckbox",
          "functionality": [
            "UI display component"
          ],
          "complexity": "Simple",
          "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements."
        },
        {
          "name": "SharePopup",
          "functionality": [
            "Manages component state",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements."
        },
        {
          "name": "SocialLoginButtons",
          "functionality": [
            "Form handling"
          ],
          "complexity": "Simple",
          "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements."
        }
      ]
    },
    "venue-detail": {
      "name": "venue-detail",
      "serviceType": "Venue Detail Display System",
      "componentCount": 11,
      "components": [
        {
          "name": "AmenitiesSection",
          "functionality": [
            "Manages component state",
            "Form handling",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": ""
        },
        {
          "name": "AvailabilityCalendar",
          "functionality": [
            "Manages component state",
            "Form handling",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": ""
        },
        {
          "name": "BookingConfirmationPopup",
          "functionality": [
            "Calendar functionality"
          ],
          "complexity": "Simple",
          "contextDescription": ""
        },
        {
          "name": "BookingRequestPopup",
          "functionality": [
            "Manages component state",
            "Form handling",
            "API data fetching",
            "Calendar functionality"
          ],
          "complexity": "Moderate",
          "contextDescription": ""
        },
        {
          "name": "BookingWidget",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Complex",
          "contextDescription": "Embeddable widget component."
        },
        {
          "name": "ImageGallery",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "Modal dialog display",
            "Map integration"
          ],
          "complexity": "Complex",
          "contextDescription": ""
        },
        {
          "name": "LocationSection",
          "functionality": [
            "Form handling",
            "API data fetching",
            "Map integration",
            "Search functionality"
          ],
          "complexity": "Simple",
          "contextDescription": ""
        },
        {
          "name": "PricingSection",
          "functionality": [
            "Manages component state",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": ""
        },
        {
          "name": "ReviewsSection",
          "functionality": [
            "Manages component state",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": ""
        },
        {
          "name": "SimilarVenues",
          "functionality": [
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": ""
        },
        {
          "name": "SpaceDetailsSection",
          "functionality": [
            "Manages component state",
            "API data fetching",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": ""
        }
      ]
    },
    "venue-marketplace": {
      "name": "venue-marketplace",
      "serviceType": "Venue Discovery System",
      "componentCount": 5,
      "components": [
        {
          "name": "FilterSidebar",
          "functionality": [
            "Manages component state",
            "Form handling",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Moderate",
          "contextDescription": ""
        },
        {
          "name": "MapView",
          "functionality": [
            "Manages component state",
            "Form handling",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Moderate",
          "contextDescription": ""
        },
        {
          "name": "VenueCard",
          "functionality": [
            "Manages component state",
            "Form handling",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": "Displays information in a card format."
        },
        {
          "name": "VenueListItem",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "API data fetching",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": "Renders list of items."
        },
        {
          "name": "VenueMap",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "API data fetching",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": ""
        }
      ]
    },
    "venue-profile": {
      "name": "venue-profile",
      "serviceType": "Venue Profile System",
      "componentCount": 3,
      "components": [
        {
          "name": "VenueBookingWidget",
          "functionality": [
            "Manages component state",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Complex",
          "contextDescription": "Embeddable widget component."
        },
        {
          "name": "VenueImageGallery",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "Modal dialog display",
            "Map integration"
          ],
          "complexity": "Complex",
          "contextDescription": ""
        },
        {
          "name": "VenueSpaceDetails",
          "functionality": [
            "Manages component state",
            "Form handling",
            "Map integration"
          ],
          "complexity": "Complex",
          "contextDescription": ""
        }
      ]
    },
    "root": {
      "name": "root",
      "serviceType": "Root System",
      "componentCount": 28,
      "components": [
        {
          "name": "AboutPage",
          "functionality": [
            "Form handling",
            "Calendar functionality"
          ],
          "complexity": "Simple",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "AdvertisePage",
          "functionality": [
            "Form handling",
            "Calendar functionality",
            "Map integration",
            "Search functionality"
          ],
          "complexity": "Moderate",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "AdvertisingSolutionsPage",
          "functionality": [
            "Form handling",
            "Calendar functionality",
            "Map integration",
            "Search functionality"
          ],
          "complexity": "Moderate",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "BookItPage",
          "functionality": [
            "Form handling",
            "Payment processing",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "BookingMarketplacePage",
          "functionality": [
            "Form handling",
            "Payment processing",
            "Calendar functionality",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Moderate",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "CalendarPage",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "API data fetching",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Complex",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "CareersPage",
          "functionality": [
            "Manages component state",
            "Form handling",
            "API data fetching",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "CommunityImpactPage",
          "functionality": [
            "Form handling",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "ContactUsPage",
          "functionality": [
            "Manages component state",
            "Form handling",
            "API data fetching",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Complex",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "EventDetailPage",
          "functionality": [
            "Manages component state",
            "Form handling",
            "Modal dialog display",
            "API data fetching",
            "Payment processing",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Complex",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "EventOrganizerHubPage",
          "functionality": [
            "Form handling",
            "API data fetching",
            "Payment processing",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "EventsPage",
          "functionality": [
            "Manages component state",
            "Form handling",
            "Calendar functionality",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "GearPage",
          "functionality": [
            "Form handling",
            "Map integration",
            "Search functionality"
          ],
          "complexity": "Simple",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "HomePage",
          "functionality": [
            "Manages component state",
            "Form handling",
            "Calendar functionality",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "HowItWorksPage",
          "functionality": [
            "Form handling",
            "Payment processing",
            "Calendar functionality",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Simple",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "ListYourVenuePage",
          "functionality": [
            "Form handling",
            "API data fetching",
            "Payment processing",
            "Calendar functionality",
            "Map integration",
            "Search functionality"
          ],
          "complexity": "Moderate",
          "contextDescription": "Renders list of items. Full page component with complete functionality."
        },
        {
          "name": "LoginPage",
          "functionality": [
            "Manages component state",
            "Form handling"
          ],
          "complexity": "Moderate",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "NotFoundPage",
          "functionality": [
            "UI display component"
          ],
          "complexity": "Simple",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "PageDirectory",
          "functionality": [
            "Form handling",
            "Payment processing",
            "Calendar functionality",
            "Map integration",
            "Search functionality"
          ],
          "complexity": "Simple",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "PartnerWithUsPage",
          "functionality": [
            "Form handling",
            "API data fetching"
          ],
          "complexity": "Simple",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "PerformerToolsPage",
          "functionality": [
            "Form handling",
            "API data fetching",
            "Payment processing",
            "Calendar functionality",
            "Map integration",
            "Search functionality"
          ],
          "complexity": "Moderate",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "PerformersPage",
          "functionality": [
            "Manages component state",
            "Form handling",
            "API data fetching",
            "Calendar functionality",
            "Map integration",
            "Search functionality"
          ],
          "complexity": "Moderate",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "PressMediaPage",
          "functionality": [
            "Form handling",
            "API data fetching",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "SuccessStoriesPage",
          "functionality": [
            "Form handling",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "TicketsPage",
          "functionality": [
            "Manages component state",
            "Form handling",
            "API data fetching",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "VenuesPage",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "Modal dialog display",
            "API data fetching",
            "Calendar functionality",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "help",
          "functionality": [
            "Manages component state",
            "Form handling",
            "Payment processing",
            "Calendar functionality",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Moderate",
          "contextDescription": ""
        },
        {
          "name": "logout",
          "functionality": [
            "Handles side effects"
          ],
          "complexity": "Moderate",
          "contextDescription": ""
        }
      ]
    },
    "advertise": {
      "name": "advertise",
      "serviceType": "Advertise System",
      "componentCount": 6,
      "components": [
        {
          "name": "AdPackagesPage",
          "functionality": [
            "Form handling",
            "Payment processing",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "AdvertisingContactPage",
          "functionality": [
            "Form handling"
          ],
          "complexity": "Simple",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "EmailCampaignsPage",
          "functionality": [
            "UI display component"
          ],
          "complexity": "Simple",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "EventPromotionPage",
          "functionality": [
            "Calendar functionality"
          ],
          "complexity": "Simple",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "FeaturedListingsPage",
          "functionality": [
            "Search functionality"
          ],
          "complexity": "Simple",
          "contextDescription": "Renders list of items. Full page component with complete functionality."
        },
        {
          "name": "HomepageShowcasePage",
          "functionality": [
            "UI display component"
          ],
          "complexity": "Simple",
          "contextDescription": "Full page component with complete functionality."
        }
      ]
    },
    "auth": {
      "name": "auth",
      "serviceType": "Auth System",
      "componentCount": 4,
      "components": [
        {
          "name": "EmailVerificationPage",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "API data fetching",
            "Calendar functionality",
            "Search functionality"
          ],
          "complexity": "Moderate",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "ForgotPasswordPage",
          "functionality": [
            "Manages component state",
            "Form handling",
            "API data fetching"
          ],
          "complexity": "Moderate",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "RegisterPage",
          "functionality": [
            "Manages component state",
            "Form handling",
            "API data fetching",
            "Calendar functionality"
          ],
          "complexity": "Moderate",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "ResetPasswordPage",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "API data fetching",
            "Search functionality"
          ],
          "complexity": "Complex",
          "contextDescription": "Full page component with complete functionality."
        }
      ]
    },
    "book": {
      "name": "book",
      "serviceType": "Book System",
      "componentCount": 2,
      "components": [
        {
          "name": "BookPerformerPage",
          "functionality": [
            "Manages component state",
            "Form handling",
            "Calendar functionality",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "BookVenuePage",
          "functionality": [
            "Manages component state",
            "Form handling",
            "API data fetching",
            "Calendar functionality",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Full page component with complete functionality."
        }
      ]
    },
    "book-it": {
      "name": "book-it",
      "serviceType": "Book It System",
      "componentCount": 4,
      "components": [
        {
          "name": "GigCreatorPage",
          "functionality": [
            "Manages component state",
            "Form handling",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Moderate",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "GigMarketplacePage",
          "functionality": [
            "Form handling",
            "Payment processing",
            "Calendar functionality",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Simple",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "GigsMarketplacePage",
          "functionality": [
            "Manages component state",
            "Form handling",
            "Calendar functionality",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "VenueMarketplacePage",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "API data fetching",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Full page component with complete functionality."
        }
      ]
    },
    "book-it/venues": {
      "name": "book-it/venues",
      "serviceType": "Book It/Venues System",
      "componentCount": 2,
      "components": [
        {
          "name": "BookingRequestPage",
          "functionality": [
            "Show venue details",
            "Handle venue booking",
            "Display venue availability",
            "Manages component state",
            "Form handling",
            "API data fetching",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Complex",
          "contextDescription": "Part of the venue system. Shows venue details, availability, and booking options. Full page component with complete functionality."
        },
        {
          "name": "VenueDetailPage",
          "functionality": [
            "Show venue details",
            "Handle venue booking",
            "Display venue availability",
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Part of the venue system. Shows venue details, availability, and booking options. Full page component with complete functionality."
        }
      ]
    },
    "calendar/[id]": {
      "name": "calendar/[id]",
      "serviceType": "Calendar/[Id] System",
      "componentCount": 1,
      "components": [
        {
          "name": "edit",
          "functionality": [
            "Display calendar views",
            "Handle date selection",
            "Show event scheduling",
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "API data fetching",
            "Calendar functionality"
          ],
          "complexity": "Moderate",
          "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling."
        }
      ]
    },
    "dashboard": {
      "name": "dashboard",
      "serviceType": "Analytics Dashboard System",
      "componentCount": 1,
      "components": [
        {
          "name": "calendars",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "Calendar functionality",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": ""
        }
      ]
    },
    "hub/[id]": {
      "name": "hub/[id]",
      "serviceType": "Hub/[Id] System",
      "componentCount": 1,
      "components": [
        {
          "name": "edit",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "API data fetching"
          ],
          "complexity": "Complex",
          "contextDescription": ""
        }
      ]
    },
    "hub/[slug]": {
      "name": "hub/[slug]",
      "serviceType": "Hub/[Slug] System",
      "componentCount": 7,
      "components": [
        {
          "name": "analytics",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "API data fetching",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Complex",
          "contextDescription": ""
        },
        {
          "name": "articles",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "API data fetching",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": ""
        },
        {
          "name": "community",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "API data fetching",
            "Calendar functionality",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": ""
        },
        {
          "name": "events",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "API data fetching",
            "Calendar functionality",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": ""
        },
        {
          "name": "gallery",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "Modal dialog display",
            "API data fetching",
            "Calendar functionality",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": ""
        },
        {
          "name": "performers",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "API data fetching",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": ""
        },
        {
          "name": "venues",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "API data fetching",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": ""
        }
      ]
    },
    "hub": {
      "name": "hub",
      "serviceType": "Community Hub System",
      "componentCount": 1,
      "components": [
        {
          "name": "create",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "API data fetching"
          ],
          "complexity": "Complex",
          "contextDescription": ""
        }
      ]
    },
    "my": {
      "name": "my",
      "serviceType": "My System",
      "componentCount": 4,
      "components": [
        {
          "name": "FanDashboardPage",
          "functionality": [
            "Manages component state",
            "Form handling",
            "API data fetching",
            "Calendar functionality",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Shows analytics and management interface. Full page component with complete functionality."
        },
        {
          "name": "calendar",
          "functionality": [
            "Manages component state",
            "Form handling",
            "Modal dialog display",
            "API data fetching",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Moderate",
          "contextDescription": ""
        },
        {
          "name": "dashboard",
          "functionality": [
            "Manages component state",
            "Form handling",
            "API data fetching",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Moderate",
          "contextDescription": ""
        },
        {
          "name": "venues",
          "functionality": [
            "Manages component state",
            "Form handling",
            "Calendar functionality",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": ""
        }
      ]
    },
    "social": {
      "name": "social",
      "serviceType": "Social System",
      "componentCount": 6,
      "components": [
        {
          "name": "FeedPage",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "API data fetching",
            "Calendar functionality",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "FriendsPage",
          "functionality": [
            "Manages component state",
            "Form handling",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "GroupsPage",
          "functionality": [
            "Manages component state",
            "Form handling",
            "Calendar functionality",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "MessagesPage",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "API data fetching",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "NotificationsPage",
          "functionality": [
            "Manages component state",
            "Form handling",
            "API data fetching",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "SocialFeedPage",
          "functionality": [
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "API data fetching",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Full page component with complete functionality."
        }
      ]
    },
    "success-stories": {
      "name": "success-stories",
      "serviceType": "Success Stories System",
      "componentCount": 3,
      "components": [
        {
          "name": "JazzQuartetPage",
          "functionality": [
            "Form handling",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "SunsetMusicFestivalPage",
          "functionality": [
            "Form handling",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Full page component with complete functionality."
        },
        {
          "name": "UrbanLoftPage",
          "functionality": [
            "Form handling",
            "API data fetching",
            "Calendar functionality",
            "Map integration"
          ],
          "complexity": "Simple",
          "contextDescription": "Full page component with complete functionality."
        }
      ]
    },
    "venues": {
      "name": "venues",
      "serviceType": "Venues System",
      "componentCount": 5,
      "components": [
        {
          "name": "NewVenuesPage",
          "functionality": [
            "Show venue details",
            "Handle venue booking",
            "Display venue availability",
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "API data fetching",
            "Calendar functionality",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Part of the venue system. Shows venue details, availability, and booking options. Full page component with complete functionality."
        },
        {
          "name": "SubmitVenuePage",
          "functionality": [
            "Show venue details",
            "Handle venue booking",
            "Display venue availability",
            "Manages component state",
            "Form handling",
            "API data fetching",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Part of the venue system. Shows venue details, availability, and booking options. Full page component with complete functionality."
        },
        {
          "name": "TrendingVenuesPage",
          "functionality": [
            "Show venue details",
            "Handle venue booking",
            "Display venue availability",
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "API data fetching",
            "Calendar functionality",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Part of the venue system. Shows venue details, availability, and booking options. Full page component with complete functionality."
        },
        {
          "name": "VenueDetailPage",
          "functionality": [
            "Show venue details",
            "Handle venue booking",
            "Display venue availability",
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "API data fetching",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Part of the venue system. Shows venue details, availability, and booking options. Full page component with complete functionality."
        },
        {
          "name": "VenueManagementPage",
          "functionality": [
            "Show venue details",
            "Handle venue booking",
            "Display venue availability",
            "Manages component state",
            "Form handling",
            "API data fetching",
            "Payment processing",
            "Calendar functionality",
            "Map integration",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Part of the venue system. Shows venue details, availability, and booking options. Full page component with complete functionality."
        }
      ]
    },
    "venues/[venueId]": {
      "name": "venues/[venueId]",
      "serviceType": "Venues/[VenueId] System",
      "componentCount": 2,
      "components": [
        {
          "name": "[venueSlug]",
          "functionality": [
            "Show venue details",
            "Handle venue booking",
            "Display venue availability",
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "Modal dialog display",
            "API data fetching",
            "Payment processing",
            "Calendar functionality",
            "Map integration",
            "Search functionality",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Part of the venue system. Shows venue details, availability, and booking options."
        },
        {
          "name": "book",
          "functionality": [
            "Show venue details",
            "Handle venue booking",
            "Display venue availability",
            "Manages component state",
            "Handles side effects",
            "Form handling",
            "Payment processing",
            "Data filtering"
          ],
          "complexity": "Complex",
          "contextDescription": "Part of the venue system. Shows venue details, availability, and booking options."
        }
      ]
    }
  },
  "componentUsage": {
    "MarginEventAds": [],
    "ConfirmationStep": [],
    "EventDetailsStep": [],
    "ProgressIndicator": [],
    "RequirementsStep": [],
    "ReviewStep": [],
    "SubmitStep": [],
    "BookingConfirmation": [],
    "BookingFormProgress": [],
    "ContactPaymentForm": [],
    "EventDetailsForm": [],
    "ReviewSubmitForm": [],
    "ServicesAddonsForm": [],
    "SpaceSetupForm": [],
    "ActionButtons": [],
    "BookingSummaryCard": [],
    "ConfettiCelebration": [],
    "FinancialBreakdown": [],
    "OrganizerDashboard": [],
    "VenueInformation": [],
    "VenueOwnerDashboard": [],
    "AdvancedFilters": [],
    "CalendarEngagementBar": [],
    "CalendarGrid": [],
    "CalendarHeader": [],
    "CalendarPreview": [],
    "CalendarSidebar": [],
    "CalendarTabs": [],
    "CalendarWizard": [
      "BasicInfoStep",
      "AutomationRulesStep",
      "CustomizationStep",
      "MonetizationStep",
      "CalendarPreview"
    ],
    "EventCard": [
      "SharePopup"
    ],
    "EventList": [
      "EventCard"
    ],
    "QuickFilters": [],
    "ViewToggle": [],
    "AutomationRulesStep": [],
    "BasicInfoStep": [],
    "CustomizationStep": [],
    "MonetizationStep": [],
    "CalendarCard": [],
    "CalendarFilters": [],
    "FeaturedCalendars": [
      "CalendarCard"
    ],
    "CheckInButton": [
      "CheckInContext"
    ],
    "CheckInFeed": [
      "CheckInContext"
    ],
    "CheckInModal": [
      "CheckInContext"
    ],
    "PlannedEventsWidget": [
      "CheckInContext"
    ],
    "Invoice": [],
    "AnalyticsOverview": [],
    "PendingActions": [],
    "QuickActionsBar": [],
    "MemberDirectory": [],
    "ContentTabs": [],
    "EventHero": [],
    "EventSuggestionModal": [],
    "RelatedEvents": [],
    "VenueMap": [],
    "DateSelector": [],
    "ContentPerformance": [],
    "ExportTools": [],
    "MemberInsights": [],
    "OverviewMetrics": [],
    "RevenueReports": [],
    "ArticleCard": [],
    "ArticleHero": [],
    "PopularArticles": [],
    "DirectoryCard": [],
    "DirectoryFilters": [],
    "CalendarView": [],
    "EnhancedEventCard": [],
    "EventFilters": [],
    "EventViewToggle": [],
    "ListView": [
      "EnhancedEventCard"
    ],
    "MapView": [],
    "AlbumsList": [],
    "MediaCard": [],
    "MediaGrid": [
      "MediaItem"
    ],
    "MediaItem": [],
    "MediaLightbox": [],
    "MediaUploader": [],
    "DesignCustomizer": [
      "create"
    ],
    "HubBuilderNav": [],
    "HubPreview": [
      "create"
    ],
    "MonetizationSetup": [
      "create"
    ],
    "PermissionsRoles": [
      "create"
    ],
    "SectionManager": [
      "create"
    ],
    "SetupWizard": [
      "create"
    ],
    "CategoriesGrid": [],
    "HeroSection": [],
    "HubCard": [],
    "SearchFilterBar": [],
    "TrendingTopics": [],
    "Footer": [],
    "Header": [
      "MainHeader"
    ],
    "MainHeader": [
      "GlobalSearch",
      "LocationSelector",
      "NotificationBell",
      "MessageCenter",
      "ProfileDropdown"
    ],
    "MainHeaderFixed": [
      "GlobalSearch",
      "LocationSelector",
      "NotificationBell",
      "MessageCenter",
      "ProfileDropdown"
    ],
    "SimpleFooter": [],
    "SimpleHeader": [],
    "FloatingNav": [],
    "QuickPageAccess": [],
    "DiscoverySections": [],
    "FilterSidebar": [],
    "PerformerCalendar": [],
    "PerformerGrid": [],
    "PerformerList": [],
    "CreateSharedCalendar": [],
    "LikedPerformers": [],
    "LikedVenues": [],
    "PublicCalendar": [],
    "SharedCalendars": [],
    "UserComments": [],
    "AvatarUploader": [],
    "NotificationPreferences": [],
    "PasswordSecurity": [],
    "PrivacySettings": [],
    "ProfileInformation": [
      "AvatarUploader"
    ],
    "SettingsSidebar": [],
    "ShareEmbedWidget": [],
    "SubscriptionModal": [],
    "TicketPurchaseConfirmation": [],
    "CommunityShowcase": [],
    "DialogContext": [],
    "GlobalSearch": [],
    "LocationSelector": [],
    "MessageCenter": [],
    "NotificationBell": [],
    "PasswordInput": [],
    "ProfileDropdown": [],
    "RememberMeCheckbox": [],
    "SharePopup": [],
    "SocialLoginButtons": [],
    "AmenitiesSection": [],
    "AvailabilityCalendar": [],
    "BookingConfirmationPopup": [],
    "BookingRequestPopup": [],
    "BookingWidget": [],
    "ImageGallery": [],
    "LocationSection": [],
    "PricingSection": [],
    "ReviewsSection": [],
    "SimilarVenues": [],
    "SpaceDetailsSection": [],
    "VenueCard": [],
    "VenueListItem": [],
    "VenueBookingWidget": [],
    "VenueImageGallery": [],
    "VenueSpaceDetails": [],
    "AboutPage": [],
    "AdvertisePage": [],
    "AdvertisingSolutionsPage": [],
    "BookItPage": [],
    "BookingMarketplacePage": [],
    "CalendarPage": [
      "CalendarHeader",
      "ViewToggle",
      "CalendarGrid",
      "EventList"
    ],
    "CareersPage": [],
    "CommunityImpactPage": [],
    "ContactUsPage": [],
    "EventDetailPage": [
      "EventHero",
      "ContentTabs",
      "VenueMap",
      "RelatedEvents",
      "events"
    ],
    "EventOrganizerHubPage": [],
    "EventsPage": [
      "LocationSelector"
    ],
    "GearPage": [],
    "HomePage": [
      "venues",
      "performers",
      "DateSelector",
      "SharePopup"
    ],
    "HowItWorksPage": [],
    "ListYourVenuePage": [],
    "LoginPage": [
      "SocialLoginButtons",
      "PasswordInput",
      "RememberMeCheckbox",
      "CommunityShowcase"
    ],
    "NotFoundPage": [],
    "PageDirectory": [],
    "PartnerWithUsPage": [],
    "PerformerToolsPage": [],
    "PerformersPage": [
      "LocationSelector"
    ],
    "PressMediaPage": [],
    "SuccessStoriesPage": [],
    "TicketsPage": [],
    "VenuesPage": [
      "FilterSidebar",
      "VenueCard",
      "VenueListItem",
      "VenueMap",
      "venues"
    ],
    "AdPackagesPage": [],
    "AdvertisingContactPage": [],
    "EmailCampaignsPage": [],
    "EventPromotionPage": [],
    "FeaturedListingsPage": [],
    "HomepageShowcasePage": [],
    "EmailVerificationPage": [],
    "ForgotPasswordPage": [],
    "RegisterPage": [
      "SocialLoginButtons",
      "PasswordInput"
    ],
    "ResetPasswordPage": [
      "PasswordInput"
    ],
    "BookPerformerPage": [
      "performers"
    ],
    "BookVenuePage": [],
    "GigCreatorPage": [],
    "GigMarketplacePage": [],
    "GigsMarketplacePage": [],
    "VenueMarketplacePage": [
      "FilterSidebar",
      "VenueCard",
      "VenueListItem",
      "MapView",
      "venues"
    ],
    "BookingRequestPage": [
      "venues"
    ],
    "VenueDetailPage": [
      "venues"
    ],
    "BookingConfirmationPage": [],
    "edit": [
      "create",
      "HubBuilderNav",
      "SetupWizard",
      "DesignCustomizer",
      "SectionManager",
      "PermissionsRoles",
      "MonetizationSetup",
      "HubPreview"
    ],
    "[slug]": [
      "CalendarTabs",
      "CalendarSidebar",
      "CalendarEngagementBar",
      "EventCard"
    ],
    "CalendarMarketplacePage": [
      "CalendarCard",
      "CalendarFilters",
      "FeaturedCalendars"
    ],
    "create": [
      "HubBuilderNav",
      "SetupWizard",
      "DesignCustomizer",
      "SectionManager",
      "PermissionsRoles",
      "MonetizationSetup",
      "HubPreview"
    ],
    "CheckoutConfirmationPage": [
      "ProgressIndicator",
      "Invoice"
    ],
    "CheckoutDetailsPage": [
      "ProgressIndicator"
    ],
    "CheckoutPaymentPage": [
      "ProgressIndicator",
      "Invoice"
    ],
    "calendars": [
      "CalendarGrid",
      "AnalyticsOverview",
      "PendingActions",
      "QuickActionsBar"
    ],
    "TicketCreatorPage": [],
    "help": [],
    "analytics": [
      "Footer",
      "OverviewMetrics",
      "ContentPerformance",
      "MemberInsights",
      "RevenueReports",
      "ExportTools"
    ],
    "articles": [
      "Header",
      "Footer",
      "ArticleHero",
      "ArticleCard",
      "PopularArticles"
    ],
    "community": [
      "MainHeader",
      "Footer"
    ],
    "events": [
      "Header",
      "Footer",
      "EventViewToggle",
      "EventFilters",
      "CalendarView",
      "ListView",
      "MapView"
    ],
    "gallery": [
      "MediaGrid",
      "MediaLightbox",
      "MediaUploader",
      "AlbumsList"
    ],
    "performers": [
      "Header",
      "Footer",
      "DirectoryFilters",
      "DirectoryCard",
      "performers"
    ],
    "venues": [
      "venues"
    ],
    "index": [],
    "logout": [],
    "FanDashboardPage": [
      "fanDashboard",
      "PlannedEventsWidget",
      "CheckInFeed"
    ],
    "calendar": [],
    "dashboard": [],
    "MarketReportPage": [],
    "PerformerDiscoveryPage": [
      "performers",
      "FilterSidebar",
      "PerformerGrid",
      "PerformerList",
      "PerformerCalendar",
      "DiscoverySections"
    ],
    "PerformerManagementPage": [],
    "PerformerOnboardingPage": [],
    "PerformerProfilePage": [
      "performers"
    ],
    "UserProfilePage": [
      "PublicCalendar",
      "LikedPerformers",
      "LikedVenues",
      "UserComments",
      "SharedCalendars"
    ],
    "UserProfileSettingsPage": [
      "CreateSharedCalendar"
    ],
    "AccountSettingsPage": [
      "SettingsSidebar",
      "ProfileInformation",
      "PasswordSecurity",
      "PrivacySettings",
      "NotificationPreferences"
    ],
    "FeedPage": [],
    "FriendsPage": [],
    "GroupsPage": [],
    "MessagesPage": [],
    "NotificationsPage": [],
    "SocialFeedPage": [],
    "JazzQuartetPage": [],
    "SunsetMusicFestivalPage": [],
    "UrbanLoftPage": [],
    "TicketDetailPage": [],
    "TicketMarketplacePage": [],
    "TicketPurchasePage": [
      "TicketPurchaseConfirmation"
    ],
    "TicketSelectionPage": [
      "ProgressIndicator"
    ],
    "NewVenuesPage": [],
    "SubmitVenuePage": [],
    "TrendingVenuesPage": [],
    "VenueManagementPage": [
      "venues"
    ],
    "[venueSlug]": [
      "CheckInContext",
      "venues",
      "VenueImageGallery",
      "VenueBookingWidget",
      "VenueSpaceDetails",
      "CheckInButton",
      "CheckInModal",
      "CheckInFeed"
    ],
    "book": [
      "venues",
      "EventDetailsForm",
      "SpaceSetupForm",
      "ServicesAddonsForm",
      "ContactPaymentForm",
      "ReviewSubmitForm",
      "BookingFormProgress",
      "BookingConfirmation"
    ]
  },
  "usedByComponents": {
    "BasicInfoStep": [
      "CalendarWizard"
    ],
    "AutomationRulesStep": [
      "CalendarWizard"
    ],
    "CustomizationStep": [
      "CalendarWizard"
    ],
    "MonetizationStep": [
      "CalendarWizard"
    ],
    "CalendarPreview": [
      "CalendarWizard"
    ],
    "SharePopup": [
      "EventCard",
      "HomePage"
    ],
    "EventCard": [
      "EventList",
      "[slug]"
    ],
    "CalendarCard": [
      "FeaturedCalendars",
      "CalendarMarketplacePage"
    ],
    "CheckInContext": [
      "CheckInButton",
      "CheckInFeed",
      "CheckInModal",
      "PlannedEventsWidget",
      "[venueSlug]"
    ],
    "EnhancedEventCard": [
      "ListView"
    ],
    "MediaItem": [
      "MediaGrid"
    ],
    "create": [
      "DesignCustomizer",
      "HubPreview",
      "MonetizationSetup",
      "PermissionsRoles",
      "SectionManager",
      "SetupWizard",
      "edit"
    ],
    "MainHeader": [
      "Header",
      "community"
    ],
    "GlobalSearch": [
      "MainHeader",
      "MainHeaderFixed"
    ],
    "LocationSelector": [
      "MainHeader",
      "MainHeaderFixed",
      "EventsPage",
      "PerformersPage"
    ],
    "NotificationBell": [
      "MainHeader",
      "MainHeaderFixed"
    ],
    "MessageCenter": [
      "MainHeader",
      "MainHeaderFixed"
    ],
    "ProfileDropdown": [
      "MainHeader",
      "MainHeaderFixed"
    ],
    "AvatarUploader": [
      "ProfileInformation"
    ],
    "CalendarHeader": [
      "CalendarPage"
    ],
    "ViewToggle": [
      "CalendarPage"
    ],
    "CalendarGrid": [
      "CalendarPage",
      "calendars"
    ],
    "EventList": [
      "CalendarPage"
    ],
    "EventHero": [
      "EventDetailPage"
    ],
    "ContentTabs": [
      "EventDetailPage"
    ],
    "VenueMap": [
      "EventDetailPage",
      "VenuesPage"
    ],
    "RelatedEvents": [
      "EventDetailPage"
    ],
    "events": [
      "EventDetailPage"
    ],
    "venues": [
      "HomePage",
      "VenuesPage",
      "VenueMarketplacePage",
      "BookingRequestPage",
      "VenueDetailPage",
      "venues",
      "VenueManagementPage",
      "[venueSlug]",
      "book"
    ],
    "performers": [
      "HomePage",
      "BookPerformerPage",
      "performers",
      "PerformerDiscoveryPage",
      "PerformerProfilePage"
    ],
    "DateSelector": [
      "HomePage"
    ],
    "SocialLoginButtons": [
      "LoginPage",
      "RegisterPage"
    ],
    "PasswordInput": [
      "LoginPage",
      "RegisterPage",
      "ResetPasswordPage"
    ],
    "RememberMeCheckbox": [
      "LoginPage"
    ],
    "CommunityShowcase": [
      "LoginPage"
    ],
    "FilterSidebar": [
      "VenuesPage",
      "VenueMarketplacePage",
      "PerformerDiscoveryPage"
    ],
    "VenueCard": [
      "VenuesPage",
      "VenueMarketplacePage"
    ],
    "VenueListItem": [
      "VenuesPage",
      "VenueMarketplacePage"
    ],
    "MapView": [
      "VenueMarketplacePage",
      "events"
    ],
    "HubBuilderNav": [
      "edit",
      "create"
    ],
    "SetupWizard": [
      "edit",
      "create"
    ],
    "DesignCustomizer": [
      "edit",
      "create"
    ],
    "SectionManager": [
      "edit",
      "create"
    ],
    "PermissionsRoles": [
      "edit",
      "create"
    ],
    "MonetizationSetup": [
      "edit",
      "create"
    ],
    "HubPreview": [
      "edit",
      "create"
    ],
    "CalendarTabs": [
      "[slug]"
    ],
    "CalendarSidebar": [
      "[slug]"
    ],
    "CalendarEngagementBar": [
      "[slug]"
    ],
    "CalendarFilters": [
      "CalendarMarketplacePage"
    ],
    "FeaturedCalendars": [
      "CalendarMarketplacePage"
    ],
    "ProgressIndicator": [
      "CheckoutConfirmationPage",
      "CheckoutDetailsPage",
      "CheckoutPaymentPage",
      "TicketSelectionPage"
    ],
    "Invoice": [
      "CheckoutConfirmationPage",
      "CheckoutPaymentPage"
    ],
    "AnalyticsOverview": [
      "calendars"
    ],
    "PendingActions": [
      "calendars"
    ],
    "QuickActionsBar": [
      "calendars"
    ],
    "Footer": [
      "analytics",
      "articles",
      "community",
      "events",
      "performers"
    ],
    "OverviewMetrics": [
      "analytics"
    ],
    "ContentPerformance": [
      "analytics"
    ],
    "MemberInsights": [
      "analytics"
    ],
    "RevenueReports": [
      "analytics"
    ],
    "ExportTools": [
      "analytics"
    ],
    "Header": [
      "articles",
      "events",
      "performers"
    ],
    "ArticleHero": [
      "articles"
    ],
    "ArticleCard": [
      "articles"
    ],
    "PopularArticles": [
      "articles"
    ],
    "EventViewToggle": [
      "events"
    ],
    "EventFilters": [
      "events"
    ],
    "CalendarView": [
      "events"
    ],
    "ListView": [
      "events"
    ],
    "MediaGrid": [
      "gallery"
    ],
    "MediaLightbox": [
      "gallery"
    ],
    "MediaUploader": [
      "gallery"
    ],
    "AlbumsList": [
      "gallery"
    ],
    "DirectoryFilters": [
      "performers"
    ],
    "DirectoryCard": [
      "performers"
    ],
    "fanDashboard": [
      "FanDashboardPage"
    ],
    "PlannedEventsWidget": [
      "FanDashboardPage"
    ],
    "CheckInFeed": [
      "FanDashboardPage",
      "[venueSlug]"
    ],
    "PerformerGrid": [
      "PerformerDiscoveryPage"
    ],
    "PerformerList": [
      "PerformerDiscoveryPage"
    ],
    "PerformerCalendar": [
      "PerformerDiscoveryPage"
    ],
    "DiscoverySections": [
      "PerformerDiscoveryPage"
    ],
    "PublicCalendar": [
      "UserProfilePage"
    ],
    "LikedPerformers": [
      "UserProfilePage"
    ],
    "LikedVenues": [
      "UserProfilePage"
    ],
    "UserComments": [
      "UserProfilePage"
    ],
    "SharedCalendars": [
      "UserProfilePage"
    ],
    "CreateSharedCalendar": [
      "UserProfileSettingsPage"
    ],
    "SettingsSidebar": [
      "AccountSettingsPage"
    ],
    "ProfileInformation": [
      "AccountSettingsPage"
    ],
    "PasswordSecurity": [
      "AccountSettingsPage"
    ],
    "PrivacySettings": [
      "AccountSettingsPage"
    ],
    "NotificationPreferences": [
      "AccountSettingsPage"
    ],
    "TicketPurchaseConfirmation": [
      "TicketPurchasePage"
    ],
    "VenueImageGallery": [
      "[venueSlug]"
    ],
    "VenueBookingWidget": [
      "[venueSlug]"
    ],
    "VenueSpaceDetails": [
      "[venueSlug]"
    ],
    "CheckInButton": [
      "[venueSlug]"
    ],
    "CheckInModal": [
      "[venueSlug]"
    ],
    "EventDetailsForm": [
      "book"
    ],
    "SpaceSetupForm": [
      "book"
    ],
    "ServicesAddonsForm": [
      "book"
    ],
    "ContactPaymentForm": [
      "book"
    ],
    "ReviewSubmitForm": [
      "book"
    ],
    "BookingFormProgress": [
      "book"
    ],
    "BookingConfirmation": [
      "book"
    ]
  },
  "allComponents": {
    "MarginEventAds": {
      "name": "MarginEventAds",
      "filePath": "components/ads/MarginEventAds.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/ads/MarginEventAds.tsx",
      "serviceCategory": "ads",
      "serviceType": "Advertisement & Promotion System",
      "functionality": [
        "Display advertisements",
        "Track ad performance",
        "Manage ad placement",
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "MarginEventAds"
      ],
      "contextDescription": "Part of the advertising and promotional system. Handles ad display, tracking, and user engagement with advertisements.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Map Integration"
      ]
    },
    "ConfirmationStep": {
      "name": "ConfirmationStep",
      "filePath": "components/booking/ConfirmationStep.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/booking/ConfirmationStep.tsx",
      "serviceCategory": "booking",
      "serviceType": "Booking Workflow System",
      "functionality": [
        "Handle booking workflow",
        "Process booking steps",
        "Manage booking state",
        "Form handling",
        "Payment processing",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "ConfirmationStep"
      ],
      "contextDescription": "Part of the step-by-step booking process. Manages booking workflow states and user progress.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Payment Processing"
      ]
    },
    "EventDetailsStep": {
      "name": "EventDetailsStep",
      "filePath": "components/booking/EventDetailsStep.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/booking/EventDetailsStep.tsx",
      "serviceCategory": "booking",
      "serviceType": "Booking Workflow System",
      "functionality": [
        "Handle booking workflow",
        "Process booking steps",
        "Manage booking state",
        "Form handling",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "EventDetailsStep"
      ],
      "contextDescription": "Part of the step-by-step booking process. Manages booking workflow states and user progress.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Map Integration"
      ]
    },
    "ProgressIndicator": {
      "name": "ProgressIndicator",
      "filePath": "components/booking/ProgressIndicator.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/booking/ProgressIndicator.tsx",
      "serviceCategory": "booking",
      "serviceType": "Booking Workflow System",
      "functionality": [
        "Handle booking workflow",
        "Process booking steps",
        "Manage booking state",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "ProgressIndicator"
      ],
      "contextDescription": "Part of the step-by-step booking process. Manages booking workflow states and user progress.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Map Integration"
      ]
    },
    "RequirementsStep": {
      "name": "RequirementsStep",
      "filePath": "components/booking/RequirementsStep.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/booking/RequirementsStep.tsx",
      "serviceCategory": "booking",
      "serviceType": "Booking Workflow System",
      "functionality": [
        "Handle booking workflow",
        "Process booking steps",
        "Manage booking state",
        "Form handling",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "RequirementsStep"
      ],
      "contextDescription": "Part of the step-by-step booking process. Manages booking workflow states and user progress.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Map Integration"
      ]
    },
    "ReviewStep": {
      "name": "ReviewStep",
      "filePath": "components/booking/ReviewStep.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/booking/ReviewStep.tsx",
      "serviceCategory": "booking",
      "serviceType": "Booking Workflow System",
      "functionality": [
        "Handle booking workflow",
        "Process booking steps",
        "Manage booking state",
        "Form handling",
        "Payment processing",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "ReviewStep"
      ],
      "contextDescription": "Part of the step-by-step booking process. Manages booking workflow states and user progress.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Payment Processing",
        "Map Integration",
        "Social Sharing"
      ]
    },
    "SubmitStep": {
      "name": "SubmitStep",
      "filePath": "components/booking/SubmitStep.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/booking/SubmitStep.tsx",
      "serviceCategory": "booking",
      "serviceType": "Booking Workflow System",
      "functionality": [
        "Handle booking workflow",
        "Process booking steps",
        "Manage booking state",
        "Manages component state",
        "Form handling",
        "Payment processing",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "SubmitStep"
      ],
      "contextDescription": "Part of the step-by-step booking process. Manages booking workflow states and user progress.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Payment Processing",
        "Map Integration"
      ]
    },
    "BookingConfirmation": {
      "name": "BookingConfirmation",
      "filePath": "components/booking-form/BookingConfirmation.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/booking-form/BookingConfirmation.tsx",
      "serviceCategory": "booking-form",
      "serviceType": "Booking Form System",
      "functionality": [
        "Collect booking information",
        "Validate form data",
        "Submit booking requests",
        "Handle booking workflow",
        "Process booking steps",
        "Manage booking state",
        "Form handling",
        "Payment processing",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "BookingConfirmation"
      ],
      "contextDescription": "Component of the booking form workflow. Collects and validates user information for venue/performer bookings.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Payment Processing"
      ]
    },
    "BookingFormProgress": {
      "name": "BookingFormProgress",
      "filePath": "components/booking-form/BookingFormProgress.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/booking-form/BookingFormProgress.tsx",
      "serviceCategory": "booking-form",
      "serviceType": "Booking Form System",
      "functionality": [
        "Collect booking information",
        "Validate form data",
        "Submit booking requests",
        "Handle booking workflow",
        "Process booking steps",
        "Manage booking state",
        "Form handling",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "BookingFormProgress"
      ],
      "contextDescription": "Component of the booking form workflow. Collects and validates user information for venue/performer bookings. Handles user input and form submission.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Map Integration"
      ]
    },
    "ContactPaymentForm": {
      "name": "ContactPaymentForm",
      "filePath": "components/booking-form/ContactPaymentForm.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/booking-form/ContactPaymentForm.tsx",
      "serviceCategory": "booking-form",
      "serviceType": "Booking Form System",
      "functionality": [
        "Collect booking information",
        "Validate form data",
        "Submit booking requests",
        "Handle booking workflow",
        "Process booking steps",
        "Manage booking state",
        "Form handling",
        "Payment processing"
      ],
      "imports": [],
      "exports": [
        "ContactPaymentForm"
      ],
      "contextDescription": "Component of the booking form workflow. Collects and validates user information for venue/performer bookings. Handles user input and form submission.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Payment Processing"
      ]
    },
    "EventDetailsForm": {
      "name": "EventDetailsForm",
      "filePath": "components/booking-form/EventDetailsForm.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/booking-form/EventDetailsForm.tsx",
      "serviceCategory": "booking-form",
      "serviceType": "Booking Form System",
      "functionality": [
        "Collect booking information",
        "Validate form data",
        "Submit booking requests",
        "Handle booking workflow",
        "Process booking steps",
        "Manage booking state",
        "Form handling",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "EventDetailsForm"
      ],
      "contextDescription": "Component of the booking form workflow. Collects and validates user information for venue/performer bookings. Handles user input and form submission.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Map Integration"
      ]
    },
    "ReviewSubmitForm": {
      "name": "ReviewSubmitForm",
      "filePath": "components/booking-form/ReviewSubmitForm.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/booking-form/ReviewSubmitForm.tsx",
      "serviceCategory": "booking-form",
      "serviceType": "Booking Form System",
      "functionality": [
        "Collect booking information",
        "Validate form data",
        "Submit booking requests",
        "Handle booking workflow",
        "Process booking steps",
        "Manage booking state",
        "Form handling",
        "Payment processing",
        "Calendar functionality",
        "Map integration",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "ReviewSubmitForm"
      ],
      "contextDescription": "Component of the booking form workflow. Collects and validates user information for venue/performer bookings. Handles user input and form submission.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Payment Processing",
        "Map Integration",
        "Filtering"
      ]
    },
    "ServicesAddonsForm": {
      "name": "ServicesAddonsForm",
      "filePath": "components/booking-form/ServicesAddonsForm.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/booking-form/ServicesAddonsForm.tsx",
      "serviceCategory": "booking-form",
      "serviceType": "Booking Form System",
      "functionality": [
        "Collect booking information",
        "Validate form data",
        "Submit booking requests",
        "Handle booking workflow",
        "Process booking steps",
        "Manage booking state",
        "Manages component state",
        "Form handling",
        "Payment processing",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "ServicesAddonsForm"
      ],
      "contextDescription": "Component of the booking form workflow. Collects and validates user information for venue/performer bookings. Handles user input and form submission.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Map Integration"
      ]
    },
    "SpaceSetupForm": {
      "name": "SpaceSetupForm",
      "filePath": "components/booking-form/SpaceSetupForm.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/booking-form/SpaceSetupForm.tsx",
      "serviceCategory": "booking-form",
      "serviceType": "Booking Form System",
      "functionality": [
        "Collect booking information",
        "Validate form data",
        "Submit booking requests",
        "Handle booking workflow",
        "Process booking steps",
        "Manage booking state",
        "Form handling",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "SpaceSetupForm"
      ],
      "contextDescription": "Component of the booking form workflow. Collects and validates user information for venue/performer bookings. Handles user input and form submission.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Map Integration"
      ]
    },
    "ActionButtons": {
      "name": "ActionButtons",
      "filePath": "components/bookings/ActionButtons.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/bookings/ActionButtons.tsx",
      "serviceCategory": "bookings",
      "serviceType": "Booking Management System",
      "functionality": [
        "Handle booking workflow",
        "Process booking steps",
        "Manage booking state",
        "Manage existing bookings",
        "Display booking history",
        "Handle booking modifications",
        "Manages component state",
        "Calendar functionality"
      ],
      "imports": [],
      "exports": [
        "ActionButtons"
      ],
      "contextDescription": "Part of the step-by-step booking process. Manages booking workflow states and user progress.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Calendar Integration",
        "File Download",
        "Social Sharing"
      ]
    },
    "BookingSummaryCard": {
      "name": "BookingSummaryCard",
      "filePath": "components/bookings/BookingSummaryCard.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/bookings/BookingSummaryCard.tsx",
      "serviceCategory": "bookings",
      "serviceType": "Booking Management System",
      "functionality": [
        "Handle booking workflow",
        "Process booking steps",
        "Manage booking state",
        "Manage existing bookings",
        "Display booking history",
        "Handle booking modifications",
        "Form handling",
        "Calendar functionality"
      ],
      "imports": [],
      "exports": [
        "BookingSummaryCard"
      ],
      "contextDescription": "Part of the step-by-step booking process. Manages booking workflow states and user progress. Displays information in a card format.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react",
        "react-qr-code"
      ],
      "features": [
        "Form Handling"
      ]
    },
    "ConfettiCelebration": {
      "name": "ConfettiCelebration",
      "filePath": "components/bookings/ConfettiCelebration.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/bookings/ConfettiCelebration.tsx",
      "serviceCategory": "bookings",
      "serviceType": "Booking Management System",
      "functionality": [
        "Handle booking workflow",
        "Process booking steps",
        "Manage booking state",
        "Manage existing bookings",
        "Display booking history",
        "Handle booking modifications",
        "Manages component state",
        "Handles side effects"
      ],
      "imports": [],
      "exports": [
        "ConfettiCelebration"
      ],
      "contextDescription": "Part of the step-by-step booking process. Manages booking workflow states and user progress.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "react-confetti"
      ],
      "features": [
        "State Management",
        "Side Effects"
      ]
    },
    "FinancialBreakdown": {
      "name": "FinancialBreakdown",
      "filePath": "components/bookings/FinancialBreakdown.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/bookings/FinancialBreakdown.tsx",
      "serviceCategory": "bookings",
      "serviceType": "Booking Management System",
      "functionality": [
        "Handle booking workflow",
        "Process booking steps",
        "Manage booking state",
        "Manage existing bookings",
        "Display booking history",
        "Handle booking modifications",
        "Form handling",
        "Payment processing"
      ],
      "imports": [],
      "exports": [
        "FinancialBreakdown"
      ],
      "contextDescription": "Part of the step-by-step booking process. Manages booking workflow states and user progress.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Payment Processing"
      ]
    },
    "OrganizerDashboard": {
      "name": "OrganizerDashboard",
      "filePath": "components/bookings/OrganizerDashboard.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/bookings/OrganizerDashboard.tsx",
      "serviceCategory": "bookings",
      "serviceType": "Booking Management System",
      "functionality": [
        "Handle booking workflow",
        "Process booking steps",
        "Manage booking state",
        "Manage existing bookings",
        "Display booking history",
        "Handle booking modifications",
        "Manages component state",
        "Calendar functionality",
        "Map integration",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "OrganizerDashboard"
      ],
      "contextDescription": "Part of the step-by-step booking process. Manages booking workflow states and user progress. Shows analytics and management interface.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Map Integration",
        "Filtering",
        "File Upload"
      ]
    },
    "VenueInformation": {
      "name": "VenueInformation",
      "filePath": "components/bookings/VenueInformation.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/bookings/VenueInformation.tsx",
      "serviceCategory": "bookings",
      "serviceType": "Booking Management System",
      "functionality": [
        "Handle booking workflow",
        "Process booking steps",
        "Manage booking state",
        "Manage existing bookings",
        "Display booking history",
        "Handle booking modifications",
        "Form handling",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "VenueInformation"
      ],
      "contextDescription": "Part of the step-by-step booking process. Manages booking workflow states and user progress.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Map Integration"
      ]
    },
    "VenueOwnerDashboard": {
      "name": "VenueOwnerDashboard",
      "filePath": "components/bookings/VenueOwnerDashboard.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/bookings/VenueOwnerDashboard.tsx",
      "serviceCategory": "bookings",
      "serviceType": "Booking Management System",
      "functionality": [
        "Handle booking workflow",
        "Process booking steps",
        "Manage booking state",
        "Manage existing bookings",
        "Display booking history",
        "Handle booking modifications",
        "Manages component state",
        "Form handling",
        "Payment processing",
        "Calendar functionality",
        "Map integration",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "VenueOwnerDashboard"
      ],
      "contextDescription": "Part of the step-by-step booking process. Manages booking workflow states and user progress. Shows analytics and management interface.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Payment Processing",
        "Map Integration",
        "Filtering"
      ]
    },
    "AdvancedFilters": {
      "name": "AdvancedFilters",
      "filePath": "components/calendar/AdvancedFilters.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/calendar/AdvancedFilters.tsx",
      "serviceCategory": "calendar",
      "serviceType": "Calendar & Scheduling System",
      "functionality": [
        "Display calendar views",
        "Handle date selection",
        "Show event scheduling",
        "Manages component state",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "AdvancedFilters"
      ],
      "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling.",
      "complexity": "Simple",
      "dependencies": [
        "react"
      ],
      "features": [
        "State Management"
      ]
    },
    "CalendarEngagementBar": {
      "name": "CalendarEngagementBar",
      "filePath": "components/calendar/CalendarEngagementBar.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/calendar/CalendarEngagementBar.tsx",
      "serviceCategory": "calendar",
      "serviceType": "Calendar & Scheduling System",
      "functionality": [
        "Display calendar views",
        "Handle date selection",
        "Show event scheduling",
        "Manages component state",
        "Calendar functionality"
      ],
      "imports": [],
      "exports": [
        "CalendarEngagementBar"
      ],
      "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management"
      ]
    },
    "CalendarGrid": {
      "name": "CalendarGrid",
      "filePath": "components/dashboard/calendars/CalendarGrid.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/dashboard/calendars/CalendarGrid.tsx",
      "serviceCategory": "dashboard/calendars",
      "serviceType": "Dashboard/Calendars System",
      "functionality": [
        "Display calendar views",
        "Handle date selection",
        "Show event scheduling",
        "Manages component state",
        "Form handling",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "CalendarGrid"
      ],
      "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling. Displays items in a grid layout.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Calendar Integration",
        "Map Integration"
      ]
    },
    "CalendarHeader": {
      "name": "CalendarHeader",
      "filePath": "components/calendar/CalendarHeader.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/calendar/CalendarHeader.tsx",
      "serviceCategory": "calendar",
      "serviceType": "Calendar & Scheduling System",
      "functionality": [
        "Display calendar views",
        "Handle date selection",
        "Show event scheduling",
        "Form handling",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "CalendarHeader"
      ],
      "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Form Handling"
      ]
    },
    "CalendarPreview": {
      "name": "CalendarPreview",
      "filePath": "components/calendar/CalendarPreview.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/calendar/CalendarPreview.tsx",
      "serviceCategory": "calendar",
      "serviceType": "Calendar & Scheduling System",
      "functionality": [
        "Display calendar views",
        "Handle date selection",
        "Show event scheduling",
        "Form handling",
        "API data fetching",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "CalendarPreview"
      ],
      "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Data Fetching",
        "Map Integration"
      ]
    },
    "CalendarSidebar": {
      "name": "CalendarSidebar",
      "filePath": "components/calendar/CalendarSidebar.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/calendar/CalendarSidebar.tsx",
      "serviceCategory": "calendar",
      "serviceType": "Calendar & Scheduling System",
      "functionality": [
        "Display calendar views",
        "Handle date selection",
        "Show event scheduling",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "CalendarSidebar"
      ],
      "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "Calendar Integration",
        "Map Integration"
      ]
    },
    "CalendarTabs": {
      "name": "CalendarTabs",
      "filePath": "components/calendar/CalendarTabs.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/calendar/CalendarTabs.tsx",
      "serviceCategory": "calendar",
      "serviceType": "Calendar & Scheduling System",
      "functionality": [
        "Display calendar views",
        "Handle date selection",
        "Show event scheduling",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "CalendarTabs"
      ],
      "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Calendar Integration",
        "Map Integration"
      ]
    },
    "CalendarWizard": {
      "name": "CalendarWizard",
      "filePath": "components/calendar/CalendarWizard.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/calendar/CalendarWizard.tsx",
      "serviceCategory": "calendar",
      "serviceType": "Calendar & Scheduling System",
      "functionality": [
        "Display calendar views",
        "Handle date selection",
        "Show event scheduling",
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "API data fetching",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [
        {
          "path": "./wizard/BasicInfoStep",
          "fullMatch": "import { BasicInfoStep } from './wizard/BasicInfoStep'"
        },
        {
          "path": "./wizard/AutomationRulesStep",
          "fullMatch": "import { AutomationRulesStep } from './wizard/AutomationRulesStep'"
        },
        {
          "path": "./wizard/CustomizationStep",
          "fullMatch": "import { CustomizationStep } from './wizard/CustomizationStep'"
        },
        {
          "path": "./wizard/MonetizationStep",
          "fullMatch": "import { MonetizationStep } from './wizard/MonetizationStep'"
        },
        {
          "path": "./CalendarPreview",
          "fullMatch": "import { CalendarPreview } from './CalendarPreview'"
        }
      ],
      "exports": [
        "CalendarWizard"
      ],
      "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Calendar Integration",
        "Map Integration"
      ]
    },
    "EventCard": {
      "name": "EventCard",
      "filePath": "components/calendar/EventCard.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/calendar/EventCard.tsx",
      "serviceCategory": "calendar",
      "serviceType": "Calendar & Scheduling System",
      "functionality": [
        "Display calendar views",
        "Handle date selection",
        "Show event scheduling",
        "Manages component state",
        "Form handling",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [
        {
          "path": "../ui/SharePopup",
          "fullMatch": "import { SharePopup } from '../ui/SharePopup'"
        }
      ],
      "exports": [
        "EventCard"
      ],
      "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling. Displays information in a card format.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Calendar Integration",
        "Map Integration",
        "File Download",
        "Social Sharing"
      ]
    },
    "EventList": {
      "name": "EventList",
      "filePath": "components/calendar/EventList.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/calendar/EventList.tsx",
      "serviceCategory": "calendar",
      "serviceType": "Calendar & Scheduling System",
      "functionality": [
        "Display calendar views",
        "Handle date selection",
        "Show event scheduling",
        "Map integration"
      ],
      "imports": [
        {
          "path": "./EventCard",
          "fullMatch": "import { EventCard } from './EventCard'"
        }
      ],
      "exports": [
        "EventList"
      ],
      "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling. Renders list of items.",
      "complexity": "Simple",
      "dependencies": [
        "react"
      ],
      "features": [
        "Map Integration"
      ]
    },
    "QuickFilters": {
      "name": "QuickFilters",
      "filePath": "components/calendar/QuickFilters.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/calendar/QuickFilters.tsx",
      "serviceCategory": "calendar",
      "serviceType": "Calendar & Scheduling System",
      "functionality": [
        "Display calendar views",
        "Handle date selection",
        "Show event scheduling",
        "Calendar functionality",
        "Map integration",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "QuickFilters"
      ],
      "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "Calendar Integration",
        "Map Integration",
        "Filtering"
      ]
    },
    "ViewToggle": {
      "name": "ViewToggle",
      "filePath": "components/calendar/ViewToggle.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/calendar/ViewToggle.tsx",
      "serviceCategory": "calendar",
      "serviceType": "Calendar & Scheduling System",
      "functionality": [
        "Display calendar views",
        "Handle date selection",
        "Show event scheduling",
        "Calendar functionality",
        "Map integration",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "ViewToggle"
      ],
      "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Map Integration"
      ]
    },
    "AutomationRulesStep": {
      "name": "AutomationRulesStep",
      "filePath": "components/calendar/wizard/AutomationRulesStep.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/calendar/wizard/AutomationRulesStep.tsx",
      "serviceCategory": "calendar/wizard",
      "serviceType": "Calendar/Wizard System",
      "functionality": [
        "Display calendar views",
        "Handle date selection",
        "Show event scheduling",
        "Manages component state",
        "Form handling",
        "Calendar functionality",
        "Map integration",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "AutomationRulesStep"
      ],
      "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Calendar Integration",
        "Map Integration",
        "Filtering"
      ]
    },
    "BasicInfoStep": {
      "name": "BasicInfoStep",
      "filePath": "components/calendar/wizard/BasicInfoStep.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/calendar/wizard/BasicInfoStep.tsx",
      "serviceCategory": "calendar/wizard",
      "serviceType": "Calendar/Wizard System",
      "functionality": [
        "Display calendar views",
        "Handle date selection",
        "Show event scheduling",
        "Manages component state",
        "Form handling",
        "Calendar functionality",
        "Map integration",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "BasicInfoStep"
      ],
      "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Calendar Integration",
        "Map Integration",
        "Filtering"
      ]
    },
    "CustomizationStep": {
      "name": "CustomizationStep",
      "filePath": "components/calendar/wizard/CustomizationStep.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/calendar/wizard/CustomizationStep.tsx",
      "serviceCategory": "calendar/wizard",
      "serviceType": "Calendar/Wizard System",
      "functionality": [
        "Display calendar views",
        "Handle date selection",
        "Show event scheduling",
        "Manages component state",
        "Form handling",
        "Calendar functionality",
        "Map integration",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "CustomizationStep"
      ],
      "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Calendar Integration",
        "Map Integration",
        "Filtering",
        "File Upload"
      ]
    },
    "MonetizationStep": {
      "name": "MonetizationStep",
      "filePath": "components/calendar/wizard/MonetizationStep.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/calendar/wizard/MonetizationStep.tsx",
      "serviceCategory": "calendar/wizard",
      "serviceType": "Calendar/Wizard System",
      "functionality": [
        "Display calendar views",
        "Handle date selection",
        "Show event scheduling",
        "Manages component state",
        "Form handling",
        "Calendar functionality",
        "Map integration",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "MonetizationStep"
      ],
      "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Calendar Integration",
        "Map Integration",
        "Filtering"
      ]
    },
    "CalendarCard": {
      "name": "CalendarCard",
      "filePath": "components/calendars/CalendarCard.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/calendars/CalendarCard.tsx",
      "serviceCategory": "calendars",
      "serviceType": "Calendar Management System",
      "functionality": [
        "Display calendar views",
        "Handle date selection",
        "Show event scheduling",
        "Manages component state",
        "Form handling",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "CalendarCard"
      ],
      "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling. Displays information in a card format.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Calendar Integration",
        "Map Integration"
      ]
    },
    "CalendarFilters": {
      "name": "CalendarFilters",
      "filePath": "components/calendars/CalendarFilters.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/calendars/CalendarFilters.tsx",
      "serviceCategory": "calendars",
      "serviceType": "Calendar Management System",
      "functionality": [
        "Display calendar views",
        "Handle date selection",
        "Show event scheduling",
        "Manages component state",
        "Form handling",
        "API data fetching",
        "Calendar functionality",
        "Map integration",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "CalendarFilters"
      ],
      "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Data Fetching",
        "Calendar Integration",
        "Map Integration",
        "Filtering"
      ]
    },
    "FeaturedCalendars": {
      "name": "FeaturedCalendars",
      "filePath": "components/calendars/FeaturedCalendars.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/calendars/FeaturedCalendars.tsx",
      "serviceCategory": "calendars",
      "serviceType": "Calendar Management System",
      "functionality": [
        "Display calendar views",
        "Handle date selection",
        "Show event scheduling",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [
        {
          "path": "./CalendarCard",
          "fullMatch": "import { CalendarCard } from './CalendarCard'"
        }
      ],
      "exports": [
        "FeaturedCalendars"
      ],
      "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Calendar Integration",
        "Map Integration"
      ]
    },
    "CheckInButton": {
      "name": "CheckInButton",
      "filePath": "components/check-in/CheckInButton.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/check-in/CheckInButton.tsx",
      "serviceCategory": "check-in",
      "serviceType": "Event Check-in System",
      "functionality": [
        "Handle event check-ins",
        "Verify attendee status",
        "Track attendance",
        "Map integration"
      ],
      "imports": [
        {
          "path": "../../context/CheckInContext",
          "fullMatch": "import { useCheckIn } from '../../context/CheckInContext'"
        }
      ],
      "exports": [
        "CheckInButton"
      ],
      "contextDescription": "Part of the event check-in system. Handles attendee verification and attendance tracking.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": []
    },
    "CheckInFeed": {
      "name": "CheckInFeed",
      "filePath": "components/check-in/CheckInFeed.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/check-in/CheckInFeed.tsx",
      "serviceCategory": "check-in",
      "serviceType": "Event Check-in System",
      "functionality": [
        "Handle event check-ins",
        "Verify attendee status",
        "Track attendance",
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [
        {
          "path": "../../context/CheckInContext",
          "fullMatch": "import { useCheckIn, CheckIn } from '../../context/CheckInContext'"
        }
      ],
      "exports": [
        "CheckInFeed"
      ],
      "contextDescription": "Part of the event check-in system. Handles attendee verification and attendance tracking.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Data Fetching",
        "Map Integration"
      ]
    },
    "CheckInModal": {
      "name": "CheckInModal",
      "filePath": "components/check-in/CheckInModal.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/check-in/CheckInModal.tsx",
      "serviceCategory": "check-in",
      "serviceType": "Event Check-in System",
      "functionality": [
        "Handle event check-ins",
        "Verify attendee status",
        "Track attendance",
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "Modal dialog display",
        "Map integration"
      ],
      "imports": [
        {
          "path": "../../context/CheckInContext",
          "fullMatch": "import { useCheckIn, CheckInLocation } from '../../context/CheckInContext'"
        }
      ],
      "exports": [
        "CheckInModal"
      ],
      "contextDescription": "Part of the event check-in system. Handles attendee verification and attendance tracking. Displays as a modal dialog overlay.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Modal Display",
        "Social Sharing"
      ]
    },
    "PlannedEventsWidget": {
      "name": "PlannedEventsWidget",
      "filePath": "components/check-in/PlannedEventsWidget.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/check-in/PlannedEventsWidget.tsx",
      "serviceCategory": "check-in",
      "serviceType": "Event Check-in System",
      "functionality": [
        "Handle event check-ins",
        "Verify attendee status",
        "Track attendance",
        "Manages component state",
        "Form handling",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [
        {
          "path": "../../context/CheckInContext",
          "fullMatch": "import { useCheckIn, PlannedEvent } from '../../context/CheckInContext'"
        }
      ],
      "exports": [
        "PlannedEventsWidget"
      ],
      "contextDescription": "Part of the event check-in system. Handles attendee verification and attendance tracking. Embeddable widget component.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Calendar Integration",
        "Map Integration",
        "Social Sharing"
      ]
    },
    "Invoice": {
      "name": "Invoice",
      "filePath": "components/checkout/Invoice.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/checkout/Invoice.tsx",
      "serviceCategory": "checkout",
      "serviceType": "Payment Checkout System",
      "functionality": [
        "Process payments",
        "Handle purchase flow",
        "Generate receipts",
        "Payment processing",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "Invoice"
      ],
      "contextDescription": "Component of the payment and purchase system. Processes payments and handles transaction flow.",
      "complexity": "Simple",
      "dependencies": [
        "react"
      ],
      "features": [
        "Payment Processing",
        "Map Integration"
      ]
    },
    "AnalyticsOverview": {
      "name": "AnalyticsOverview",
      "filePath": "components/dashboard/calendars/AnalyticsOverview.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/dashboard/calendars/AnalyticsOverview.tsx",
      "serviceCategory": "dashboard/calendars",
      "serviceType": "Dashboard/Calendars System",
      "functionality": [
        "Display calendar views",
        "Handle date selection",
        "Show event scheduling",
        "Manages component state",
        "Form handling",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "AnalyticsOverview"
      ],
      "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Calendar Integration",
        "Map Integration"
      ]
    },
    "PendingActions": {
      "name": "PendingActions",
      "filePath": "components/dashboard/calendars/PendingActions.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/dashboard/calendars/PendingActions.tsx",
      "serviceCategory": "dashboard/calendars",
      "serviceType": "Dashboard/Calendars System",
      "functionality": [
        "Display calendar views",
        "Handle date selection",
        "Show event scheduling",
        "Manages component state",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "PendingActions"
      ],
      "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Calendar Integration",
        "Map Integration"
      ]
    },
    "QuickActionsBar": {
      "name": "QuickActionsBar",
      "filePath": "components/dashboard/calendars/QuickActionsBar.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/dashboard/calendars/QuickActionsBar.tsx",
      "serviceCategory": "dashboard/calendars",
      "serviceType": "Dashboard/Calendars System",
      "functionality": [
        "Display calendar views",
        "Handle date selection",
        "Show event scheduling"
      ],
      "imports": [],
      "exports": [
        "QuickActionsBar"
      ],
      "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": []
    },
    "MemberDirectory": {
      "name": "MemberDirectory",
      "filePath": "components/directory/MemberDirectory.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/directory/MemberDirectory.tsx",
      "serviceCategory": "directory",
      "serviceType": "Member Directory System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "API data fetching",
        "Calendar functionality",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "MemberDirectory"
      ],
      "contextDescription": "",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Data Fetching",
        "Map Integration",
        "Search Functionality",
        "Filtering"
      ]
    },
    "ContentTabs": {
      "name": "ContentTabs",
      "filePath": "components/events/ContentTabs.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/events/ContentTabs.tsx",
      "serviceCategory": "events",
      "serviceType": "Event Management System",
      "functionality": [
        "Display event information",
        "Handle event interactions",
        "Manage event data",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "ContentTabs"
      ],
      "contextDescription": "Part of the event management and display system. Shows event information and handles event interactions.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Map Integration"
      ]
    },
    "EventHero": {
      "name": "EventHero",
      "filePath": "components/events/EventHero.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/events/EventHero.tsx",
      "serviceCategory": "events",
      "serviceType": "Event Management System",
      "functionality": [
        "Display event information",
        "Handle event interactions",
        "Manage event data",
        "Form handling"
      ],
      "imports": [],
      "exports": [
        "EventHero"
      ],
      "contextDescription": "Part of the event management and display system. Shows event information and handles event interactions.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Social Sharing"
      ]
    },
    "EventSuggestionModal": {
      "name": "EventSuggestionModal",
      "filePath": "components/events/EventSuggestionModal.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/events/EventSuggestionModal.tsx",
      "serviceCategory": "events",
      "serviceType": "Event Management System",
      "functionality": [
        "Display event information",
        "Handle event interactions",
        "Manage event data",
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "Modal dialog display",
        "API data fetching",
        "Calendar functionality",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "EventSuggestionModal"
      ],
      "contextDescription": "Part of the event management and display system. Shows event information and handles event interactions. Displays as a modal dialog overlay.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Modal Display",
        "Calendar Integration",
        "Map Integration",
        "Search Functionality",
        "Filtering",
        "Notifications"
      ]
    },
    "RelatedEvents": {
      "name": "RelatedEvents",
      "filePath": "components/events/RelatedEvents.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/events/RelatedEvents.tsx",
      "serviceCategory": "events",
      "serviceType": "Event Management System",
      "functionality": [
        "Display event information",
        "Handle event interactions",
        "Manage event data",
        "Form handling",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "RelatedEvents"
      ],
      "contextDescription": "Part of the event management and display system. Shows event information and handles event interactions.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "Form Handling",
        "Map Integration"
      ]
    },
    "VenueMap": {
      "name": "VenueMap",
      "filePath": "components/venue-marketplace/VenueMap.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/venue-marketplace/VenueMap.tsx",
      "serviceCategory": "venue-marketplace",
      "serviceType": "Venue Discovery System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "API data fetching",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "VenueMap"
      ],
      "contextDescription": "",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Data Fetching",
        "Map Integration"
      ]
    },
    "DateSelector": {
      "name": "DateSelector",
      "filePath": "components/home/DateSelector.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/home/DateSelector.tsx",
      "serviceCategory": "home",
      "serviceType": "Home Page System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "Calendar functionality"
      ],
      "imports": [],
      "exports": [
        "DateSelector"
      ],
      "contextDescription": "",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling"
      ]
    },
    "ContentPerformance": {
      "name": "ContentPerformance",
      "filePath": "components/hub/analytics/ContentPerformance.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hub/analytics/ContentPerformance.tsx",
      "serviceCategory": "hub/analytics",
      "serviceType": "Hub/Analytics System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "Calendar functionality",
        "Map integration",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "ContentPerformance"
      ],
      "contextDescription": "",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Map Integration",
        "Filtering"
      ]
    },
    "ExportTools": {
      "name": "ExportTools",
      "filePath": "components/hub/analytics/ExportTools.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hub/analytics/ExportTools.tsx",
      "serviceCategory": "hub/analytics",
      "serviceType": "Hub/Analytics System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "Modal dialog display",
        "Calendar functionality",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "ExportTools",
        "handleExport"
      ],
      "contextDescription": "",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Filtering",
        "File Download"
      ]
    },
    "MemberInsights": {
      "name": "MemberInsights",
      "filePath": "components/hub/analytics/MemberInsights.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hub/analytics/MemberInsights.tsx",
      "serviceCategory": "hub/analytics",
      "serviceType": "Hub/Analytics System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "MemberInsights"
      ],
      "contextDescription": "",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Map Integration",
        "Notifications"
      ]
    },
    "OverviewMetrics": {
      "name": "OverviewMetrics",
      "filePath": "components/hub/analytics/OverviewMetrics.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hub/analytics/OverviewMetrics.tsx",
      "serviceCategory": "hub/analytics",
      "serviceType": "Hub/Analytics System",
      "functionality": [
        "Form handling",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "OverviewMetrics"
      ],
      "contextDescription": "",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Map Integration",
        "Social Sharing"
      ]
    },
    "RevenueReports": {
      "name": "RevenueReports",
      "filePath": "components/hub/analytics/RevenueReports.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hub/analytics/RevenueReports.tsx",
      "serviceCategory": "hub/analytics",
      "serviceType": "Hub/Analytics System",
      "functionality": [
        "Form handling",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "RevenueReports"
      ],
      "contextDescription": "",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Map Integration"
      ]
    },
    "ArticleCard": {
      "name": "ArticleCard",
      "filePath": "components/hub/articles/ArticleCard.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hub/articles/ArticleCard.tsx",
      "serviceCategory": "hub/articles",
      "serviceType": "Hub/Articles System",
      "functionality": [
        "Form handling",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "ArticleCard"
      ],
      "contextDescription": "Displays information in a card format.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Map Integration"
      ]
    },
    "ArticleHero": {
      "name": "ArticleHero",
      "filePath": "components/hub/articles/ArticleHero.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hub/articles/ArticleHero.tsx",
      "serviceCategory": "hub/articles",
      "serviceType": "Hub/Articles System",
      "functionality": [
        "Form handling",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "ArticleHero"
      ],
      "contextDescription": "",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Map Integration",
        "Social Sharing"
      ]
    },
    "PopularArticles": {
      "name": "PopularArticles",
      "filePath": "components/hub/articles/PopularArticles.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hub/articles/PopularArticles.tsx",
      "serviceCategory": "hub/articles",
      "serviceType": "Hub/Articles System",
      "functionality": [
        "Form handling",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "PopularArticles"
      ],
      "contextDescription": "",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Map Integration"
      ]
    },
    "DirectoryCard": {
      "name": "DirectoryCard",
      "filePath": "components/hub/directory/DirectoryCard.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hub/directory/DirectoryCard.tsx",
      "serviceCategory": "hub/directory",
      "serviceType": "Hub/Directory System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "DirectoryCard"
      ],
      "contextDescription": "Displays information in a card format.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Map Integration"
      ]
    },
    "DirectoryFilters": {
      "name": "DirectoryFilters",
      "filePath": "components/hub/directory/DirectoryFilters.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hub/directory/DirectoryFilters.tsx",
      "serviceCategory": "hub/directory",
      "serviceType": "Hub/Directory System",
      "functionality": [
        "Form handling",
        "Calendar functionality",
        "Map integration",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "DirectoryFilters"
      ],
      "contextDescription": "",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Map Integration",
        "Filtering"
      ]
    },
    "CalendarView": {
      "name": "CalendarView",
      "filePath": "components/hub/events/CalendarView.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hub/events/CalendarView.tsx",
      "serviceCategory": "hub/events",
      "serviceType": "Hub/Events System",
      "functionality": [
        "Display event information",
        "Handle event interactions",
        "Manage event data",
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "Calendar functionality",
        "Map integration",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "CalendarView"
      ],
      "contextDescription": "Part of the event management and display system. Shows event information and handles event interactions.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Calendar Integration",
        "Map Integration",
        "Filtering"
      ]
    },
    "EnhancedEventCard": {
      "name": "EnhancedEventCard",
      "filePath": "components/hub/events/EnhancedEventCard.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hub/events/EnhancedEventCard.tsx",
      "serviceCategory": "hub/events",
      "serviceType": "Hub/Events System",
      "functionality": [
        "Display event information",
        "Handle event interactions",
        "Manage event data",
        "Manages component state",
        "Form handling",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "EnhancedEventCard"
      ],
      "contextDescription": "Part of the event management and display system. Shows event information and handles event interactions. Displays information in a card format.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Calendar Integration",
        "Map Integration",
        "File Download"
      ]
    },
    "EventFilters": {
      "name": "EventFilters",
      "filePath": "components/hub/events/EventFilters.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hub/events/EventFilters.tsx",
      "serviceCategory": "hub/events",
      "serviceType": "Hub/Events System",
      "functionality": [
        "Display event information",
        "Handle event interactions",
        "Manage event data",
        "Form handling",
        "Calendar functionality",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "EventFilters"
      ],
      "contextDescription": "Part of the event management and display system. Shows event information and handles event interactions.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Map Integration",
        "Search Functionality",
        "Filtering"
      ]
    },
    "EventViewToggle": {
      "name": "EventViewToggle",
      "filePath": "components/hub/events/EventViewToggle.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hub/events/EventViewToggle.tsx",
      "serviceCategory": "hub/events",
      "serviceType": "Hub/Events System",
      "functionality": [
        "Display event information",
        "Handle event interactions",
        "Manage event data",
        "API data fetching",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "EventViewToggle"
      ],
      "contextDescription": "Part of the event management and display system. Shows event information and handles event interactions.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Calendar Integration",
        "Map Integration"
      ]
    },
    "ListView": {
      "name": "ListView",
      "filePath": "components/hub/events/ListView.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hub/events/ListView.tsx",
      "serviceCategory": "hub/events",
      "serviceType": "Hub/Events System",
      "functionality": [
        "Display event information",
        "Handle event interactions",
        "Manage event data",
        "Form handling",
        "Map integration"
      ],
      "imports": [
        {
          "path": "./EnhancedEventCard",
          "fullMatch": "import { EnhancedEventCard } from './EnhancedEventCard'"
        }
      ],
      "exports": [
        "ListView"
      ],
      "contextDescription": "Part of the event management and display system. Shows event information and handles event interactions. Renders list of items.",
      "complexity": "Moderate",
      "dependencies": [
        "react"
      ],
      "features": [
        "Form Handling",
        "Map Integration"
      ]
    },
    "MapView": {
      "name": "MapView",
      "filePath": "components/venue-marketplace/MapView.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/venue-marketplace/MapView.tsx",
      "serviceCategory": "venue-marketplace",
      "serviceType": "Venue Discovery System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "Map integration",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "MapView"
      ],
      "contextDescription": "",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Map Integration",
        "Filtering"
      ]
    },
    "AlbumsList": {
      "name": "AlbumsList",
      "filePath": "components/hub/gallery/AlbumsList.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hub/gallery/AlbumsList.tsx",
      "serviceCategory": "hub/gallery",
      "serviceType": "Hub/Gallery System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "AlbumsList"
      ],
      "contextDescription": "Renders list of items.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Map Integration"
      ]
    },
    "MediaCard": {
      "name": "MediaCard",
      "filePath": "components/hub/gallery/MediaCard.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hub/gallery/MediaCard.tsx",
      "serviceCategory": "hub/gallery",
      "serviceType": "Hub/Gallery System",
      "functionality": [
        "Manages component state",
        "Form handling"
      ],
      "imports": [],
      "exports": [
        "MediaCard"
      ],
      "contextDescription": "Displays information in a card format.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "File Upload",
        "Social Sharing"
      ]
    },
    "MediaGrid": {
      "name": "MediaGrid",
      "filePath": "components/hub/gallery/MediaGrid.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hub/gallery/MediaGrid.tsx",
      "serviceCategory": "hub/gallery",
      "serviceType": "Hub/Gallery System",
      "functionality": [
        "Map integration"
      ],
      "imports": [
        {
          "path": "./MediaItem",
          "fullMatch": "import { MediaItem } from './MediaItem'"
        }
      ],
      "exports": [
        "MediaGrid"
      ],
      "contextDescription": "Displays items in a grid layout.",
      "complexity": "Moderate",
      "dependencies": [
        "react"
      ],
      "features": [
        "Map Integration"
      ]
    },
    "MediaItem": {
      "name": "MediaItem",
      "filePath": "components/hub/gallery/MediaItem.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hub/gallery/MediaItem.tsx",
      "serviceCategory": "hub/gallery",
      "serviceType": "Hub/Gallery System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "API data fetching"
      ],
      "imports": [],
      "exports": [
        "MediaItem"
      ],
      "contextDescription": "",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Data Fetching",
        "File Upload",
        "Social Sharing"
      ]
    },
    "MediaLightbox": {
      "name": "MediaLightbox",
      "filePath": "components/hub/gallery/MediaLightbox.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hub/gallery/MediaLightbox.tsx",
      "serviceCategory": "hub/gallery",
      "serviceType": "Hub/Gallery System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "API data fetching",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "MediaLightbox"
      ],
      "contextDescription": "",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "@kit/ui/client-only"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Data Fetching",
        "Map Integration",
        "File Upload",
        "File Download",
        "Social Sharing"
      ]
    },
    "MediaUploader": {
      "name": "MediaUploader",
      "filePath": "components/hub/gallery/MediaUploader.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hub/gallery/MediaUploader.tsx",
      "serviceCategory": "hub/gallery",
      "serviceType": "Hub/Gallery System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "Map integration",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "MediaUploader"
      ],
      "contextDescription": "",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "react-dropzone",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Map Integration",
        "Filtering",
        "File Upload"
      ]
    },
    "DesignCustomizer": {
      "name": "DesignCustomizer",
      "filePath": "components/hub-builder/DesignCustomizer.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hub-builder/DesignCustomizer.tsx",
      "serviceCategory": "hub-builder",
      "serviceType": "Hub Creation System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "Map integration"
      ],
      "imports": [
        {
          "path": "../../pages/hub/create",
          "fullMatch": "import { HubData } from '../../pages/hub/create'"
        }
      ],
      "exports": [
        "DesignCustomizer"
      ],
      "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Map Integration"
      ]
    },
    "HubBuilderNav": {
      "name": "HubBuilderNav",
      "filePath": "components/hub-builder/HubBuilderNav.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hub-builder/HubBuilderNav.tsx",
      "serviceCategory": "hub-builder",
      "serviceType": "Hub Creation System",
      "functionality": [
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "HubBuilderNav"
      ],
      "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Map Integration"
      ]
    },
    "HubPreview": {
      "name": "HubPreview",
      "filePath": "components/hub-builder/HubPreview.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hub-builder/HubPreview.tsx",
      "serviceCategory": "hub-builder",
      "serviceType": "Hub Creation System",
      "functionality": [
        "Form handling",
        "Calendar functionality",
        "Map integration",
        "Data filtering"
      ],
      "imports": [
        {
          "path": "../../pages/hub/create",
          "fullMatch": "import { HubData } from '../../pages/hub/create'"
        }
      ],
      "exports": [
        "HubPreview"
      ],
      "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Map Integration",
        "Filtering"
      ]
    },
    "MonetizationSetup": {
      "name": "MonetizationSetup",
      "filePath": "components/hub-builder/MonetizationSetup.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hub-builder/MonetizationSetup.tsx",
      "serviceCategory": "hub-builder",
      "serviceType": "Hub Creation System",
      "functionality": [
        "Manages component state",
        "Payment processing",
        "Map integration",
        "Data filtering"
      ],
      "imports": [
        {
          "path": "../../pages/hub/create",
          "fullMatch": "import { HubData } from '../../pages/hub/create'"
        }
      ],
      "exports": [
        "MonetizationSetup"
      ],
      "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Payment Processing",
        "Map Integration",
        "Filtering",
        "Social Sharing"
      ]
    },
    "PermissionsRoles": {
      "name": "PermissionsRoles",
      "filePath": "components/hub-builder/PermissionsRoles.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hub-builder/PermissionsRoles.tsx",
      "serviceCategory": "hub-builder",
      "serviceType": "Hub Creation System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "API data fetching",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [
        {
          "path": "../../pages/hub/create",
          "fullMatch": "import { HubData } from '../../pages/hub/create'"
        }
      ],
      "exports": [
        "PermissionsRoles"
      ],
      "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Data Fetching",
        "Map Integration",
        "Search Functionality",
        "Filtering",
        "File Upload"
      ]
    },
    "SectionManager": {
      "name": "SectionManager",
      "filePath": "components/hub-builder/SectionManager.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hub-builder/SectionManager.tsx",
      "serviceCategory": "hub-builder",
      "serviceType": "Hub Creation System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "Map integration",
        "Data filtering"
      ],
      "imports": [
        {
          "path": "../../pages/hub/create",
          "fullMatch": "import { HubData } from '../../pages/hub/create'"
        }
      ],
      "exports": [
        "SectionManager"
      ],
      "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Map Integration",
        "Filtering"
      ]
    },
    "SetupWizard": {
      "name": "SetupWizard",
      "filePath": "components/hub-builder/SetupWizard.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hub-builder/SetupWizard.tsx",
      "serviceCategory": "hub-builder",
      "serviceType": "Hub Creation System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "Map integration",
        "Data filtering"
      ],
      "imports": [
        {
          "path": "../../pages/hub/create",
          "fullMatch": "import { HubData } from '../../pages/hub/create'"
        }
      ],
      "exports": [
        "SetupWizard"
      ],
      "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Map Integration",
        "Filtering"
      ]
    },
    "CategoriesGrid": {
      "name": "CategoriesGrid",
      "filePath": "components/hubs/CategoriesGrid.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hubs/CategoriesGrid.tsx",
      "serviceCategory": "hubs",
      "serviceType": "Hub Discovery System",
      "functionality": [
        "Community hub functionality",
        "Hub discovery",
        "Hub management",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "CategoriesGrid"
      ],
      "contextDescription": "Component of the community hub system. Handles hub discovery, creation, and management. Displays items in a grid layout.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Map Integration"
      ]
    },
    "HeroSection": {
      "name": "HeroSection",
      "filePath": "components/hubs/HeroSection.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hubs/HeroSection.tsx",
      "serviceCategory": "hubs",
      "serviceType": "Hub Discovery System",
      "functionality": [
        "Community hub functionality",
        "Hub discovery",
        "Hub management",
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "HeroSection"
      ],
      "contextDescription": "Component of the community hub system. Handles hub discovery, creation, and management.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Map Integration"
      ]
    },
    "HubCard": {
      "name": "HubCard",
      "filePath": "components/hubs/HubCard.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hubs/HubCard.tsx",
      "serviceCategory": "hubs",
      "serviceType": "Hub Discovery System",
      "functionality": [
        "Community hub functionality",
        "Hub discovery",
        "Hub management",
        "Manages component state",
        "Form handling",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "HubCard"
      ],
      "contextDescription": "Component of the community hub system. Handles hub discovery, creation, and management. Displays information in a card format.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Map Integration"
      ]
    },
    "SearchFilterBar": {
      "name": "SearchFilterBar",
      "filePath": "components/hubs/SearchFilterBar.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hubs/SearchFilterBar.tsx",
      "serviceCategory": "hubs",
      "serviceType": "Hub Discovery System",
      "functionality": [
        "Community hub functionality",
        "Hub discovery",
        "Hub management",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "SearchFilterBar"
      ],
      "contextDescription": "Component of the community hub system. Handles hub discovery, creation, and management.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Search Functionality",
        "Filtering"
      ]
    },
    "TrendingTopics": {
      "name": "TrendingTopics",
      "filePath": "components/hubs/TrendingTopics.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/hubs/TrendingTopics.tsx",
      "serviceCategory": "hubs",
      "serviceType": "Hub Discovery System",
      "functionality": [
        "Community hub functionality",
        "Hub discovery",
        "Hub management",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "TrendingTopics"
      ],
      "contextDescription": "Component of the community hub system. Handles hub discovery, creation, and management.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "Map Integration"
      ]
    },
    "Footer": {
      "name": "Footer",
      "filePath": "components/layout/Footer.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/layout/Footer.tsx",
      "serviceCategory": "layout",
      "serviceType": "Layout & Navigation System",
      "functionality": [
        "Form handling"
      ],
      "imports": [],
      "exports": [
        "Footer"
      ],
      "contextDescription": "Core layout component. Provides consistent page structure and navigation.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "Form Handling"
      ]
    },
    "Header": {
      "name": "Header",
      "filePath": "components/layout/Header.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/layout/Header.tsx",
      "serviceCategory": "layout",
      "serviceType": "Layout & Navigation System",
      "functionality": [
        "Manages component state",
        "Search functionality"
      ],
      "imports": [
        {
          "path": "./MainHeader",
          "fullMatch": "import { MainHeader } from './MainHeader'"
        }
      ],
      "exports": [
        "Header"
      ],
      "contextDescription": "Core layout component. Provides consistent page structure and navigation.",
      "complexity": "Simple",
      "dependencies": [
        "react"
      ],
      "features": [
        "State Management"
      ]
    },
    "MainHeader": {
      "name": "MainHeader",
      "filePath": "components/layout/MainHeader.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/layout/MainHeader.tsx",
      "serviceCategory": "layout",
      "serviceType": "Layout & Navigation System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "Calendar functionality",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [
        {
          "path": "../ui/GlobalSearch",
          "fullMatch": "import { GlobalSearch } from '../ui/GlobalSearch'"
        },
        {
          "path": "../ui/LocationSelector",
          "fullMatch": "import { LocationSelector } from '../ui/LocationSelector'"
        },
        {
          "path": "../ui/NotificationBell",
          "fullMatch": "import { NotificationBell } from '../ui/NotificationBell'"
        },
        {
          "path": "../ui/MessageCenter",
          "fullMatch": "import { MessageCenter } from '../ui/MessageCenter'"
        },
        {
          "path": "../ui/ProfileDropdown",
          "fullMatch": "import { ProfileDropdown } from '../ui/ProfileDropdown'"
        }
      ],
      "exports": [
        "MainHeader"
      ],
      "contextDescription": "Core layout component. Provides consistent page structure and navigation.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Calendar Integration",
        "Map Integration",
        "Search Functionality",
        "Filtering",
        "Notifications"
      ]
    },
    "MainHeaderFixed": {
      "name": "MainHeaderFixed",
      "filePath": "components/layout/MainHeaderFixed.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/layout/MainHeaderFixed.tsx",
      "serviceCategory": "layout",
      "serviceType": "Layout & Navigation System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "Calendar functionality",
        "Map integration",
        "Search functionality"
      ],
      "imports": [
        {
          "path": "../ui/GlobalSearch",
          "fullMatch": "import { GlobalSearch } from '../ui/GlobalSearch'"
        },
        {
          "path": "../ui/LocationSelector",
          "fullMatch": "import { LocationSelector } from '../ui/LocationSelector'"
        },
        {
          "path": "../ui/NotificationBell",
          "fullMatch": "import { NotificationBell } from '../ui/NotificationBell'"
        },
        {
          "path": "../ui/MessageCenter",
          "fullMatch": "import { MessageCenter } from '../ui/MessageCenter'"
        },
        {
          "path": "../ui/ProfileDropdown",
          "fullMatch": "import { ProfileDropdown } from '../ui/ProfileDropdown'"
        }
      ],
      "exports": [
        "MainHeaderFixed"
      ],
      "contextDescription": "Core layout component. Provides consistent page structure and navigation.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Calendar Integration",
        "Map Integration",
        "Search Functionality",
        "Notifications"
      ]
    },
    "SimpleFooter": {
      "name": "SimpleFooter",
      "filePath": "components/layout/SimpleFooter.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/layout/SimpleFooter.tsx",
      "serviceCategory": "layout",
      "serviceType": "Layout & Navigation System",
      "functionality": [
        "Form handling"
      ],
      "imports": [],
      "exports": [
        "SimpleFooter"
      ],
      "contextDescription": "Core layout component. Provides consistent page structure and navigation.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "react-router"
      ],
      "features": [
        "Form Handling"
      ]
    },
    "SimpleHeader": {
      "name": "SimpleHeader",
      "filePath": "components/layout/SimpleHeader.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/layout/SimpleHeader.tsx",
      "serviceCategory": "layout",
      "serviceType": "Layout & Navigation System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "Map integration",
        "Search functionality"
      ],
      "imports": [],
      "exports": [
        "SimpleHeader"
      ],
      "contextDescription": "Core layout component. Provides consistent page structure and navigation.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Map Integration"
      ]
    },
    "FloatingNav": {
      "name": "FloatingNav",
      "filePath": "components/navigation/FloatingNav.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/navigation/FloatingNav.tsx",
      "serviceCategory": "navigation",
      "serviceType": "Navigation System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "FloatingNav"
      ],
      "contextDescription": "",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Calendar Integration",
        "Map Integration"
      ]
    },
    "QuickPageAccess": {
      "name": "QuickPageAccess",
      "filePath": "components/navigation/QuickPageAccess.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/navigation/QuickPageAccess.tsx",
      "serviceCategory": "navigation",
      "serviceType": "Navigation System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "Payment processing",
        "Calendar functionality",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "QuickPageAccess"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Payment Processing",
        "Calendar Integration",
        "Map Integration",
        "Search Functionality",
        "Filtering",
        "File Upload",
        "Notifications"
      ]
    },
    "DiscoverySections": {
      "name": "DiscoverySections",
      "filePath": "components/performers/DiscoverySections.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/performers/DiscoverySections.tsx",
      "serviceCategory": "performers",
      "serviceType": "Performer Management System",
      "functionality": [
        "Show performer profiles",
        "Handle performer booking",
        "Manage performer data",
        "Form handling",
        "Calendar functionality",
        "Map integration",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "DiscoverySections"
      ],
      "contextDescription": "Part of the performer management system. Displays performer profiles and handles performer-related interactions.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Map Integration",
        "Filtering"
      ]
    },
    "FilterSidebar": {
      "name": "FilterSidebar",
      "filePath": "components/venue-marketplace/FilterSidebar.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/venue-marketplace/FilterSidebar.tsx",
      "serviceCategory": "venue-marketplace",
      "serviceType": "Venue Discovery System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "Calendar functionality",
        "Map integration",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "FilterSidebar"
      ],
      "contextDescription": "",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Map Integration",
        "Filtering"
      ]
    },
    "PerformerCalendar": {
      "name": "PerformerCalendar",
      "filePath": "components/performers/PerformerCalendar.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/performers/PerformerCalendar.tsx",
      "serviceCategory": "performers",
      "serviceType": "Performer Management System",
      "functionality": [
        "Show performer profiles",
        "Handle performer booking",
        "Manage performer data",
        "Manages component state",
        "Form handling",
        "Calendar functionality",
        "Map integration",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "PerformerCalendar"
      ],
      "contextDescription": "Part of the performer management system. Displays performer profiles and handles performer-related interactions.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Calendar Integration",
        "Map Integration",
        "Filtering"
      ]
    },
    "PerformerGrid": {
      "name": "PerformerGrid",
      "filePath": "components/performers/PerformerGrid.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/performers/PerformerGrid.tsx",
      "serviceCategory": "performers",
      "serviceType": "Performer Management System",
      "functionality": [
        "Show performer profiles",
        "Handle performer booking",
        "Manage performer data",
        "Form handling",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "PerformerGrid"
      ],
      "contextDescription": "Part of the performer management system. Displays performer profiles and handles performer-related interactions. Displays items in a grid layout.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Map Integration"
      ]
    },
    "PerformerList": {
      "name": "PerformerList",
      "filePath": "components/performers/PerformerList.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/performers/PerformerList.tsx",
      "serviceCategory": "performers",
      "serviceType": "Performer Management System",
      "functionality": [
        "Show performer profiles",
        "Handle performer booking",
        "Manage performer data",
        "Form handling",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "PerformerList"
      ],
      "contextDescription": "Part of the performer management system. Displays performer profiles and handles performer-related interactions. Renders list of items.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Map Integration"
      ]
    },
    "CreateSharedCalendar": {
      "name": "CreateSharedCalendar",
      "filePath": "components/profile/CreateSharedCalendar.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/profile/CreateSharedCalendar.tsx",
      "serviceCategory": "profile",
      "serviceType": "User Profile System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "API data fetching",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "CreateSharedCalendar"
      ],
      "contextDescription": "",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Calendar Integration",
        "Map Integration"
      ]
    },
    "LikedPerformers": {
      "name": "LikedPerformers",
      "filePath": "components/profile/LikedPerformers.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/profile/LikedPerformers.tsx",
      "serviceCategory": "profile",
      "serviceType": "User Profile System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "API data fetching",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "LikedPerformers"
      ],
      "contextDescription": "",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Data Fetching",
        "Map Integration"
      ]
    },
    "LikedVenues": {
      "name": "LikedVenues",
      "filePath": "components/profile/LikedVenues.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/profile/LikedVenues.tsx",
      "serviceCategory": "profile",
      "serviceType": "User Profile System",
      "functionality": [
        "Form handling",
        "API data fetching",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "LikedVenues"
      ],
      "contextDescription": "",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "Form Handling",
        "Data Fetching",
        "Map Integration"
      ]
    },
    "PublicCalendar": {
      "name": "PublicCalendar",
      "filePath": "components/profile/PublicCalendar.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/profile/PublicCalendar.tsx",
      "serviceCategory": "profile",
      "serviceType": "User Profile System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "Modal dialog display",
        "API data fetching",
        "Calendar functionality",
        "Map integration",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "PublicCalendar"
      ],
      "contextDescription": "",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Data Fetching",
        "Calendar Integration",
        "Map Integration",
        "Filtering"
      ]
    },
    "SharedCalendars": {
      "name": "SharedCalendars",
      "filePath": "components/profile/SharedCalendars.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/profile/SharedCalendars.tsx",
      "serviceCategory": "profile",
      "serviceType": "User Profile System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "Modal dialog display",
        "API data fetching",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "SharedCalendars"
      ],
      "contextDescription": "",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Data Fetching",
        "Calendar Integration",
        "Map Integration",
        "Social Sharing"
      ]
    },
    "UserComments": {
      "name": "UserComments",
      "filePath": "components/profile/UserComments.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/profile/UserComments.tsx",
      "serviceCategory": "profile",
      "serviceType": "User Profile System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "API data fetching",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "UserComments"
      ],
      "contextDescription": "",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Data Fetching",
        "Map Integration"
      ]
    },
    "AvatarUploader": {
      "name": "AvatarUploader",
      "filePath": "components/settings/AvatarUploader.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/settings/AvatarUploader.tsx",
      "serviceCategory": "settings",
      "serviceType": "Settings & Configuration System",
      "functionality": [
        "Manages component state",
        "Modal dialog display",
        "API data fetching"
      ],
      "imports": [],
      "exports": [
        "AvatarUploader"
      ],
      "contextDescription": "",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "File Upload"
      ]
    },
    "NotificationPreferences": {
      "name": "NotificationPreferences",
      "filePath": "components/settings/NotificationPreferences.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/settings/NotificationPreferences.tsx",
      "serviceCategory": "settings",
      "serviceType": "Settings & Configuration System",
      "functionality": [
        "Manages component state",
        "API data fetching",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "NotificationPreferences"
      ],
      "contextDescription": "",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Map Integration",
        "Notifications"
      ]
    },
    "PasswordSecurity": {
      "name": "PasswordSecurity",
      "filePath": "components/settings/PasswordSecurity.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/settings/PasswordSecurity.tsx",
      "serviceCategory": "settings",
      "serviceType": "Settings & Configuration System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "API data fetching",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "PasswordSecurity"
      ],
      "contextDescription": "",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Map Integration"
      ]
    },
    "PrivacySettings": {
      "name": "PrivacySettings",
      "filePath": "components/settings/PrivacySettings.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/settings/PrivacySettings.tsx",
      "serviceCategory": "settings",
      "serviceType": "Settings & Configuration System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "API data fetching",
        "Calendar functionality",
        "Search functionality"
      ],
      "imports": [],
      "exports": [
        "PrivacySettings"
      ],
      "contextDescription": "",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Calendar Integration",
        "Search Functionality"
      ]
    },
    "ProfileInformation": {
      "name": "ProfileInformation",
      "filePath": "components/settings/ProfileInformation.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/settings/ProfileInformation.tsx",
      "serviceCategory": "settings",
      "serviceType": "Settings & Configuration System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "API data fetching"
      ],
      "imports": [
        {
          "path": "./AvatarUploader",
          "fullMatch": "import { AvatarUploader } from './AvatarUploader'"
        }
      ],
      "exports": [
        "ProfileInformation"
      ],
      "contextDescription": "",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling"
      ]
    },
    "SettingsSidebar": {
      "name": "SettingsSidebar",
      "filePath": "components/settings/SettingsSidebar.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/settings/SettingsSidebar.tsx",
      "serviceCategory": "settings",
      "serviceType": "Settings & Configuration System",
      "functionality": [
        "Form handling",
        "Payment processing",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "SettingsSidebar"
      ],
      "contextDescription": "",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Payment Processing",
        "Map Integration",
        "Notifications"
      ]
    },
    "ShareEmbedWidget": {
      "name": "ShareEmbedWidget",
      "filePath": "components/sharing/ShareEmbedWidget.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/sharing/ShareEmbedWidget.tsx",
      "serviceCategory": "sharing",
      "serviceType": "Social Sharing System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "API data fetching",
        "Calendar functionality"
      ],
      "imports": [],
      "exports": [
        "ShareEmbedWidget"
      ],
      "contextDescription": "Embeddable widget component.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "@kit/ui/client-only"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Calendar Integration",
        "File Download",
        "Social Sharing"
      ]
    },
    "SubscriptionModal": {
      "name": "SubscriptionModal",
      "filePath": "components/subscription/SubscriptionModal.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/subscription/SubscriptionModal.tsx",
      "serviceCategory": "subscription",
      "serviceType": "Subscription Management System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "Modal dialog display",
        "API data fetching",
        "Payment processing",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "SubscriptionModal"
      ],
      "contextDescription": "Displays as a modal dialog overlay.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Modal Display",
        "Payment Processing",
        "Calendar Integration",
        "Map Integration"
      ]
    },
    "TicketPurchaseConfirmation": {
      "name": "TicketPurchaseConfirmation",
      "filePath": "components/tickets/TicketPurchaseConfirmation.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/tickets/TicketPurchaseConfirmation.tsx",
      "serviceCategory": "tickets",
      "serviceType": "Ticketing System",
      "functionality": [
        "Handle ticket sales",
        "Display ticket information",
        "Manage ticket inventory",
        "Manages component state",
        "Form handling",
        "Payment processing",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "TicketPurchaseConfirmation"
      ],
      "contextDescription": "Component of the ticketing system. Handles ticket sales, display, and inventory management.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Payment Processing"
      ]
    },
    "CommunityShowcase": {
      "name": "CommunityShowcase",
      "filePath": "components/ui/CommunityShowcase.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/ui/CommunityShowcase.tsx",
      "serviceCategory": "ui",
      "serviceType": "Core UI Components System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "CommunityShowcase"
      ],
      "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Map Integration"
      ]
    },
    "DialogContext": {
      "name": "DialogContext",
      "filePath": "components/ui/DialogContext.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/ui/DialogContext.tsx",
      "serviceCategory": "ui",
      "serviceType": "Core UI Components System",
      "functionality": [
        "Manages component state"
      ],
      "imports": [],
      "exports": [
        "useDialog",
        "DialogProvider"
      ],
      "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "@kit/ui/dialog",
        "@kit/ui/button",
        "@kit/ui/input"
      ],
      "features": [
        "State Management"
      ]
    },
    "GlobalSearch": {
      "name": "GlobalSearch",
      "filePath": "components/ui/GlobalSearch.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/ui/GlobalSearch.tsx",
      "serviceCategory": "ui",
      "serviceType": "Core UI Components System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "API data fetching",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "GlobalSearch"
      ],
      "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Data Fetching",
        "Map Integration",
        "Search Functionality",
        "Filtering"
      ]
    },
    "LocationSelector": {
      "name": "LocationSelector",
      "filePath": "components/ui/LocationSelector.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/ui/LocationSelector.tsx",
      "serviceCategory": "ui",
      "serviceType": "Core UI Components System",
      "functionality": [
        "Manages component state",
        "API data fetching",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "LocationSelector"
      ],
      "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Data Fetching",
        "Map Integration",
        "Search Functionality",
        "Filtering"
      ]
    },
    "MessageCenter": {
      "name": "MessageCenter",
      "filePath": "components/ui/MessageCenter.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/ui/MessageCenter.tsx",
      "serviceCategory": "ui",
      "serviceType": "Core UI Components System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "MessageCenter"
      ],
      "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Map Integration"
      ]
    },
    "NotificationBell": {
      "name": "NotificationBell",
      "filePath": "components/ui/NotificationBell.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/ui/NotificationBell.tsx",
      "serviceCategory": "ui",
      "serviceType": "Core UI Components System",
      "functionality": [
        "Manages component state",
        "Map integration",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "NotificationBell"
      ],
      "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Map Integration",
        "Filtering",
        "Notifications"
      ]
    },
    "PasswordInput": {
      "name": "PasswordInput",
      "filePath": "components/ui/PasswordInput.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/ui/PasswordInput.tsx",
      "serviceCategory": "ui",
      "serviceType": "Core UI Components System",
      "functionality": [
        "Manages component state"
      ],
      "imports": [],
      "exports": [
        "PasswordInput"
      ],
      "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management"
      ]
    },
    "ProfileDropdown": {
      "name": "ProfileDropdown",
      "filePath": "components/ui/ProfileDropdown.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/ui/ProfileDropdown.tsx",
      "serviceCategory": "ui",
      "serviceType": "Core UI Components System",
      "functionality": [
        "Manages component state",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "ProfileDropdown"
      ],
      "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Calendar Integration",
        "Map Integration",
        "Notifications"
      ]
    },
    "RememberMeCheckbox": {
      "name": "RememberMeCheckbox",
      "filePath": "components/ui/RememberMeCheckbox.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/ui/RememberMeCheckbox.tsx",
      "serviceCategory": "ui",
      "serviceType": "Core UI Components System",
      "functionality": [
        "UI display component"
      ],
      "imports": [],
      "exports": [
        "RememberMeCheckbox"
      ],
      "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements.",
      "complexity": "Simple",
      "dependencies": [
        "react"
      ],
      "features": []
    },
    "SharePopup": {
      "name": "SharePopup",
      "filePath": "components/ui/SharePopup.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/ui/SharePopup.tsx",
      "serviceCategory": "ui",
      "serviceType": "Core UI Components System",
      "functionality": [
        "Manages component state",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "SharePopup"
      ],
      "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Map Integration",
        "Social Sharing"
      ]
    },
    "SocialLoginButtons": {
      "name": "SocialLoginButtons",
      "filePath": "components/ui/SocialLoginButtons.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/ui/SocialLoginButtons.tsx",
      "serviceCategory": "ui",
      "serviceType": "Core UI Components System",
      "functionality": [
        "Form handling"
      ],
      "imports": [],
      "exports": [
        "SocialLoginButtons"
      ],
      "contextDescription": "Reusable UI component. Used throughout the application for consistent interface elements.",
      "complexity": "Simple",
      "dependencies": [
        "react"
      ],
      "features": [
        "Form Handling"
      ]
    },
    "AmenitiesSection": {
      "name": "AmenitiesSection",
      "filePath": "components/venue-detail/AmenitiesSection.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/venue-detail/AmenitiesSection.tsx",
      "serviceCategory": "venue-detail",
      "serviceType": "Venue Detail Display System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "AmenitiesSection"
      ],
      "contextDescription": "",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Map Integration"
      ]
    },
    "AvailabilityCalendar": {
      "name": "AvailabilityCalendar",
      "filePath": "components/venue-detail/AvailabilityCalendar.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/venue-detail/AvailabilityCalendar.tsx",
      "serviceCategory": "venue-detail",
      "serviceType": "Venue Detail Display System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "AvailabilityCalendar"
      ],
      "contextDescription": "",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Calendar Integration",
        "Map Integration"
      ]
    },
    "BookingConfirmationPopup": {
      "name": "BookingConfirmationPopup",
      "filePath": "components/venue-detail/BookingConfirmationPopup.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/venue-detail/BookingConfirmationPopup.tsx",
      "serviceCategory": "venue-detail",
      "serviceType": "Venue Detail Display System",
      "functionality": [
        "Calendar functionality"
      ],
      "imports": [],
      "exports": [
        "BookingConfirmationPopup"
      ],
      "contextDescription": "",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": []
    },
    "BookingRequestPopup": {
      "name": "BookingRequestPopup",
      "filePath": "components/venue-detail/BookingRequestPopup.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/venue-detail/BookingRequestPopup.tsx",
      "serviceCategory": "venue-detail",
      "serviceType": "Venue Detail Display System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "API data fetching",
        "Calendar functionality"
      ],
      "imports": [],
      "exports": [
        "BookingRequestPopup"
      ],
      "contextDescription": "",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling"
      ]
    },
    "BookingWidget": {
      "name": "BookingWidget",
      "filePath": "components/venue-detail/BookingWidget.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/venue-detail/BookingWidget.tsx",
      "serviceCategory": "venue-detail",
      "serviceType": "Venue Detail Display System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "BookingWidget"
      ],
      "contextDescription": "Embeddable widget component.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Map Integration"
      ]
    },
    "ImageGallery": {
      "name": "ImageGallery",
      "filePath": "components/venue-detail/ImageGallery.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/venue-detail/ImageGallery.tsx",
      "serviceCategory": "venue-detail",
      "serviceType": "Venue Detail Display System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "Modal dialog display",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "ImageGallery"
      ],
      "contextDescription": "",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Modal Display",
        "Map Integration"
      ]
    },
    "LocationSection": {
      "name": "LocationSection",
      "filePath": "components/venue-detail/LocationSection.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/venue-detail/LocationSection.tsx",
      "serviceCategory": "venue-detail",
      "serviceType": "Venue Detail Display System",
      "functionality": [
        "Form handling",
        "API data fetching",
        "Map integration",
        "Search functionality"
      ],
      "imports": [],
      "exports": [
        "LocationSection"
      ],
      "contextDescription": "",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Data Fetching",
        "Map Integration",
        "Search Functionality"
      ]
    },
    "PricingSection": {
      "name": "PricingSection",
      "filePath": "components/venue-detail/PricingSection.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/venue-detail/PricingSection.tsx",
      "serviceCategory": "venue-detail",
      "serviceType": "Venue Detail Display System",
      "functionality": [
        "Manages component state",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "PricingSection"
      ],
      "contextDescription": "",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Map Integration"
      ]
    },
    "ReviewsSection": {
      "name": "ReviewsSection",
      "filePath": "components/venue-detail/ReviewsSection.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/venue-detail/ReviewsSection.tsx",
      "serviceCategory": "venue-detail",
      "serviceType": "Venue Detail Display System",
      "functionality": [
        "Manages component state",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "ReviewsSection"
      ],
      "contextDescription": "",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Map Integration"
      ]
    },
    "SimilarVenues": {
      "name": "SimilarVenues",
      "filePath": "components/venue-detail/SimilarVenues.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/venue-detail/SimilarVenues.tsx",
      "serviceCategory": "venue-detail",
      "serviceType": "Venue Detail Display System",
      "functionality": [
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "SimilarVenues"
      ],
      "contextDescription": "",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "Map Integration"
      ]
    },
    "SpaceDetailsSection": {
      "name": "SpaceDetailsSection",
      "filePath": "components/venue-detail/SpaceDetailsSection.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/venue-detail/SpaceDetailsSection.tsx",
      "serviceCategory": "venue-detail",
      "serviceType": "Venue Detail Display System",
      "functionality": [
        "Manages component state",
        "API data fetching",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "SpaceDetailsSection"
      ],
      "contextDescription": "",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Data Fetching",
        "Map Integration"
      ]
    },
    "VenueCard": {
      "name": "VenueCard",
      "filePath": "components/venue-marketplace/VenueCard.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/venue-marketplace/VenueCard.tsx",
      "serviceCategory": "venue-marketplace",
      "serviceType": "Venue Discovery System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "VenueCard"
      ],
      "contextDescription": "Displays information in a card format.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Map Integration"
      ]
    },
    "VenueListItem": {
      "name": "VenueListItem",
      "filePath": "components/venue-marketplace/VenueListItem.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/venue-marketplace/VenueListItem.tsx",
      "serviceCategory": "venue-marketplace",
      "serviceType": "Venue Discovery System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "API data fetching",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "VenueListItem"
      ],
      "contextDescription": "Renders list of items.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Map Integration"
      ]
    },
    "VenueBookingWidget": {
      "name": "VenueBookingWidget",
      "filePath": "components/venue-profile/VenueBookingWidget.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/venue-profile/VenueBookingWidget.tsx",
      "serviceCategory": "venue-profile",
      "serviceType": "Venue Profile System",
      "functionality": [
        "Manages component state",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "VenueBookingWidget"
      ],
      "contextDescription": "Embeddable widget component.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Map Integration"
      ]
    },
    "VenueImageGallery": {
      "name": "VenueImageGallery",
      "filePath": "components/venue-profile/VenueImageGallery.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/venue-profile/VenueImageGallery.tsx",
      "serviceCategory": "venue-profile",
      "serviceType": "Venue Profile System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "Modal dialog display",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "VenueImageGallery"
      ],
      "contextDescription": "",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Modal Display",
        "Map Integration"
      ]
    },
    "VenueSpaceDetails": {
      "name": "VenueSpaceDetails",
      "filePath": "components/venue-profile/VenueSpaceDetails.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/components/venue-profile/VenueSpaceDetails.tsx",
      "serviceCategory": "venue-profile",
      "serviceType": "Venue Profile System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "VenueSpaceDetails"
      ],
      "contextDescription": "",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Map Integration"
      ]
    },
    "AboutPage": {
      "name": "AboutPage",
      "filePath": "pages/AboutPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/AboutPage.tsx",
      "serviceCategory": "root",
      "serviceType": "Root System",
      "functionality": [
        "Form handling",
        "Calendar functionality"
      ],
      "imports": [],
      "exports": [
        "AboutPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Simple",
      "dependencies": [
        "react"
      ],
      "features": [
        "Form Handling",
        "Calendar Integration",
        "Social Sharing"
      ]
    },
    "AdvertisePage": {
      "name": "AdvertisePage",
      "filePath": "pages/AdvertisePage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/AdvertisePage.tsx",
      "serviceCategory": "root",
      "serviceType": "Root System",
      "functionality": [
        "Form handling",
        "Calendar functionality",
        "Map integration",
        "Search functionality"
      ],
      "imports": [],
      "exports": [
        "AdvertisePage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "Form Handling",
        "Map Integration",
        "Search Functionality"
      ]
    },
    "AdvertisingSolutionsPage": {
      "name": "AdvertisingSolutionsPage",
      "filePath": "pages/AdvertisingSolutionsPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/AdvertisingSolutionsPage.tsx",
      "serviceCategory": "root",
      "serviceType": "Root System",
      "functionality": [
        "Form handling",
        "Calendar functionality",
        "Map integration",
        "Search functionality"
      ],
      "imports": [],
      "exports": [
        "AdvertisingSolutionsPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Map Integration",
        "Search Functionality"
      ]
    },
    "BookItPage": {
      "name": "BookItPage",
      "filePath": "pages/BookItPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/BookItPage.tsx",
      "serviceCategory": "root",
      "serviceType": "Root System",
      "functionality": [
        "Form handling",
        "Payment processing",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "BookItPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "Form Handling",
        "Payment Processing",
        "Map Integration"
      ]
    },
    "BookingMarketplacePage": {
      "name": "BookingMarketplacePage",
      "filePath": "pages/BookingMarketplacePage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/BookingMarketplacePage.tsx",
      "serviceCategory": "root",
      "serviceType": "Root System",
      "functionality": [
        "Form handling",
        "Payment processing",
        "Calendar functionality",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "BookingMarketplacePage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Payment Processing",
        "Calendar Integration",
        "Map Integration",
        "Search Functionality",
        "Filtering"
      ]
    },
    "CalendarPage": {
      "name": "CalendarPage",
      "filePath": "pages/CalendarPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/CalendarPage.tsx",
      "serviceCategory": "root",
      "serviceType": "Root System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "API data fetching",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [
        {
          "path": "../components/calendar/CalendarHeader",
          "fullMatch": "import { CalendarHeader } from '../components/calendar/CalendarHeader'"
        },
        {
          "path": "../components/calendar/ViewToggle",
          "fullMatch": "import { ViewToggle } from '../components/calendar/ViewToggle'"
        },
        {
          "path": "../components/calendar/CalendarGrid",
          "fullMatch": "import { CalendarGrid } from '../components/calendar/CalendarGrid'"
        },
        {
          "path": "../components/calendar/EventList",
          "fullMatch": "import { EventList } from '../components/calendar/EventList'"
        }
      ],
      "exports": [
        "CalendarPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Data Fetching",
        "Calendar Integration",
        "Map Integration"
      ]
    },
    "CareersPage": {
      "name": "CareersPage",
      "filePath": "pages/CareersPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/CareersPage.tsx",
      "serviceCategory": "root",
      "serviceType": "Root System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "API data fetching",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "CareersPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Map Integration",
        "Search Functionality",
        "Filtering",
        "Social Sharing"
      ]
    },
    "CommunityImpactPage": {
      "name": "CommunityImpactPage",
      "filePath": "pages/CommunityImpactPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/CommunityImpactPage.tsx",
      "serviceCategory": "root",
      "serviceType": "Root System",
      "functionality": [
        "Form handling",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "CommunityImpactPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Calendar Integration",
        "Map Integration",
        "Social Sharing"
      ]
    },
    "ContactUsPage": {
      "name": "ContactUsPage",
      "filePath": "pages/ContactUsPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/ContactUsPage.tsx",
      "serviceCategory": "root",
      "serviceType": "Root System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "API data fetching",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "ContactUsPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Calendar Integration",
        "Map Integration"
      ]
    },
    "EventDetailPage": {
      "name": "EventDetailPage",
      "filePath": "pages/EventDetailPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/EventDetailPage.tsx",
      "serviceCategory": "root",
      "serviceType": "Root System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "Modal dialog display",
        "API data fetching",
        "Payment processing",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [
        {
          "path": "../components/events/EventHero",
          "fullMatch": "import { EventHero } from '../components/events/EventHero'"
        },
        {
          "path": "../components/events/ContentTabs",
          "fullMatch": "import { ContentTabs } from '../components/events/ContentTabs'"
        },
        {
          "path": "../components/events/VenueMap",
          "fullMatch": "import { VenueMap } from '../components/events/VenueMap'"
        },
        {
          "path": "../components/events/RelatedEvents",
          "fullMatch": "import { RelatedEvents } from '../components/events/RelatedEvents'"
        },
        {
          "path": "../mockdata/events",
          "fullMatch": "import { mockEvents } from '../mockdata/events'"
        }
      ],
      "exports": [
        "EventDetailPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "@kit/ui/client-only",
        "react-router"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Payment Processing",
        "Calendar Integration",
        "Map Integration",
        "Social Sharing"
      ]
    },
    "EventOrganizerHubPage": {
      "name": "EventOrganizerHubPage",
      "filePath": "pages/EventOrganizerHubPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/EventOrganizerHubPage.tsx",
      "serviceCategory": "root",
      "serviceType": "Root System",
      "functionality": [
        "Form handling",
        "API data fetching",
        "Payment processing",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "EventOrganizerHubPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Payment Processing",
        "Map Integration",
        "Notifications"
      ]
    },
    "EventsPage": {
      "name": "EventsPage",
      "filePath": "pages/EventsPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/EventsPage.tsx",
      "serviceCategory": "root",
      "serviceType": "Root System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "Calendar functionality",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [
        {
          "path": "../components/ui/LocationSelector",
          "fullMatch": "import { LocationSelector } from '../components/ui/LocationSelector'"
        }
      ],
      "exports": [
        "EventsPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Calendar Integration",
        "Map Integration",
        "Search Functionality",
        "Filtering",
        "File Download",
        "Social Sharing"
      ]
    },
    "GearPage": {
      "name": "GearPage",
      "filePath": "pages/GearPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/GearPage.tsx",
      "serviceCategory": "root",
      "serviceType": "Root System",
      "functionality": [
        "Form handling",
        "Map integration",
        "Search functionality"
      ],
      "imports": [],
      "exports": [
        "GearPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "Form Handling",
        "Map Integration",
        "Search Functionality"
      ]
    },
    "HomePage": {
      "name": "HomePage",
      "filePath": "pages/HomePage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/HomePage.tsx",
      "serviceCategory": "root",
      "serviceType": "Root System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "Calendar functionality",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [
        {
          "path": "../mockdata/venues",
          "fullMatch": "import { mockVenues } from '../mockdata/venues'"
        },
        {
          "path": "../mockdata/performers",
          "fullMatch": "import { mockPerformers } from '../mockdata/performers'"
        },
        {
          "path": "../components/home/DateSelector",
          "fullMatch": "import { DateSelector } from '../components/home/DateSelector'"
        },
        {
          "path": "../components/ui/SharePopup",
          "fullMatch": "import { SharePopup } from '../components/ui/SharePopup'"
        }
      ],
      "exports": [
        "HomePage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "@kit/supabase/hooks/use-supabase",
        "react-router"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Data Fetching",
        "Calendar Integration",
        "Map Integration",
        "Filtering",
        "File Download",
        "Social Sharing"
      ]
    },
    "HowItWorksPage": {
      "name": "HowItWorksPage",
      "filePath": "pages/HowItWorksPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/HowItWorksPage.tsx",
      "serviceCategory": "root",
      "serviceType": "Root System",
      "functionality": [
        "Form handling",
        "Payment processing",
        "Calendar functionality",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "HowItWorksPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Payment Processing",
        "Calendar Integration",
        "Map Integration",
        "Filtering",
        "Social Sharing"
      ]
    },
    "ListYourVenuePage": {
      "name": "ListYourVenuePage",
      "filePath": "pages/ListYourVenuePage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/ListYourVenuePage.tsx",
      "serviceCategory": "root",
      "serviceType": "Root System",
      "functionality": [
        "Form handling",
        "API data fetching",
        "Payment processing",
        "Calendar functionality",
        "Map integration",
        "Search functionality"
      ],
      "imports": [],
      "exports": [
        "ListYourVenuePage"
      ],
      "contextDescription": "Renders list of items. Full page component with complete functionality.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Payment Processing",
        "Calendar Integration",
        "Map Integration",
        "Search Functionality",
        "File Upload"
      ]
    },
    "LoginPage": {
      "name": "LoginPage",
      "filePath": "pages/LoginPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/LoginPage.tsx",
      "serviceCategory": "root",
      "serviceType": "Root System",
      "functionality": [
        "Manages component state",
        "Form handling"
      ],
      "imports": [
        {
          "path": "../components/ui/SocialLoginButtons",
          "fullMatch": "import { SocialLoginButtons } from '../components/ui/SocialLoginButtons'"
        },
        {
          "path": "../components/ui/PasswordInput",
          "fullMatch": "import { PasswordInput } from '../components/ui/PasswordInput'"
        },
        {
          "path": "../components/ui/RememberMeCheckbox",
          "fullMatch": "import { RememberMeCheckbox } from '../components/ui/RememberMeCheckbox'"
        },
        {
          "path": "../components/ui/CommunityShowcase",
          "fullMatch": "import { CommunityShowcase } from '../components/ui/CommunityShowcase'"
        }
      ],
      "exports": [
        "LoginPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Moderate",
      "dependencies": [
        "react"
      ],
      "features": [
        "State Management",
        "Form Handling"
      ]
    },
    "NotFoundPage": {
      "name": "NotFoundPage",
      "filePath": "pages/NotFoundPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/NotFoundPage.tsx",
      "serviceCategory": "root",
      "serviceType": "Root System",
      "functionality": [
        "UI display component"
      ],
      "imports": [],
      "exports": [
        "NotFoundPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": []
    },
    "PageDirectory": {
      "name": "PageDirectory",
      "filePath": "pages/PageDirectory.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/PageDirectory.tsx",
      "serviceCategory": "root",
      "serviceType": "Root System",
      "functionality": [
        "Form handling",
        "Payment processing",
        "Calendar functionality",
        "Map integration",
        "Search functionality"
      ],
      "imports": [],
      "exports": [
        "PageDirectory"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "Form Handling",
        "Map Integration"
      ]
    },
    "PartnerWithUsPage": {
      "name": "PartnerWithUsPage",
      "filePath": "pages/PartnerWithUsPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/PartnerWithUsPage.tsx",
      "serviceCategory": "root",
      "serviceType": "Root System",
      "functionality": [
        "Form handling",
        "API data fetching"
      ],
      "imports": [],
      "exports": [
        "PartnerWithUsPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "Form Handling",
        "Social Sharing"
      ]
    },
    "PerformerToolsPage": {
      "name": "PerformerToolsPage",
      "filePath": "pages/PerformerToolsPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/PerformerToolsPage.tsx",
      "serviceCategory": "root",
      "serviceType": "Root System",
      "functionality": [
        "Form handling",
        "API data fetching",
        "Payment processing",
        "Calendar functionality",
        "Map integration",
        "Search functionality"
      ],
      "imports": [],
      "exports": [
        "PerformerToolsPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Payment Processing",
        "Calendar Integration",
        "Map Integration",
        "Search Functionality",
        "File Upload"
      ]
    },
    "PerformersPage": {
      "name": "PerformersPage",
      "filePath": "pages/PerformersPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/PerformersPage.tsx",
      "serviceCategory": "root",
      "serviceType": "Root System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "API data fetching",
        "Calendar functionality",
        "Map integration",
        "Search functionality"
      ],
      "imports": [
        {
          "path": "../components/ui/LocationSelector",
          "fullMatch": "import { LocationSelector } from '../components/ui/LocationSelector'"
        }
      ],
      "exports": [
        "PerformersPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Data Fetching",
        "Map Integration",
        "Search Functionality"
      ]
    },
    "PressMediaPage": {
      "name": "PressMediaPage",
      "filePath": "pages/PressMediaPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/PressMediaPage.tsx",
      "serviceCategory": "root",
      "serviceType": "Root System",
      "functionality": [
        "Form handling",
        "API data fetching",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "PressMediaPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Data Fetching",
        "Calendar Integration",
        "Map Integration",
        "File Download"
      ]
    },
    "SuccessStoriesPage": {
      "name": "SuccessStoriesPage",
      "filePath": "pages/SuccessStoriesPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/SuccessStoriesPage.tsx",
      "serviceCategory": "root",
      "serviceType": "Root System",
      "functionality": [
        "Form handling",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "SuccessStoriesPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Calendar Integration",
        "Map Integration",
        "Social Sharing"
      ]
    },
    "TicketsPage": {
      "name": "TicketsPage",
      "filePath": "pages/profile/TicketsPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/profile/TicketsPage.tsx",
      "serviceCategory": "profile",
      "serviceType": "User Profile System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "Modal dialog display",
        "API data fetching",
        "Calendar functionality",
        "Map integration",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "TicketsPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Data Fetching",
        "Calendar Integration",
        "Map Integration",
        "Filtering",
        "File Download"
      ]
    },
    "VenuesPage": {
      "name": "VenuesPage",
      "filePath": "pages/VenuesPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/VenuesPage.tsx",
      "serviceCategory": "root",
      "serviceType": "Root System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "Modal dialog display",
        "API data fetching",
        "Calendar functionality",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [
        {
          "path": "../components/venue-marketplace/FilterSidebar",
          "fullMatch": "import { FilterSidebar } from '../components/venue-marketplace/FilterSidebar'"
        },
        {
          "path": "../components/venue-marketplace/VenueCard",
          "fullMatch": "import { VenueCard } from '../components/venue-marketplace/VenueCard'"
        },
        {
          "path": "../components/venue-marketplace/VenueListItem",
          "fullMatch": "import { VenueListItem } from '../components/venue-marketplace/VenueListItem'"
        },
        {
          "path": "../components/venue-marketplace/VenueMap",
          "fullMatch": "import { VenueMap } from '../components/venue-marketplace/VenueMap'"
        },
        {
          "path": "../mockdata/venues",
          "fullMatch": "import { mockVenues } from '../mockdata/venues'"
        }
      ],
      "exports": [
        "VenuesPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Modal Display",
        "Map Integration",
        "Search Functionality",
        "Filtering"
      ]
    },
    "AdPackagesPage": {
      "name": "AdPackagesPage",
      "filePath": "pages/advertise/AdPackagesPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/advertise/AdPackagesPage.tsx",
      "serviceCategory": "advertise",
      "serviceType": "Advertise System",
      "functionality": [
        "Form handling",
        "Payment processing",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "AdPackagesPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "Form Handling",
        "Payment Processing",
        "Map Integration"
      ]
    },
    "AdvertisingContactPage": {
      "name": "AdvertisingContactPage",
      "filePath": "pages/advertise/AdvertisingContactPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/advertise/AdvertisingContactPage.tsx",
      "serviceCategory": "advertise",
      "serviceType": "Advertise System",
      "functionality": [
        "Form handling"
      ],
      "imports": [],
      "exports": [
        "AdvertisingContactPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "Form Handling"
      ]
    },
    "EmailCampaignsPage": {
      "name": "EmailCampaignsPage",
      "filePath": "pages/advertise/EmailCampaignsPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/advertise/EmailCampaignsPage.tsx",
      "serviceCategory": "advertise",
      "serviceType": "Advertise System",
      "functionality": [
        "UI display component"
      ],
      "imports": [],
      "exports": [
        "EmailCampaignsPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": []
    },
    "EventPromotionPage": {
      "name": "EventPromotionPage",
      "filePath": "pages/advertise/EventPromotionPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/advertise/EventPromotionPage.tsx",
      "serviceCategory": "advertise",
      "serviceType": "Advertise System",
      "functionality": [
        "Calendar functionality"
      ],
      "imports": [],
      "exports": [
        "EventPromotionPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": []
    },
    "FeaturedListingsPage": {
      "name": "FeaturedListingsPage",
      "filePath": "pages/advertise/FeaturedListingsPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/advertise/FeaturedListingsPage.tsx",
      "serviceCategory": "advertise",
      "serviceType": "Advertise System",
      "functionality": [
        "Search functionality"
      ],
      "imports": [],
      "exports": [
        "FeaturedListingsPage"
      ],
      "contextDescription": "Renders list of items. Full page component with complete functionality.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "Search Functionality"
      ]
    },
    "HomepageShowcasePage": {
      "name": "HomepageShowcasePage",
      "filePath": "pages/advertise/HomepageShowcasePage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/advertise/HomepageShowcasePage.tsx",
      "serviceCategory": "advertise",
      "serviceType": "Advertise System",
      "functionality": [
        "UI display component"
      ],
      "imports": [],
      "exports": [
        "HomepageShowcasePage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": []
    },
    "EmailVerificationPage": {
      "name": "EmailVerificationPage",
      "filePath": "pages/auth/EmailVerificationPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/auth/EmailVerificationPage.tsx",
      "serviceCategory": "auth",
      "serviceType": "Auth System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "API data fetching",
        "Calendar functionality",
        "Search functionality"
      ],
      "imports": [],
      "exports": [
        "EmailVerificationPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Calendar Integration",
        "Search Functionality"
      ]
    },
    "ForgotPasswordPage": {
      "name": "ForgotPasswordPage",
      "filePath": "pages/auth/ForgotPasswordPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/auth/ForgotPasswordPage.tsx",
      "serviceCategory": "auth",
      "serviceType": "Auth System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "API data fetching"
      ],
      "imports": [],
      "exports": [
        "ForgotPasswordPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Form Handling"
      ]
    },
    "RegisterPage": {
      "name": "RegisterPage",
      "filePath": "pages/auth/RegisterPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/auth/RegisterPage.tsx",
      "serviceCategory": "auth",
      "serviceType": "Auth System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "API data fetching",
        "Calendar functionality"
      ],
      "imports": [
        {
          "path": "../../components/ui/SocialLoginButtons",
          "fullMatch": "import { SocialLoginButtons } from '../../components/ui/SocialLoginButtons'"
        },
        {
          "path": "../../components/ui/PasswordInput",
          "fullMatch": "import { PasswordInput } from '../../components/ui/PasswordInput'"
        }
      ],
      "exports": [
        "RegisterPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling"
      ]
    },
    "ResetPasswordPage": {
      "name": "ResetPasswordPage",
      "filePath": "pages/auth/ResetPasswordPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/auth/ResetPasswordPage.tsx",
      "serviceCategory": "auth",
      "serviceType": "Auth System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "API data fetching",
        "Search functionality"
      ],
      "imports": [
        {
          "path": "../../components/ui/PasswordInput",
          "fullMatch": "import { PasswordInput } from '../../components/ui/PasswordInput'"
        }
      ],
      "exports": [
        "ResetPasswordPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Search Functionality"
      ]
    },
    "BookPerformerPage": {
      "name": "BookPerformerPage",
      "filePath": "pages/performers/BookPerformerPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/performers/BookPerformerPage.tsx",
      "serviceCategory": "performers",
      "serviceType": "Performer Management System",
      "functionality": [
        "Show performer profiles",
        "Handle performer booking",
        "Manage performer data",
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "API data fetching",
        "Calendar functionality",
        "Map integration",
        "Search functionality"
      ],
      "imports": [
        {
          "path": "../../mockdata/performers",
          "fullMatch": "import { mockPerformers } from '../../mockdata/performers'"
        }
      ],
      "exports": [
        "BookPerformerPage"
      ],
      "contextDescription": "Part of the performer management system. Displays performer profiles and handles performer-related interactions. Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Map Integration",
        "File Upload",
        "Social Sharing"
      ]
    },
    "BookVenuePage": {
      "name": "BookVenuePage",
      "filePath": "pages/book/BookVenuePage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/book/BookVenuePage.tsx",
      "serviceCategory": "book",
      "serviceType": "Book System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "API data fetching",
        "Calendar functionality",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "BookVenuePage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Data Fetching",
        "Map Integration",
        "Search Functionality",
        "Filtering"
      ]
    },
    "GigCreatorPage": {
      "name": "GigCreatorPage",
      "filePath": "pages/book-it/GigCreatorPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/book-it/GigCreatorPage.tsx",
      "serviceCategory": "book-it",
      "serviceType": "Book It System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "GigCreatorPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Map Integration"
      ]
    },
    "GigMarketplacePage": {
      "name": "GigMarketplacePage",
      "filePath": "pages/book-it/GigMarketplacePage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/book-it/GigMarketplacePage.tsx",
      "serviceCategory": "book-it",
      "serviceType": "Book It System",
      "functionality": [
        "Form handling",
        "Payment processing",
        "Calendar functionality",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "GigMarketplacePage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Payment Processing",
        "Map Integration"
      ]
    },
    "GigsMarketplacePage": {
      "name": "GigsMarketplacePage",
      "filePath": "pages/book-it/GigsMarketplacePage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/book-it/GigsMarketplacePage.tsx",
      "serviceCategory": "book-it",
      "serviceType": "Book It System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "Calendar functionality",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "GigsMarketplacePage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Map Integration",
        "Search Functionality",
        "Filtering"
      ]
    },
    "VenueMarketplacePage": {
      "name": "VenueMarketplacePage",
      "filePath": "pages/book-it/VenueMarketplacePage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/book-it/VenueMarketplacePage.tsx",
      "serviceCategory": "book-it",
      "serviceType": "Book It System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "API data fetching",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [
        {
          "path": "../../components/venue-marketplace/FilterSidebar",
          "fullMatch": "import { FilterSidebar } from '../../components/venue-marketplace/FilterSidebar'"
        },
        {
          "path": "../../components/venue-marketplace/VenueCard",
          "fullMatch": "import { VenueCard } from '../../components/venue-marketplace/VenueCard'"
        },
        {
          "path": "../../components/venue-marketplace/VenueListItem",
          "fullMatch": "import { VenueListItem } from '../../components/venue-marketplace/VenueListItem'"
        },
        {
          "path": "../../components/venue-marketplace/MapView",
          "fullMatch": "import { MapView } from '../../components/venue-marketplace/MapView'"
        },
        {
          "path": "../../mockdata/venues",
          "fullMatch": "import { mockVenues } from '../../mockdata/venues'"
        }
      ],
      "exports": [
        "VenueMarketplacePage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Map Integration",
        "Search Functionality",
        "Filtering"
      ]
    },
    "BookingRequestPage": {
      "name": "BookingRequestPage",
      "filePath": "pages/book-it/venues/BookingRequestPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/book-it/venues/BookingRequestPage.tsx",
      "serviceCategory": "book-it/venues",
      "serviceType": "Book It/Venues System",
      "functionality": [
        "Show venue details",
        "Handle venue booking",
        "Display venue availability",
        "Manages component state",
        "Form handling",
        "API data fetching",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [
        {
          "path": "../../../mockdata/venues",
          "fullMatch": "import { mockVenues } from '../../../mockdata/venues'"
        }
      ],
      "exports": [
        "BookingRequestPage"
      ],
      "contextDescription": "Part of the venue system. Shows venue details, availability, and booking options. Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Map Integration"
      ]
    },
    "VenueDetailPage": {
      "name": "VenueDetailPage",
      "filePath": "pages/venues/VenueDetailPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/venues/VenueDetailPage.tsx",
      "serviceCategory": "venues",
      "serviceType": "Venues System",
      "functionality": [
        "Show venue details",
        "Handle venue booking",
        "Display venue availability",
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "API data fetching",
        "Calendar functionality",
        "Map integration",
        "Data filtering"
      ],
      "imports": [
        {
          "path": "../../mockdata/venues",
          "fullMatch": "import { mockVenues } from '../../mockdata/venues'"
        }
      ],
      "exports": [
        "VenueDetailPage"
      ],
      "contextDescription": "Part of the venue system. Shows venue details, availability, and booking options. Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Data Fetching",
        "Map Integration",
        "Filtering",
        "Social Sharing"
      ]
    },
    "BookingConfirmationPage": {
      "name": "BookingConfirmationPage",
      "filePath": "pages/bookings/BookingConfirmationPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/bookings/BookingConfirmationPage.tsx",
      "serviceCategory": "bookings",
      "serviceType": "Booking Management System",
      "functionality": [
        "Handle booking workflow",
        "Process booking steps",
        "Manage booking state",
        "Manage existing bookings",
        "Display booking history",
        "Handle booking modifications",
        "Manages component state",
        "Payment processing",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "BookingConfirmationPage"
      ],
      "contextDescription": "Part of the step-by-step booking process. Manages booking workflow states and user progress. Full page component with complete functionality.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Payment Processing",
        "Calendar Integration",
        "Map Integration",
        "File Download",
        "Social Sharing"
      ]
    },
    "edit": {
      "name": "edit",
      "filePath": "pages/hub/[id]/edit.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/hub/[id]/edit.tsx",
      "serviceCategory": "hub/[id]",
      "serviceType": "Hub/[Id] System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "API data fetching"
      ],
      "imports": [
        {
          "path": "../../hub/create",
          "fullMatch": "import { HubData } from '../../hub/create'"
        },
        {
          "path": "../../../components/hub-builder/HubBuilderNav",
          "fullMatch": "import { HubBuilderNav } from '../../../components/hub-builder/HubBuilderNav'"
        },
        {
          "path": "../../../components/hub-builder/SetupWizard",
          "fullMatch": "import { SetupWizard } from '../../../components/hub-builder/SetupWizard'"
        },
        {
          "path": "../../../components/hub-builder/DesignCustomizer",
          "fullMatch": "import { DesignCustomizer } from '../../../components/hub-builder/DesignCustomizer'"
        },
        {
          "path": "../../../components/hub-builder/SectionManager",
          "fullMatch": "import { SectionManager } from '../../../components/hub-builder/SectionManager'"
        },
        {
          "path": "../../../components/hub-builder/PermissionsRoles",
          "fullMatch": "import { PermissionsRoles } from '../../../components/hub-builder/PermissionsRoles'"
        },
        {
          "path": "../../../components/hub-builder/MonetizationSetup",
          "fullMatch": "import { MonetizationSetup } from '../../../components/hub-builder/MonetizationSetup'"
        },
        {
          "path": "../../../components/hub-builder/HubPreview",
          "fullMatch": "import { HubPreview } from '../../../components/hub-builder/HubPreview'"
        }
      ],
      "exports": [
        "default"
      ],
      "contextDescription": "",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Data Fetching"
      ]
    },
    "[slug]": {
      "name": "[slug]",
      "filePath": "pages/calendar/[slug].tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/calendar/[slug].tsx",
      "serviceCategory": "calendar",
      "serviceType": "Calendar & Scheduling System",
      "functionality": [
        "Display calendar views",
        "Handle date selection",
        "Show event scheduling",
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "API data fetching",
        "Calendar functionality",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [
        {
          "path": "../../components/calendar/CalendarTabs",
          "fullMatch": "import { CalendarTabs } from '../../components/calendar/CalendarTabs'"
        },
        {
          "path": "../../components/calendar/CalendarSidebar",
          "fullMatch": "import { CalendarSidebar } from '../../components/calendar/CalendarSidebar'"
        },
        {
          "path": "../../components/calendar/CalendarEngagementBar",
          "fullMatch": "import { CalendarEngagementBar } from '../../components/calendar/CalendarEngagementBar'"
        },
        {
          "path": "../../components/calendar/EventCard",
          "fullMatch": "import { EventCard } from '../../components/calendar/EventCard'"
        }
      ],
      "exports": [
        "default"
      ],
      "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Data Fetching",
        "Calendar Integration",
        "Map Integration"
      ]
    },
    "CalendarMarketplacePage": {
      "name": "CalendarMarketplacePage",
      "filePath": "pages/calendars/CalendarMarketplacePage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/calendars/CalendarMarketplacePage.tsx",
      "serviceCategory": "calendars",
      "serviceType": "Calendar Management System",
      "functionality": [
        "Display calendar views",
        "Handle date selection",
        "Show event scheduling",
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "API data fetching",
        "Calendar functionality",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [
        {
          "path": "../../components/calendars/CalendarCard",
          "fullMatch": "import { CalendarCard } from '../../components/calendars/CalendarCard'"
        },
        {
          "path": "../../components/calendars/CalendarFilters",
          "fullMatch": "import { CalendarFilters } from '../../components/calendars/CalendarFilters'"
        },
        {
          "path": "../../components/calendars/FeaturedCalendars",
          "fullMatch": "import { FeaturedCalendars } from '../../components/calendars/FeaturedCalendars'"
        }
      ],
      "exports": [
        "CalendarMarketplacePage"
      ],
      "contextDescription": "Component of the calendar and scheduling system. Provides calendar views, date selection, and event scheduling. Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Calendar Integration",
        "Map Integration",
        "Search Functionality",
        "Filtering"
      ]
    },
    "create": {
      "name": "create",
      "filePath": "pages/hub/create.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/hub/create.tsx",
      "serviceCategory": "hub",
      "serviceType": "Community Hub System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "API data fetching"
      ],
      "imports": [
        {
          "path": "../../components/hub-builder/HubBuilderNav",
          "fullMatch": "import { HubBuilderNav } from '../../components/hub-builder/HubBuilderNav'"
        },
        {
          "path": "../../components/hub-builder/SetupWizard",
          "fullMatch": "import { SetupWizard } from '../../components/hub-builder/SetupWizard'"
        },
        {
          "path": "../../components/hub-builder/DesignCustomizer",
          "fullMatch": "import { DesignCustomizer } from '../../components/hub-builder/DesignCustomizer'"
        },
        {
          "path": "../../components/hub-builder/SectionManager",
          "fullMatch": "import { SectionManager } from '../../components/hub-builder/SectionManager'"
        },
        {
          "path": "../../components/hub-builder/PermissionsRoles",
          "fullMatch": "import { PermissionsRoles } from '../../components/hub-builder/PermissionsRoles'"
        },
        {
          "path": "../../components/hub-builder/MonetizationSetup",
          "fullMatch": "import { MonetizationSetup } from '../../components/hub-builder/MonetizationSetup'"
        },
        {
          "path": "../../components/hub-builder/HubPreview",
          "fullMatch": "import { HubPreview } from '../../components/hub-builder/HubPreview'"
        }
      ],
      "exports": [
        "default"
      ],
      "contextDescription": "",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling"
      ]
    },
    "CheckoutConfirmationPage": {
      "name": "CheckoutConfirmationPage",
      "filePath": "pages/checkout/CheckoutConfirmationPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/checkout/CheckoutConfirmationPage.tsx",
      "serviceCategory": "checkout",
      "serviceType": "Payment Checkout System",
      "functionality": [
        "Process payments",
        "Handle purchase flow",
        "Generate receipts",
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "Modal dialog display",
        "Payment processing",
        "Calendar functionality",
        "Map integration",
        "Data filtering"
      ],
      "imports": [
        {
          "path": "../../components/booking/ProgressIndicator",
          "fullMatch": "import { ProgressIndicator } from '../../components/booking/ProgressIndicator'"
        },
        {
          "path": "../../components/checkout/Invoice",
          "fullMatch": "import { Invoice } from '../../components/checkout/Invoice'"
        }
      ],
      "exports": [
        "CheckoutConfirmationPage"
      ],
      "contextDescription": "Component of the payment and purchase system. Processes payments and handles transaction flow. Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Calendar Integration",
        "Map Integration",
        "Filtering"
      ]
    },
    "CheckoutDetailsPage": {
      "name": "CheckoutDetailsPage",
      "filePath": "pages/checkout/CheckoutDetailsPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/checkout/CheckoutDetailsPage.tsx",
      "serviceCategory": "checkout",
      "serviceType": "Payment Checkout System",
      "functionality": [
        "Process payments",
        "Handle purchase flow",
        "Generate receipts",
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "Payment processing",
        "Map integration",
        "Data filtering"
      ],
      "imports": [
        {
          "path": "../../components/booking/ProgressIndicator",
          "fullMatch": "import { ProgressIndicator } from '../../components/booking/ProgressIndicator'"
        }
      ],
      "exports": [
        "CheckoutDetailsPage"
      ],
      "contextDescription": "Component of the payment and purchase system. Processes payments and handles transaction flow. Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Payment Processing",
        "Map Integration",
        "Filtering"
      ]
    },
    "CheckoutPaymentPage": {
      "name": "CheckoutPaymentPage",
      "filePath": "pages/checkout/CheckoutPaymentPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/checkout/CheckoutPaymentPage.tsx",
      "serviceCategory": "checkout",
      "serviceType": "Payment Checkout System",
      "functionality": [
        "Process payments",
        "Handle purchase flow",
        "Generate receipts",
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "Modal dialog display",
        "Payment processing",
        "Map integration"
      ],
      "imports": [
        {
          "path": "../../components/booking/ProgressIndicator",
          "fullMatch": "import { ProgressIndicator } from '../../components/booking/ProgressIndicator'"
        },
        {
          "path": "../../components/checkout/Invoice",
          "fullMatch": "import { Invoice } from '../../components/checkout/Invoice'"
        }
      ],
      "exports": [
        "CheckoutPaymentPage"
      ],
      "contextDescription": "Component of the payment and purchase system. Processes payments and handles transaction flow. Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Payment Processing",
        "Map Integration"
      ]
    },
    "calendars": {
      "name": "calendars",
      "filePath": "pages/dashboard/calendars.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/dashboard/calendars.tsx",
      "serviceCategory": "dashboard",
      "serviceType": "Analytics Dashboard System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "Calendar functionality",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [
        {
          "path": "../../components/dashboard/calendars/CalendarGrid",
          "fullMatch": "import { CalendarGrid } from '../../components/dashboard/calendars/CalendarGrid'"
        },
        {
          "path": "../../components/dashboard/calendars/AnalyticsOverview",
          "fullMatch": "import { AnalyticsOverview } from '../../components/dashboard/calendars/AnalyticsOverview'"
        },
        {
          "path": "../../components/dashboard/calendars/PendingActions",
          "fullMatch": "import { PendingActions } from '../../components/dashboard/calendars/PendingActions'"
        },
        {
          "path": "../../components/dashboard/calendars/QuickActionsBar",
          "fullMatch": "import { QuickActionsBar } from '../../components/dashboard/calendars/QuickActionsBar'"
        }
      ],
      "exports": [
        "CalendarDashboardPage"
      ],
      "contextDescription": "",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Calendar Integration",
        "Map Integration",
        "Search Functionality",
        "Filtering"
      ]
    },
    "TicketCreatorPage": {
      "name": "TicketCreatorPage",
      "filePath": "pages/events/TicketCreatorPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/events/TicketCreatorPage.tsx",
      "serviceCategory": "events",
      "serviceType": "Event Management System",
      "functionality": [
        "Display event information",
        "Handle event interactions",
        "Manage event data",
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "Modal dialog display",
        "API data fetching",
        "Calendar functionality",
        "Map integration",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "TicketCreatorPage"
      ],
      "contextDescription": "Part of the event management and display system. Shows event information and handles event interactions. Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Map Integration",
        "Filtering"
      ]
    },
    "help": {
      "name": "help",
      "filePath": "pages/help.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/help.tsx",
      "serviceCategory": "root",
      "serviceType": "Root System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "Payment processing",
        "Calendar functionality",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "default"
      ],
      "contextDescription": "",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Payment Processing",
        "Calendar Integration",
        "Map Integration",
        "Search Functionality",
        "Filtering",
        "Notifications"
      ]
    },
    "analytics": {
      "name": "analytics",
      "filePath": "pages/hub/[slug]/analytics.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/hub/[slug]/analytics.tsx",
      "serviceCategory": "hub/[slug]",
      "serviceType": "Hub/[Slug] System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "API data fetching",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [
        {
          "path": "../../../components/layout/Footer",
          "fullMatch": "import { Footer } from '../../../components/layout/Footer'"
        },
        {
          "path": "../../../components/hub/analytics/OverviewMetrics",
          "fullMatch": "import { OverviewMetrics } from '../../../components/hub/analytics/OverviewMetrics'"
        },
        {
          "path": "../../../components/hub/analytics/ContentPerformance",
          "fullMatch": "import { ContentPerformance } from '../../../components/hub/analytics/ContentPerformance'"
        },
        {
          "path": "../../../components/hub/analytics/MemberInsights",
          "fullMatch": "import { MemberInsights } from '../../../components/hub/analytics/MemberInsights'"
        },
        {
          "path": "../../../components/hub/analytics/RevenueReports",
          "fullMatch": "import { RevenueReports } from '../../../components/hub/analytics/RevenueReports'"
        },
        {
          "path": "../../../components/hub/analytics/ExportTools",
          "fullMatch": "import { ExportTools } from '../../../components/hub/analytics/ExportTools'"
        }
      ],
      "exports": [
        "default"
      ],
      "contextDescription": "",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Data Fetching"
      ]
    },
    "articles": {
      "name": "articles",
      "filePath": "pages/hub/[slug]/articles.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/hub/[slug]/articles.tsx",
      "serviceCategory": "hub/[slug]",
      "serviceType": "Hub/[Slug] System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "API data fetching",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [
        {
          "path": "../../../components/layout/Header",
          "fullMatch": "import { Header } from '../../../components/layout/Header'"
        },
        {
          "path": "../../../components/layout/Footer",
          "fullMatch": "import { Footer } from '../../../components/layout/Footer'"
        },
        {
          "path": "../../../components/hub/articles/ArticleHero",
          "fullMatch": "import { ArticleHero } from '../../../components/hub/articles/ArticleHero'"
        },
        {
          "path": "../../../components/hub/articles/ArticleCard",
          "fullMatch": "import { ArticleCard } from '../../../components/hub/articles/ArticleCard'"
        },
        {
          "path": "../../../components/hub/articles/PopularArticles",
          "fullMatch": "import { PopularArticles } from '../../../components/hub/articles/PopularArticles'"
        }
      ],
      "exports": [
        "HubArticlesPage"
      ],
      "contextDescription": "",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Data Fetching",
        "Map Integration",
        "Search Functionality",
        "Filtering",
        "Social Sharing"
      ]
    },
    "community": {
      "name": "community",
      "filePath": "pages/hub/[slug]/community.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/hub/[slug]/community.tsx",
      "serviceCategory": "hub/[slug]",
      "serviceType": "Hub/[Slug] System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "API data fetching",
        "Calendar functionality",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [
        {
          "path": "../../../components/layout/MainHeader",
          "fullMatch": "import { MainHeader } from '../../../components/layout/MainHeader'"
        },
        {
          "path": "../../../components/layout/Footer",
          "fullMatch": "import { Footer } from '../../../components/layout/Footer'"
        }
      ],
      "exports": [
        "default"
      ],
      "contextDescription": "",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Data Fetching",
        "Calendar Integration",
        "Map Integration",
        "Search Functionality",
        "Filtering",
        "Social Sharing"
      ]
    },
    "events": {
      "name": "events",
      "filePath": "pages/hub/[slug]/events.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/hub/[slug]/events.tsx",
      "serviceCategory": "hub/[slug]",
      "serviceType": "Hub/[Slug] System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "API data fetching",
        "Calendar functionality",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [
        {
          "path": "../../../components/layout/Header",
          "fullMatch": "import { Header } from '../../../components/layout/Header'"
        },
        {
          "path": "../../../components/layout/Footer",
          "fullMatch": "import { Footer } from '../../../components/layout/Footer'"
        },
        {
          "path": "../../../components/hub/events/EventViewToggle",
          "fullMatch": "import { EventViewToggle } from '../../../components/hub/events/EventViewToggle'"
        },
        {
          "path": "../../../components/hub/events/EventFilters",
          "fullMatch": "import { EventFilters } from '../../../components/hub/events/EventFilters'"
        },
        {
          "path": "../../../components/hub/events/CalendarView",
          "fullMatch": "import { CalendarView } from '../../../components/hub/events/CalendarView'"
        },
        {
          "path": "../../../components/hub/events/ListView",
          "fullMatch": "import { ListView } from '../../../components/hub/events/ListView'"
        },
        {
          "path": "../../../components/hub/events/MapView",
          "fullMatch": "import { MapView } from '../../../components/hub/events/MapView'"
        }
      ],
      "exports": [
        "HubEventsPage"
      ],
      "contextDescription": "",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Data Fetching",
        "Calendar Integration",
        "Map Integration",
        "Search Functionality",
        "Filtering",
        "Social Sharing"
      ]
    },
    "gallery": {
      "name": "gallery",
      "filePath": "pages/hub/[slug]/gallery.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/hub/[slug]/gallery.tsx",
      "serviceCategory": "hub/[slug]",
      "serviceType": "Hub/[Slug] System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "Modal dialog display",
        "API data fetching",
        "Calendar functionality",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [
        {
          "path": "../../../components/hub/gallery/MediaGrid",
          "fullMatch": "import { MediaGrid } from '../../../components/hub/gallery/MediaGrid'"
        },
        {
          "path": "../../../components/hub/gallery/MediaLightbox",
          "fullMatch": "import { MediaLightbox } from '../../../components/hub/gallery/MediaLightbox'"
        },
        {
          "path": "../../../components/hub/gallery/MediaUploader",
          "fullMatch": "import { MediaUploader } from '../../../components/hub/gallery/MediaUploader'"
        },
        {
          "path": "../../../components/hub/gallery/AlbumsList",
          "fullMatch": "import { AlbumsList } from '../../../components/hub/gallery/AlbumsList'"
        }
      ],
      "exports": [
        "default"
      ],
      "contextDescription": "",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Data Fetching",
        "Map Integration",
        "Search Functionality",
        "Filtering",
        "File Upload",
        "Social Sharing"
      ]
    },
    "performers": {
      "name": "performers",
      "filePath": "pages/hub/[slug]/performers.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/hub/[slug]/performers.tsx",
      "serviceCategory": "hub/[slug]",
      "serviceType": "Hub/[Slug] System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "API data fetching",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [
        {
          "path": "../../../components/layout/Header",
          "fullMatch": "import { Header } from '../../../components/layout/Header'"
        },
        {
          "path": "../../../components/layout/Footer",
          "fullMatch": "import { Footer } from '../../../components/layout/Footer'"
        },
        {
          "path": "../../../components/hub/directory/DirectoryFilters",
          "fullMatch": "import { DirectoryFilters } from '../../../components/hub/directory/DirectoryFilters'"
        },
        {
          "path": "../../../components/hub/directory/DirectoryCard",
          "fullMatch": "import { DirectoryCard } from '../../../components/hub/directory/DirectoryCard'"
        },
        {
          "path": "../../../mockdata/performers",
          "fullMatch": "import { mockPerformers } from '../../../mockdata/performers'"
        }
      ],
      "exports": [
        "default"
      ],
      "contextDescription": "",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Data Fetching",
        "Map Integration",
        "Search Functionality",
        "Filtering",
        "Social Sharing"
      ]
    },
    "venues": {
      "name": "venues",
      "filePath": "pages/my/venues.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/my/venues.tsx",
      "serviceCategory": "my",
      "serviceType": "My System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "Calendar functionality",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [
        {
          "path": "../../mockdata/venues",
          "fullMatch": "import { mockVenues } from '../../mockdata/venues'"
        }
      ],
      "exports": [
        "default"
      ],
      "contextDescription": "",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Calendar Integration",
        "Map Integration",
        "Filtering",
        "File Upload",
        "Social Sharing",
        "Notifications"
      ]
    },
    "index": {
      "name": "index",
      "filePath": "pages/hubs/index.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/hubs/index.tsx",
      "serviceCategory": "hubs",
      "serviceType": "Hub Discovery System",
      "functionality": [
        "Community hub functionality",
        "Hub discovery",
        "Hub management",
        "Form handling",
        "Map integration",
        "Search functionality"
      ],
      "imports": [],
      "exports": [
        "default"
      ],
      "contextDescription": "Component of the community hub system. Handles hub discovery, creation, and management.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "Form Handling",
        "Map Integration",
        "Social Sharing"
      ]
    },
    "logout": {
      "name": "logout",
      "filePath": "pages/logout.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/logout.tsx",
      "serviceCategory": "root",
      "serviceType": "Root System",
      "functionality": [
        "Handles side effects"
      ],
      "imports": [],
      "exports": [
        "default"
      ],
      "contextDescription": "",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "Side Effects"
      ]
    },
    "FanDashboardPage": {
      "name": "FanDashboardPage",
      "filePath": "pages/my/FanDashboardPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/my/FanDashboardPage.tsx",
      "serviceCategory": "my",
      "serviceType": "My System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "API data fetching",
        "Calendar functionality",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [
        {
          "path": "../../mockdata/fanDashboard",
          "fullMatch": "import { followedArtists, upcomingShows, exclusiveContent, userActivity } from '../../mockdata/fanDashboard'"
        },
        {
          "path": "../../components/check-in/PlannedEventsWidget",
          "fullMatch": "import { PlannedEventsWidget } from '../../components/check-in/PlannedEventsWidget'"
        },
        {
          "path": "../../components/check-in/CheckInFeed",
          "fullMatch": "import { CheckInFeed } from '../../components/check-in/CheckInFeed'"
        }
      ],
      "exports": [
        "FanDashboardPage"
      ],
      "contextDescription": "Shows analytics and management interface. Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Calendar Integration",
        "Map Integration",
        "Filtering",
        "File Upload"
      ]
    },
    "calendar": {
      "name": "calendar",
      "filePath": "pages/my/calendar.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/my/calendar.tsx",
      "serviceCategory": "my",
      "serviceType": "My System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "Modal dialog display",
        "API data fetching",
        "Calendar functionality",
        "Map integration",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "default"
      ],
      "contextDescription": "",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Data Fetching",
        "Calendar Integration",
        "Map Integration",
        "Filtering"
      ]
    },
    "dashboard": {
      "name": "dashboard",
      "filePath": "pages/my/dashboard.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/my/dashboard.tsx",
      "serviceCategory": "my",
      "serviceType": "My System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "API data fetching",
        "Calendar functionality",
        "Map integration",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "default"
      ],
      "contextDescription": "",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Data Fetching",
        "Calendar Integration",
        "Map Integration"
      ]
    },
    "MarketReportPage": {
      "name": "MarketReportPage",
      "filePath": "pages/performers/MarketReportPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/performers/MarketReportPage.tsx",
      "serviceCategory": "performers",
      "serviceType": "Performer Management System",
      "functionality": [
        "Show performer profiles",
        "Handle performer booking",
        "Manage performer data",
        "Manages component state",
        "Form handling",
        "Calendar functionality",
        "Map integration",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "MarketReportPage"
      ],
      "contextDescription": "Part of the performer management system. Displays performer profiles and handles performer-related interactions. Full page component with complete functionality.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "recharts",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Map Integration",
        "Filtering"
      ]
    },
    "PerformerDiscoveryPage": {
      "name": "PerformerDiscoveryPage",
      "filePath": "pages/performers/PerformerDiscoveryPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/performers/PerformerDiscoveryPage.tsx",
      "serviceCategory": "performers",
      "serviceType": "Performer Management System",
      "functionality": [
        "Show performer profiles",
        "Handle performer booking",
        "Manage performer data",
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "Calendar functionality",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [
        {
          "path": "../../mockdata/performers",
          "fullMatch": "import { mockPerformers } from '../../mockdata/performers'"
        },
        {
          "path": "../../components/performers/FilterSidebar",
          "fullMatch": "import { FilterSidebar } from '../../components/performers/FilterSidebar'"
        },
        {
          "path": "../../components/performers/PerformerGrid",
          "fullMatch": "import { PerformerGrid } from '../../components/performers/PerformerGrid'"
        },
        {
          "path": "../../components/performers/PerformerList",
          "fullMatch": "import { PerformerList } from '../../components/performers/PerformerList'"
        },
        {
          "path": "../../components/performers/PerformerCalendar",
          "fullMatch": "import { PerformerCalendar } from '../../components/performers/PerformerCalendar'"
        },
        {
          "path": "../../components/performers/DiscoverySections",
          "fullMatch": "import { DiscoverySections } from '../../components/performers/DiscoverySections'"
        }
      ],
      "exports": [
        "PerformerDiscoveryPage"
      ],
      "contextDescription": "Part of the performer management system. Displays performer profiles and handles performer-related interactions. Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react",
        "@kit/ui/client-only"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Calendar Integration",
        "Map Integration",
        "Search Functionality",
        "Filtering"
      ]
    },
    "PerformerManagementPage": {
      "name": "PerformerManagementPage",
      "filePath": "pages/performers/PerformerManagementPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/performers/PerformerManagementPage.tsx",
      "serviceCategory": "performers",
      "serviceType": "Performer Management System",
      "functionality": [
        "Show performer profiles",
        "Handle performer booking",
        "Manage performer data",
        "Manages component state",
        "Form handling",
        "Payment processing",
        "Calendar functionality",
        "Map integration",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "PerformerManagementPage"
      ],
      "contextDescription": "Part of the performer management system. Displays performer profiles and handles performer-related interactions. Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Payment Processing",
        "Calendar Integration",
        "Map Integration",
        "Filtering",
        "Social Sharing",
        "Notifications"
      ]
    },
    "PerformerOnboardingPage": {
      "name": "PerformerOnboardingPage",
      "filePath": "pages/performers/PerformerOnboardingPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/performers/PerformerOnboardingPage.tsx",
      "serviceCategory": "performers",
      "serviceType": "Performer Management System",
      "functionality": [
        "Show performer profiles",
        "Handle performer booking",
        "Manage performer data",
        "Manages component state",
        "Form handling",
        "Payment processing",
        "Calendar functionality",
        "Map integration",
        "Search functionality"
      ],
      "imports": [],
      "exports": [
        "PerformerOnboardingPage"
      ],
      "contextDescription": "Part of the performer management system. Displays performer profiles and handles performer-related interactions. Full page component with complete functionality.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Payment Processing",
        "Calendar Integration",
        "Search Functionality"
      ]
    },
    "PerformerProfilePage": {
      "name": "PerformerProfilePage",
      "filePath": "pages/performers/PerformerProfilePage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/performers/PerformerProfilePage.tsx",
      "serviceCategory": "performers",
      "serviceType": "Performer Management System",
      "functionality": [
        "Show performer profiles",
        "Handle performer booking",
        "Manage performer data",
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "API data fetching",
        "Payment processing",
        "Calendar functionality",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [
        {
          "path": "../../mockdata/performers",
          "fullMatch": "import { mockPerformers } from '../../mockdata/performers'"
        }
      ],
      "exports": [
        "PerformerProfilePage"
      ],
      "contextDescription": "Part of the performer management system. Displays performer profiles and handles performer-related interactions. Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Data Fetching",
        "Calendar Integration",
        "Map Integration",
        "Search Functionality",
        "Filtering",
        "Social Sharing"
      ]
    },
    "UserProfilePage": {
      "name": "UserProfilePage",
      "filePath": "pages/profile/UserProfilePage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/profile/UserProfilePage.tsx",
      "serviceCategory": "profile",
      "serviceType": "User Profile System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [
        {
          "path": "../../components/profile/PublicCalendar",
          "fullMatch": "import { PublicCalendar } from '../../components/profile/PublicCalendar'"
        },
        {
          "path": "../../components/profile/LikedPerformers",
          "fullMatch": "import { LikedPerformers } from '../../components/profile/LikedPerformers'"
        },
        {
          "path": "../../components/profile/LikedVenues",
          "fullMatch": "import { LikedVenues } from '../../components/profile/LikedVenues'"
        },
        {
          "path": "../../components/profile/UserComments",
          "fullMatch": "import { UserComments } from '../../components/profile/UserComments'"
        },
        {
          "path": "../../components/profile/SharedCalendars",
          "fullMatch": "import { SharedCalendars } from '../../components/profile/SharedCalendars'"
        }
      ],
      "exports": [
        "UserProfilePage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Moderate",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Calendar Integration",
        "Map Integration",
        "Social Sharing"
      ]
    },
    "UserProfileSettingsPage": {
      "name": "UserProfileSettingsPage",
      "filePath": "pages/profile/UserProfileSettingsPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/profile/UserProfileSettingsPage.tsx",
      "serviceCategory": "profile",
      "serviceType": "User Profile System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "API data fetching",
        "Calendar functionality",
        "Map integration",
        "Search functionality"
      ],
      "imports": [
        {
          "path": "../../components/profile/CreateSharedCalendar",
          "fullMatch": "import { CreateSharedCalendar } from '../../components/profile/CreateSharedCalendar'"
        }
      ],
      "exports": [
        "UserProfileSettingsPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Data Fetching",
        "Calendar Integration",
        "Map Integration",
        "Search Functionality",
        "Social Sharing",
        "Notifications"
      ]
    },
    "AccountSettingsPage": {
      "name": "AccountSettingsPage",
      "filePath": "pages/settings/AccountSettingsPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/settings/AccountSettingsPage.tsx",
      "serviceCategory": "settings",
      "serviceType": "Settings & Configuration System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "API data fetching",
        "Payment processing"
      ],
      "imports": [
        {
          "path": "../../components/settings/SettingsSidebar",
          "fullMatch": "import { SettingsSidebar } from '../../components/settings/SettingsSidebar'"
        },
        {
          "path": "../../components/settings/ProfileInformation",
          "fullMatch": "import { ProfileInformation } from '../../components/settings/ProfileInformation'"
        },
        {
          "path": "../../components/settings/PasswordSecurity",
          "fullMatch": "import { PasswordSecurity } from '../../components/settings/PasswordSecurity'"
        },
        {
          "path": "../../components/settings/PrivacySettings",
          "fullMatch": "import { PrivacySettings } from '../../components/settings/PrivacySettings'"
        },
        {
          "path": "../../components/settings/NotificationPreferences",
          "fullMatch": "import { NotificationPreferences } from '../../components/settings/NotificationPreferences'"
        }
      ],
      "exports": [
        "AccountSettingsPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Data Fetching",
        "Payment Processing",
        "Notifications"
      ]
    },
    "FeedPage": {
      "name": "FeedPage",
      "filePath": "pages/social/FeedPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/social/FeedPage.tsx",
      "serviceCategory": "social",
      "serviceType": "Social System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "API data fetching",
        "Calendar functionality",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "default"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Data Fetching",
        "Map Integration",
        "Search Functionality",
        "Filtering",
        "File Upload",
        "Social Sharing"
      ]
    },
    "FriendsPage": {
      "name": "FriendsPage",
      "filePath": "pages/social/FriendsPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/social/FriendsPage.tsx",
      "serviceCategory": "social",
      "serviceType": "Social System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "default"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Map Integration",
        "Search Functionality",
        "Filtering"
      ]
    },
    "GroupsPage": {
      "name": "GroupsPage",
      "filePath": "pages/social/GroupsPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/social/GroupsPage.tsx",
      "serviceCategory": "social",
      "serviceType": "Social System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "Calendar functionality",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "default"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Map Integration",
        "Search Functionality",
        "Filtering",
        "Social Sharing"
      ]
    },
    "MessagesPage": {
      "name": "MessagesPage",
      "filePath": "pages/social/MessagesPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/social/MessagesPage.tsx",
      "serviceCategory": "social",
      "serviceType": "Social System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "API data fetching",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "default"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Data Fetching",
        "Map Integration",
        "Search Functionality",
        "Filtering"
      ]
    },
    "NotificationsPage": {
      "name": "NotificationsPage",
      "filePath": "pages/social/NotificationsPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/social/NotificationsPage.tsx",
      "serviceCategory": "social",
      "serviceType": "Social System",
      "functionality": [
        "Manages component state",
        "Form handling",
        "API data fetching",
        "Calendar functionality",
        "Map integration",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "default"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Data Fetching",
        "Calendar Integration",
        "Map Integration",
        "Filtering",
        "Notifications"
      ]
    },
    "SocialFeedPage": {
      "name": "SocialFeedPage",
      "filePath": "pages/social/SocialFeedPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/social/SocialFeedPage.tsx",
      "serviceCategory": "social",
      "serviceType": "Social System",
      "functionality": [
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "API data fetching",
        "Calendar functionality",
        "Map integration",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "default"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Data Fetching",
        "Calendar Integration",
        "Map Integration",
        "Filtering",
        "Social Sharing"
      ]
    },
    "JazzQuartetPage": {
      "name": "JazzQuartetPage",
      "filePath": "pages/success-stories/JazzQuartetPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/success-stories/JazzQuartetPage.tsx",
      "serviceCategory": "success-stories",
      "serviceType": "Success Stories System",
      "functionality": [
        "Form handling",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "JazzQuartetPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Map Integration",
        "Notifications"
      ]
    },
    "SunsetMusicFestivalPage": {
      "name": "SunsetMusicFestivalPage",
      "filePath": "pages/success-stories/SunsetMusicFestivalPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/success-stories/SunsetMusicFestivalPage.tsx",
      "serviceCategory": "success-stories",
      "serviceType": "Success Stories System",
      "functionality": [
        "Form handling",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "SunsetMusicFestivalPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Map Integration"
      ]
    },
    "UrbanLoftPage": {
      "name": "UrbanLoftPage",
      "filePath": "pages/success-stories/UrbanLoftPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/success-stories/UrbanLoftPage.tsx",
      "serviceCategory": "success-stories",
      "serviceType": "Success Stories System",
      "functionality": [
        "Form handling",
        "API data fetching",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [],
      "exports": [
        "UrbanLoftPage"
      ],
      "contextDescription": "Full page component with complete functionality.",
      "complexity": "Simple",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "Form Handling",
        "Data Fetching",
        "Calendar Integration",
        "Map Integration"
      ]
    },
    "TicketDetailPage": {
      "name": "TicketDetailPage",
      "filePath": "pages/tickets/TicketDetailPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/tickets/TicketDetailPage.tsx",
      "serviceCategory": "tickets",
      "serviceType": "Ticketing System",
      "functionality": [
        "Handle ticket sales",
        "Display ticket information",
        "Manage ticket inventory",
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "Modal dialog display",
        "API data fetching",
        "Calendar functionality",
        "Map integration",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "TicketDetailPage"
      ],
      "contextDescription": "Component of the ticketing system. Handles ticket sales, display, and inventory management. Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Data Fetching",
        "Map Integration",
        "Filtering",
        "File Download"
      ]
    },
    "TicketMarketplacePage": {
      "name": "TicketMarketplacePage",
      "filePath": "pages/tickets/TicketMarketplacePage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/tickets/TicketMarketplacePage.tsx",
      "serviceCategory": "tickets",
      "serviceType": "Ticketing System",
      "functionality": [
        "Handle ticket sales",
        "Display ticket information",
        "Manage ticket inventory",
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "API data fetching",
        "Calendar functionality",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "default",
        "TicketMarketplacePage"
      ],
      "contextDescription": "Component of the ticketing system. Handles ticket sales, display, and inventory management. Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Data Fetching",
        "Map Integration",
        "Search Functionality",
        "Filtering"
      ]
    },
    "TicketPurchasePage": {
      "name": "TicketPurchasePage",
      "filePath": "pages/tickets/TicketPurchasePage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/tickets/TicketPurchasePage.tsx",
      "serviceCategory": "tickets",
      "serviceType": "Ticketing System",
      "functionality": [
        "Handle ticket sales",
        "Display ticket information",
        "Manage ticket inventory",
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "Modal dialog display",
        "Payment processing",
        "Calendar functionality",
        "Map integration"
      ],
      "imports": [
        {
          "path": "../../components/tickets/TicketPurchaseConfirmation",
          "fullMatch": "import { TicketPurchaseConfirmation } from '../../components/tickets/TicketPurchaseConfirmation'"
        }
      ],
      "exports": [
        "TicketPurchasePage"
      ],
      "contextDescription": "Component of the ticketing system. Handles ticket sales, display, and inventory management. Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Payment Processing",
        "Map Integration"
      ]
    },
    "TicketSelectionPage": {
      "name": "TicketSelectionPage",
      "filePath": "pages/tickets/TicketSelectionPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/tickets/TicketSelectionPage.tsx",
      "serviceCategory": "tickets",
      "serviceType": "Ticketing System",
      "functionality": [
        "Handle ticket sales",
        "Display ticket information",
        "Manage ticket inventory",
        "Manages component state",
        "Handles side effects",
        "API data fetching",
        "Payment processing",
        "Calendar functionality",
        "Map integration",
        "Data filtering"
      ],
      "imports": [
        {
          "path": "../../components/booking/ProgressIndicator",
          "fullMatch": "import { ProgressIndicator } from '../../components/booking/ProgressIndicator'"
        }
      ],
      "exports": [
        "TicketSelectionPage"
      ],
      "contextDescription": "Component of the ticketing system. Handles ticket sales, display, and inventory management. Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Data Fetching",
        "Payment Processing",
        "Map Integration",
        "Filtering"
      ]
    },
    "NewVenuesPage": {
      "name": "NewVenuesPage",
      "filePath": "pages/venues/NewVenuesPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/venues/NewVenuesPage.tsx",
      "serviceCategory": "venues",
      "serviceType": "Venues System",
      "functionality": [
        "Show venue details",
        "Handle venue booking",
        "Display venue availability",
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "API data fetching",
        "Calendar functionality",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "NewVenuesPage"
      ],
      "contextDescription": "Part of the venue system. Shows venue details, availability, and booking options. Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Data Fetching",
        "Map Integration",
        "Search Functionality",
        "Filtering"
      ]
    },
    "SubmitVenuePage": {
      "name": "SubmitVenuePage",
      "filePath": "pages/venues/SubmitVenuePage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/venues/SubmitVenuePage.tsx",
      "serviceCategory": "venues",
      "serviceType": "Venues System",
      "functionality": [
        "Show venue details",
        "Handle venue booking",
        "Display venue availability",
        "Manages component state",
        "Form handling",
        "API data fetching",
        "Calendar functionality",
        "Map integration",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "SubmitVenuePage"
      ],
      "contextDescription": "Part of the venue system. Shows venue details, availability, and booking options. Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Map Integration",
        "Filtering",
        "File Upload",
        "Notifications"
      ]
    },
    "TrendingVenuesPage": {
      "name": "TrendingVenuesPage",
      "filePath": "pages/venues/TrendingVenuesPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/venues/TrendingVenuesPage.tsx",
      "serviceCategory": "venues",
      "serviceType": "Venues System",
      "functionality": [
        "Show venue details",
        "Handle venue booking",
        "Display venue availability",
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "API data fetching",
        "Calendar functionality",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [],
      "exports": [
        "TrendingVenuesPage"
      ],
      "contextDescription": "Part of the venue system. Shows venue details, availability, and booking options. Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Data Fetching",
        "Map Integration",
        "Search Functionality",
        "Filtering"
      ]
    },
    "VenueManagementPage": {
      "name": "VenueManagementPage",
      "filePath": "pages/venues/VenueManagementPage.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/venues/VenueManagementPage.tsx",
      "serviceCategory": "venues",
      "serviceType": "Venues System",
      "functionality": [
        "Show venue details",
        "Handle venue booking",
        "Display venue availability",
        "Manages component state",
        "Form handling",
        "API data fetching",
        "Payment processing",
        "Calendar functionality",
        "Map integration",
        "Data filtering"
      ],
      "imports": [
        {
          "path": "../../mockdata/venues",
          "fullMatch": "import { mockVenues } from '../../mockdata/venues'"
        }
      ],
      "exports": [
        "VenueManagementPage"
      ],
      "contextDescription": "Part of the venue system. Shows venue details, availability, and booking options. Full page component with complete functionality.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Form Handling",
        "Payment Processing",
        "Calendar Integration",
        "Map Integration",
        "Filtering",
        "Social Sharing",
        "Notifications"
      ]
    },
    "[venueSlug]": {
      "name": "[venueSlug]",
      "filePath": "pages/venues/[venueId]/[venueSlug].tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/venues/[venueId]/[venueSlug].tsx",
      "serviceCategory": "venues/[venueId]",
      "serviceType": "Venues/[VenueId] System",
      "functionality": [
        "Show venue details",
        "Handle venue booking",
        "Display venue availability",
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "Modal dialog display",
        "API data fetching",
        "Payment processing",
        "Calendar functionality",
        "Map integration",
        "Search functionality",
        "Data filtering"
      ],
      "imports": [
        {
          "path": "../../../context/CheckInContext",
          "fullMatch": "import { useCheckIn } from '../../../context/CheckInContext'"
        },
        {
          "path": "../../../mockdata/venues",
          "fullMatch": "import { mockVenues } from '../../../mockdata/venues'"
        },
        {
          "path": "../../../components/venue-profile/VenueImageGallery",
          "fullMatch": "import { VenueImageGallery } from '../../../components/venue-profile/VenueImageGallery'"
        },
        {
          "path": "../../../components/venue-profile/VenueBookingWidget",
          "fullMatch": "import { VenueBookingWidget } from '../../../components/venue-profile/VenueBookingWidget'"
        },
        {
          "path": "../../../components/venue-profile/VenueAmenities",
          "fullMatch": "import { VenueAmenities } from '../../../components/venue-profile/VenueAmenities'"
        },
        {
          "path": "../../../components/venue-profile/VenuePricing",
          "fullMatch": "import { VenuePricing } from '../../../components/venue-profile/VenuePricing'"
        },
        {
          "path": "../../../components/venue-profile/VenueAvailabilityCalendar",
          "fullMatch": "import { VenueAvailabilityCalendar } from '../../../components/venue-profile/VenueAvailabilityCalendar'"
        },
        {
          "path": "../../../components/venue-profile/VenueSpaceDetails",
          "fullMatch": "import { VenueSpaceDetails } from '../../../components/venue-profile/VenueSpaceDetails'"
        },
        {
          "path": "../../../components/venue-profile/VenueLocation",
          "fullMatch": "import { VenueLocation } from '../../../components/venue-profile/VenueLocation'"
        },
        {
          "path": "../../../components/venue-profile/VenueReviews",
          "fullMatch": "import { VenueReviews } from '../../../components/venue-profile/VenueReviews'"
        },
        {
          "path": "../../../components/venue-profile/VenueEvents",
          "fullMatch": "import { VenueEvents } from '../../../components/venue-profile/VenueEvents'"
        },
        {
          "path": "../../../components/venue-profile/VenueFAQ",
          "fullMatch": "import { VenueFAQ } from '../../../components/venue-profile/VenueFAQ'"
        },
        {
          "path": "../../../components/venue-profile/VenuePhotoGallery",
          "fullMatch": "import { VenuePhotoGallery } from '../../../components/venue-profile/VenuePhotoGallery'"
        },
        {
          "path": "../../../components/venue-profile/VenueSimilar",
          "fullMatch": "import { VenueSimilar } from '../../../components/venue-profile/VenueSimilar'"
        },
        {
          "path": "../../../components/check-in/CheckInButton",
          "fullMatch": "import { CheckInButton } from '../../../components/check-in/CheckInButton'"
        },
        {
          "path": "../../../components/check-in/CheckInModal",
          "fullMatch": "import { CheckInModal } from '../../../components/check-in/CheckInModal'"
        },
        {
          "path": "../../../components/check-in/CheckInFeed",
          "fullMatch": "import { CheckInFeed } from '../../../components/check-in/CheckInFeed'"
        }
      ],
      "exports": [
        "default"
      ],
      "contextDescription": "Part of the venue system. Shows venue details, availability, and booking options.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "lucide-react",
        "react-router"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Data Fetching",
        "Payment Processing",
        "Calendar Integration",
        "Map Integration",
        "Search Functionality",
        "Filtering",
        "Social Sharing"
      ]
    },
    "book": {
      "name": "book",
      "filePath": "pages/venues/[venueId]/book.tsx",
      "fullPath": "apps/web/app/components/magic-patterns/pages/venues/[venueId]/book.tsx",
      "serviceCategory": "venues/[venueId]",
      "serviceType": "Venues/[VenueId] System",
      "functionality": [
        "Show venue details",
        "Handle venue booking",
        "Display venue availability",
        "Manages component state",
        "Handles side effects",
        "Form handling",
        "Payment processing",
        "Data filtering"
      ],
      "imports": [
        {
          "path": "../../../mockdata/venues",
          "fullMatch": "import { mockVenues } from '../../../mockdata/venues'"
        },
        {
          "path": "../../../components/booking-form/EventDetailsForm",
          "fullMatch": "import { EventDetailsForm } from '../../../components/booking-form/EventDetailsForm'"
        },
        {
          "path": "../../../components/booking-form/SpaceSetupForm",
          "fullMatch": "import { SpaceSetupForm } from '../../../components/booking-form/SpaceSetupForm'"
        },
        {
          "path": "../../../components/booking-form/ServicesAddonsForm",
          "fullMatch": "import { ServicesAddonsForm } from '../../../components/booking-form/ServicesAddonsForm'"
        },
        {
          "path": "../../../components/booking-form/ContactPaymentForm",
          "fullMatch": "import { ContactPaymentForm } from '../../../components/booking-form/ContactPaymentForm'"
        },
        {
          "path": "../../../components/booking-form/ReviewSubmitForm",
          "fullMatch": "import { ReviewSubmitForm } from '../../../components/booking-form/ReviewSubmitForm'"
        },
        {
          "path": "../../../components/booking-form/BookingFormProgress",
          "fullMatch": "import { BookingFormProgress } from '../../../components/booking-form/BookingFormProgress'"
        },
        {
          "path": "../../../components/booking-form/BookingConfirmation",
          "fullMatch": "import { BookingConfirmation } from '../../../components/booking-form/BookingConfirmation'"
        }
      ],
      "exports": [
        "default"
      ],
      "contextDescription": "Part of the venue system. Shows venue details, availability, and booking options.",
      "complexity": "Complex",
      "dependencies": [
        "react",
        "react-router",
        "lucide-react"
      ],
      "features": [
        "State Management",
        "Side Effects",
        "Form Handling",
        "Data Fetching",
        "Payment Processing",
        "Filtering"
      ]
    }
  }
}